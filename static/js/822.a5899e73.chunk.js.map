{"version":3,"file":"static/js/822.a5899e73.chunk.js","mappings":"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","sources":["pages/Catalog/Catalog.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchGameBySearchQuery, fetchNewGames } from 'utils';\nimport {\n  Pagination,\n  SearchForm,\n  Loader,\n  GameList,\n  ErrorComponent,\n} from 'components';\nimport styled from 'styled-components';\nimport { useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\n\nconst Catalog = () => {\n  const [games, setGames] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [params, setParams] = useSearchParams();\n\n  const searchParams = useMemo(() => Object.fromEntries([...params]), [params]);\n\n  const {\n    ordering = null,\n    query = null,\n    genre = null,\n    page = 1,\n  } = searchParams;\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (query || ordering || genre) {\n      fetchGameBySearchQuery(query, page, ordering, genre)\n        .then(({ data }) => {\n          const { results, count } = data;\n\n          setGames(results);\n          setTotalPages(count / 20);\n\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsError(true);\n          setIsLoading(false);\n        });\n    } else {\n      //temporarily solution\n      fetchNewGames(page, 20)\n        .then(({ data }) => {\n          const { results, count } = data;\n\n          setGames(results);\n          setTotalPages(count / 20);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsError(true);\n          setIsLoading(false);\n        });\n    }\n  }, [query, ordering, genre, page, setParams, searchParams]);\n\n  const handlePageChange = page => {\n    setParams({ ...searchParams, page: page + 1 });\n\n    setIsLoading(true);\n\n    window.scroll({\n      top: 0,\n    });\n  };\n  return (\n    <Page>\n      {isError ? (\n        <ErrorComponent />\n      ) : (\n        <>\n          <SearchForm className={'catalog'} />\n          {isLoading ? (\n            <Loader className={'loader-catalog'} color={'white'} />\n          ) : games.length !== 0 ? (\n            <>\n              <GameList games={games} />\n              <Pagination\n                totalPages={totalPages <= 500 ? totalPages : 500}\n                changePage={handlePageChange}\n                page={page}\n              />\n            </>\n          ) : (\n            <h1 style={{ color: 'white' }}>No matches</h1>\n          )}\n        </>\n      )}\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  padding: 10px 0 40px 0;\n  margin-top: 61px;\n  box-sizing: border-box;\n  min-height: calc(100vh - 61px);\n  position: relative;\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n  gap: 20px;\n\n  @media screen and (min-width: 1200px) {\n    padding: 40px 0;\n  }\n`;\n\nexport default Catalog;\n"],"names":["Page","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","games","setGames","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isError","setIsError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchParams","useMemo","Object","fromEntries","_toConsumableArray","_searchParams$orderin","ordering","_searchParams$query","query","_searchParams$genre","genre","_searchParams$page","page","useEffect","fetchGameBySearchQuery","then","_ref","data","results","count","catch","error","console","log","fetchNewGames","_ref2","_jsx","children","ErrorComponent","_jsxs","_Fragment","SearchForm","className","Loader","color","length","GameList","Pagination","changePage","_objectSpread","window","scroll","top","style"],"sourceRoot":""}