{"version":3,"file":"static/js/316.f83b93f5.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/BookmarkButton/BookmarkButton.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport {RiXboxLine} from 'react-icons/ri'\nimport styled from 'styled-components'\n\nexport const StoresList = ({stores}) => {\n    return (\n        <List>\n            {stores.map(({store}) => {\n                const { name, domain } = store\n                console.log(domain)\n                return(<li><a href={`https://${domain}`}>\n                    {name === 'Steam' && <FaSteam />}\n                    {name === 'PlayStation Store' && <FaPlaystation />}\n                    {name === 'App Store' && <FaAppStore />}\n                    {name === 'GOG' && <SiGogdotcom />}\n                    {name === 'Xbox Store' && <FaXbox />}\n                    {name === 'Xbox 360 Store' && <RiXboxLine />}\n                    {name === 'Nintendo Store' && <SiNintendo />}\n                    {name === 'Epic Games' && <SiEpicgames />}\n                    {name === 'Google Play' && <FaGooglePlay />}\n                    {name === 'itch.io' && <FaItchIo />}\n                </a></li>)\n            })}\n        </List>\n    )\n    \n}\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n     gap: 10px;\n     flex-wrap: wrap;\n   \n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        gap: 20px;\n    }\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport { authContext } from '../../context/context'\nimport { removeGameFromFavourite, addGameToFavourite, getFavouriteGames } from \"utils/firebase\"\nimport { BsBookmark, BsFillBookmarkFill } from 'react-icons/bs'\n\nimport styled from \"styled-components\"\n\nexport const BookmarkButton = ({gameData}) => {\n    const { userId } = useContext(authContext)\n    \n    const [isFavourite, setIsFavourite] = useState()\n\n    const { slug } = gameData\n\n    const toggleIsFavourite = () => {\n        if (isFavourite) {\n            removeGameFromFavourite(userId, slug)\n        }\n        else if (!isFavourite) {\n            addGameToFavourite(userId, slug, gameData)\n        }\n        \n        setIsFavourite(prevState => !prevState)\n    }\n\n    useEffect(() => {\n        getFavouriteGames(userId).then(res => {\n            if(res.val()) setIsFavourite(Object.keys(res.val()).some(el => el === slug))\n        }).catch(error => console.log(error))\n    }, [userId, isFavourite, slug])\n\n        return (\n            <Button type=\"button\" onClick={toggleIsFavourite}>\n                Bookmark {isFavourite ? <BsFillBookmarkFill size='20px' /> : <BsBookmark size='20px' />}\n            </Button>\n        )\n}\n    \n\n\nconst Button = styled.button`\n    height: auto;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n\n    color: white;\n    background-color: rgba(84, 84, 84, 0.5);\n`","import { useEffect, useState } from \"react\"\nimport { getUserInfo } from \"utils/firebase\"\nimport styled from \"styled-components\"\n\nexport const Comment = ({ userId, text }) => {\n    \n    const [authorAvatar, setAuthorAvatar] = useState()\n    const [authorUsername, setAuthorUsername] = useState('')\n    \n    useEffect(() => {\n        getUserInfo(userId).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setAuthorUsername(username)\n            setAuthorAvatar(photoUrl)\n        }).catch(error => {\n            console.log(error)\n        }\n    )\n    }, [userId])\n\n    return (\n        <CommentWrapper>\n            <AuthorInfo>\n                <AvatarWrapper>\n                    {authorAvatar && <AuthorAvatar src={authorAvatar} alt={`${authorUsername}'s avatar`}></AuthorAvatar>}\n                </AvatarWrapper>\n                <AuthorName>{authorUsername}</AuthorName>\n            </AuthorInfo>\n            \n            <CommentText>{text}</CommentText>\n        </CommentWrapper>\n    )\n}\n\nconst CommentWrapper = styled.li`\n    width: 100%;\n    padding: 10px 20px;\n    box-sizing: border-box;\n    border: 2px solid #2F3149;\n    border-radius: 20px;\n    \n    @media screen and (min-width: 768px){\n        width: 542px;\n    }\n`\n\nconst AuthorName = styled.p`\n    color: white\n`\n\nconst CommentText = styled.p`\n    color: white\n`\n\nconst AuthorInfo = styled.div`\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n   \n`\n\nconst AvatarWrapper = styled.div`\n    height: 60px;\n    width: 60px;\n    overflow: hidden;\n    margin-right: 10px;\n    position: relative;\n    border-radius: 100px;    \n`\n\nconst AuthorAvatar = styled.img`\n    width: 60px;\n    height: 60px;\n    object-fit: cover;\n`","import { useContext } from \"react\"\nimport { authContext } from \"context/context\"\nimport { leaveComment } from \"utils/firebase\"\nimport { Comment } from \"components/Comment/Comment\"\nimport styled from \"styled-components\"\n\nconst getAndFormatAuthorId = (comment) => {\n    return Object.keys(comment)[0].split('-')[0]\n}\n\nconst getCommentText = (comment) => {\n    return Object.values(comment)[0]\n}\n\nexport const Comments = ({comments, setComments, gameSlug}) => {\n    const { userId } = useContext(authContext)\n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n\n        const commentInput = e.target.elements.comment\n        const commentText = commentInput.value\n\n        leaveComment(userId, gameSlug, commentText)\n        setComments(prev => [...prev, { [userId]: commentText }])\n\n        commentInput.value = ''\n    }\n\n    return (\n        <Section>\n            <Form onSubmit={(e) => onFormSubmit(e)}>\n                <Input required name='comment' placeholder=\"What do you think about this game?\" />\n                <SubmitButton type=\"submit\">Comment</SubmitButton>\n            </Form>\n                {comments.length !== 0 &&\n                    <CommentsList>\n                        {comments.map(comment => \n                            <Comment userId={getAndFormatAuthorId(comment)} text={getCommentText(comment)} />\n                        )}\n                    </CommentsList>}\n        </Section>\n    )\n}\n\nconst Section = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    @media screen and (min-width: 1200px){\n        align-items: flex-start\n    }\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-bottom: 20px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n\n    @media screen and (min-width: 768px) {\n        width: 542px;\n    }\n`\n\nconst CommentsList = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        align-items: flex-start\n    }\n`\n\nconst Input = styled.textarea`\n    width: 100%;\n    min-height: 80px !important;\n    resize: vertical;\n\n    padding: 10px 20px;\n    border-radius: 20px;\n    \n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n    \n    @media screen and (min-width: 768px){\n        width: 500px;\n        min-height: 30px;\n    }\n\n    &::placeholder{\n        font-family: 'Nunito', sans-serif\n    }\n`\n\nconst SubmitButton = styled.button`\n    padding: 4px 10px;\n    border: none;\n    border-radius: 12px;\n\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    background-color: #00021A;\n    color: white;\n`","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { getGameById, getScreenshots} from \"../../services/games-api\"\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport {authContext} from '../../context/context'\nimport styled from \"styled-components\";\nimport { BookmarkButton } from \"components/BookmarkButton/BookmarkButton\";\nimport { Container } from \"components/Container/Container\";\nimport { getComments } from \"utils/firebase\";\nimport { Comments } from \"components/Comments/Comments\";\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments.val()).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const {isLoggedIn} = useContext(authContext)\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState()\n    const [stores, setStores] = useState()\n    const [year, setYear] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const [isError, setIsError] = useState(false)\n    const { gameSlug } = useParams()\n\n\n    window.scroll({\n        top: 0,\n    });\n\n    useEffect(() => {\n        Promise.all([getGameById(gameSlug), getScreenshots(gameSlug), getComments(gameSlug)]).then(res => {\n            const [game, screenshots, comments] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n            \n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released.slice(0, 4))\n            setScreenshots(results)\n            setComments(formatComments(comments))\n\n            setIsLoading(false)\n        }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n        \n    }, [gameSlug])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> : isError ? <ErrorComponent/> :\n            <>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year}</Year> }\n                                { isLoggedIn && <BookmarkButton gameData={gameData}/> }\n                            </Meta>\n                            {description && <Overview>{description}</Overview>}\n                        </div>\n                        {stores && <StoresList stores={stores}/>}\n                    </Info>\n                 </div>\n                    {screenshots &&\n                        <Screenshots>\n                            {screenshots.map(({image}) => \n                                <ScreenshotWrapper>\n                                    <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                                </ScreenshotWrapper>)}\n                        </Screenshots>}\n                    <Comments setComments={setComments} gameSlug={gameSlug} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    max-height: 200px;\n    overflow-y: scroll\n`\n\nconst Screenshots = styled.ul`\n    width: 100%;\n    height: auto;\n    margin-bottom: 60px;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    \n    backdrop-filter: blur(10px);\n`\n\nconst Screenshot = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n`\n\nconst ScreenshotWrapper = styled.li`\n    width: 100%;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n\n    &:hover {\n        transform: scale(1.2);\n        clip-path:none;\n        z-index: 1111\n    }\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 10px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 20px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 30px)/4);\n    }\n`\n\nexport default GameDescription"],"names":["ErrorComponent","_jsxs","Block","children","_jsx","Message","Image","src","mario","alt","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Loader","_ref","className","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","StoresList","stores","List","map","_ref2","store","name","domain","console","log","href","concat","FaSteam","FaPlaystation","FaAppStore","SiGogdotcom","FaXbox","RiXboxLine","SiNintendo","SiEpicgames","FaGooglePlay","FaItchIo","BookmarkButton","gameData","userId","useContext","authContext","_useState","useState","_useState2","_slicedToArray","isFavourite","setIsFavourite","slug","useEffect","getFavouriteGames","then","res","val","Object","keys","some","el","catch","error","Button","type","onClick","removeGameFromFavourite","addGameToFavourite","prevState","BsFillBookmarkFill","size","BsBookmark","Comment","text","authorAvatar","setAuthorAvatar","_useState3","_useState4","authorUsername","setAuthorUsername","getUserInfo","_res$val","username","photoUrl","CommentWrapper","AuthorInfo","AvatarWrapper","AuthorAvatar","AuthorName","CommentText","_templateObject4","_templateObject5","_templateObject6","getAndFormatAuthorId","comment","split","getCommentText","values","Comments","comments","setComments","gameSlug","Section","Form","onSubmit","e","preventDefault","commentInput","target","elements","commentText","value","leaveComment","prev","_toConsumableArray","_defineProperty","onFormSubmit","Input","required","placeholder","SubmitButton","length","CommentsList","Page","Info","Meta","Title","Year","Overview","Screenshots","_templateObject7","Screenshot","_templateObject8","ScreenshotWrapper","_templateObject9","isLoggedIn","title","setTitle","screenshots","setScreenshots","_useState5","_useState6","description","setDescription","_useState7","_useState8","setStores","_useState9","_useState10","year","setYear","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","setGameData","_useState15","_useState16","_useState17","_useState18","isError","setIsError","useParams","window","scroll","top","Promise","all","getGameById","getScreenshots","getComments","_res","game","data","description_raw","released","results","slice","entries","formatComments","Container","_Fragment","style","display","image","loading"],"sourceRoot":""}