{"version":3,"file":"static/js/522.c8e53029.chunk.js","mappings":"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","sources":["pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Loader,\n  StoresList,\n  BookmarkButton,\n  Container,\n  Comments,\n  ErrorComponent,\n  GameOverview,\n  GameScreenshots,\n  GoBackLink,\n} from 'components';\nimport { authContext } from 'context';\n\nimport styled from 'styled-components';\nimport {\n  fetchBookmarks,\n  fetchComments,\n  fetchGameById,\n  fetchScreenshots,\n  fetchStores,\n} from 'utils';\n\nconst GameDescription = () => {\n  const { isLoggedIn, userId } = useContext(authContext);\n  const [isBookmark, setIsBookmark] = useState();\n\n  const [title, setTitle] = useState('');\n  const [screenshots, setScreenshots] = useState([]);\n  const [description, setDescription] = useState('');\n  const [stores, setStores] = useState([]);\n  const [year, setYear] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [gameData, setGameData] = useState({});\n  const [comments, setComments] = useState([]);\n  const [isError, setIsError] = useState(false);\n\n  const { gameSlug } = useParams();\n\n  useEffect(() => {\n    Promise.all([\n      fetchGameById(gameSlug),\n      fetchScreenshots(gameSlug),\n      fetchComments(gameSlug),\n      fetchBookmarks(userId),\n      fetchStores(gameSlug),\n    ])\n      .then(res => {\n        const [game, screenshots, comments, bookmarks, stores] = res;\n        const { data } = game;\n        const { name, description_raw, released } = data;\n        const { results } = screenshots.data;\n\n        setGameData(data);\n        setTitle(name);\n        setDescription(description_raw);\n        setStores(stores.data.results);\n        setYear(released);\n        setScreenshots(results);\n\n        if (bookmarks.val()) {\n          setIsBookmark(\n            Object.keys(bookmarks.val()).some(el => el === gameSlug)\n          );\n        }\n\n        if (comments.val())\n          setComments(\n            Object.values(comments.val()).sort((a, b) => b.date - a.date)\n          );\n\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsError(true);\n        setIsLoading(false);\n      });\n  }, [gameSlug, userId]);\n\n  return (\n    <Page>\n      <Container>\n        {isLoading ? (\n          <Loader color={'white'} />\n        ) : isError ? (\n          <ErrorComponent />\n        ) : (\n          <>\n            <GoBackLink />\n            <div style={{ display: 'flex' }}>\n              <Info>\n                <div>\n                  <Meta>\n                    <Title>{title}</Title>\n                    {year && <Year>{year.slice(0, 4)}</Year>}\n                    {isLoggedIn && (\n                      <BookmarkButton\n                        gameData={gameData}\n                        isBookmark={isBookmark}\n                        setIsBookmark={setIsBookmark}\n                        className=\"game_description\"\n                      />\n                    )}\n                  </Meta>\n                  {description && <GameOverview description={description} />}\n                </div>\n                {stores && <StoresList stores={stores} data={gameData} />}\n              </Info>\n            </div>\n            {screenshots && <GameScreenshots screenshots={screenshots} />}\n            <Comments setComments={setComments} comments={comments} />\n          </>\n        )}\n      </Container>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  padding: 30px;\n  position: relative;\n  box-sizing: border-box;\n  margin-top: 61px;\n\n  min-height: calc(100vh - 61px);\n  background-size: cover;\n  background-position: top;\n  display: flex;\n  flex-direction: column;\n  background-color: #00021a;\n\n  @media screen and (min-width: 768px) {\n    padding: 60px;\n  }\n`;\n\nconst Info = styled.div`\n  display: flex;\n  gap: 40px;\n  height: auto;\n  box-sizing: border-box;\n  margin-bottom: 60px;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1130px;\n  }\n`;\n\nconst Meta = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  position: relative;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 20px;\n    flex-direction: row;\n    align-items: center;\n    gap: 20px;\n  }\n`;\nconst Title = styled.h1`\n  padding: 10px 0;\n  border-bottom: 1px solid orange;\n  max-width: 700px;\n\n  font-size: 35px;\n  font-weight: 700;\n  text-align: left;\n  color: white;\n\n  @media screen and (min-width: 1200px) {\n    border-bottom: 0;\n    padding: 0;\n    font-size: 50px;\n    border-right: 1px solid orange;\n    padding-right: 20px;\n  }\n`;\nconst Year = styled.p`\n  color: white;\n  font-weight: 700;\n  text-align: center;\n  font-size: 30px;\n\n  @media screen and (min-width: 768px) and (max-width: 1199px) {\n    margin-right: 0;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 50px;\n  }\n`;\nexport default GameDescription;\n"],"names":["Page","styled","_templateObject","_taggedTemplateLiteral","Info","_templateObject2","Meta","_templateObject3","Title","_templateObject4","Year","_templateObject5","_useContext","useContext","authContext","isLoggedIn","userId","_useState","useState","_useState2","_slicedToArray","isBookmark","setIsBookmark","_useState3","_useState4","title","setTitle","_useState5","_useState6","screenshots","setScreenshots","_useState7","_useState8","description","setDescription","_useState9","_useState10","stores","setStores","_useState11","_useState12","year","setYear","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","gameData","setGameData","_useState17","_useState18","comments","setComments","_useState19","_useState20","isError","setIsError","gameSlug","useParams","useEffect","Promise","all","fetchGameById","fetchScreenshots","fetchComments","fetchBookmarks","fetchStores","then","res","_res","game","bookmarks","data","name","description_raw","released","results","val","Object","keys","some","el","values","sort","a","b","date","catch","error","console","log","_jsx","children","Container","Loader","color","ErrorComponent","_jsxs","_Fragment","GoBackLink","style","display","slice","BookmarkButton","className","GameOverview","StoresList","GameScreenshots","Comments"],"sourceRoot":""}