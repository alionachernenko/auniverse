{"version":3,"file":"static/js/559.8a856143.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/UserCard/UserCard.jsx","pages/Users/Users.jsx"],"sourcesContent":["import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { getUserInfo } from \"utils/firebase\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport styled from \"styled-components\"\n\nexport const UserCard = ({id}) => {\n    const [name, setName] = useState('')\n    const [avatar, setAvatar] = useState()\n\n    useEffect(() => {\n        getUserInfo(id).then(res => {\n            console.log(res.val())\n            setName(res.val().username)\n            if(res.val().photoUrl) {setAvatar(res.val().photoUrl)}\n            else {setAvatar(avatarPlaceholder)}\n        })\n    }, [id])\n\n    return(\n        <Card>     \n            <CardLink style={{color: 'black'}} to={`/users/${id}`}>\n                <AvatarWrapper>\n                <img style={{objectFit: 'cover', width: 100, height: '100%'}} width={200} src={`${avatar}`} alt={`${name}'s avatar`}></img>\n            </AvatarWrapper>\n            <Username>{name}</Username>\n            </CardLink>\n           \n        </Card>\n    )\n}\n\nconst Card = styled.div`\n    height: auto;\n    padding: 10px;\n    border-radius: 20px;\n    background-color: #080D2B;\n    transform: scale(1);\n    transition: 200ms all ease;\n\n    &:hover{\n        transform: scale(0.95)\n    }\n\n    @media screen and (min-width: 768px){\n        width: 400px\n    }\n    \n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 50px;\n    width: 50px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: #080D2B;\n\n    @media screen and (min-width: 420px){\n        height: 100px;\n        width: 100px;\n    }\n`\n\nconst CardLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\ngap: 10px;\njustify-content: flex-start;\n`\n\nconst Username = styled.p`\n    color: white;\n    font-size: 25px;\n    font-weight: 500\n`","\nimport { useContext, useEffect, useState } from \"react\"\nimport { getUsers } from \"utils/firebase\"\nimport { Loader } from 'components/Loader/Loader'\nimport authContext from '../../context/context'\n\nimport { UserCard } from \"components/UserCard/UserCard\"\nimport styled from \"styled-components\"\nconst Users = () => {\n    const [users, setUsers] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const {userId} = useContext(authContext)\n\n\n    useEffect(() => {\n\n        getUsers().then(res => {\n            setUsers(Object.keys(res.val()))\n            setIsLoading(false)\n        })\n    }, [])\n\n    return(\n        <Page>\n            {isLoading ? <Loader className={'loader-profile'} color={'darkblue'} /> : \n            <UsersList>\n                {users.map(user => \n                // eslint-disable-next-line array-callback-return\n                {if(user === userId) return\n                return <li><UserCard id={user}/></li>}\n                )}\n            </UsersList>}\n        </Page>\n    )\n}\n\nconst Page = styled.div`\npadding: 20px;\nbox-sizing: border-box;\nmin-height: calc(100vh - 61px);\nwidth: 100%; \n`\n\nconst UsersList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`\nexport default Users"],"names":["Loader","_ref","className","color","_jsx","Wrapper","render","children","FidgetSpinner","backgroundColor","ballColors","styled","_templateObject","_taggedTemplateLiteral","props","css","_templateObject2","_templateObject3","UserCard","id","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","avatar","setAvatar","useEffect","getUserInfo","then","res","console","log","val","username","photoUrl","avatarPlaceholder","Card","_jsxs","CardLink","style","to","concat","AvatarWrapper","objectFit","width","height","src","alt","Username","Link","_templateObject4","Page","UsersList","users","setUsers","isLoading","setIsLoading","userId","useContext","authContext","getUsers","Object","keys","map","user"],"sourceRoot":""}