{"version":3,"file":"static/js/900.27e7ff3d.chunk.js","mappings":"sPAyIMA,EAAuBC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2NAelCC,EAAOH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uWAsBjBG,EAAiBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sKAa3BK,EAAOP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kKAUjBO,GAAMT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAeW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,4cA2B3B,UAzMoB,WAClB,IAAAU,GAA+BC,EAAAA,EAAAA,YAAWC,EAAAA,IAAlCC,EAAMH,EAANG,OAAQC,EAAUJ,EAAVI,WAChBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAsCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkCjB,EAAAA,EAAAA,YAAUkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAArCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkCrB,EAAAA,EAAAA,WAAS,GAAKsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BzB,EAAAA,EAAAA,WAAS,GAAM0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvB,CACEC,KAAM,WACNC,SACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CACNP,SAAUA,EACV1B,QAASA,EACTC,WAAYA,EACZW,YAAaA,EACbC,eAAgBA,KAItB,CACEiB,KAAM,aACNC,SAASC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CAACR,SAAUA,EAAUtB,UAAWA,EAAWC,aAAcA,OA4ChF,OAxCA8B,EAAAA,EAAAA,YAAU,WACHxC,EAKLyC,QAAQC,IAAI,EACVC,EAAAA,EAAAA,IAAc5C,IACd6C,EAAAA,EAAAA,IAAe7C,IACf8C,EAAAA,EAAAA,IAAiB9C,IACjB+C,EAAAA,EAAAA,IAA4B/C,KAE3BgD,MAAK,SAAAC,GACJ,IAAAC,GAAA7C,EAAAA,EAAAA,GAAgD4C,EAAG,GAA5CE,EAAQD,EAAA,GAAEE,EAAKF,EAAA,GAAE5C,EAAO4C,EAAA,GAAEhC,EAAWgC,EAAA,GAC5C,GAAIC,EAASE,SAAU,CACrB,IAAAC,EAA+BH,EAASI,MAAhCzC,EAAQwC,EAARxC,SAAU0C,EAAQF,EAARE,SAClBzC,EAAYD,GAEVS,EADEiC,GAGWC,EAEjB,MACE1C,EAAY,QAGVqC,EAAMG,OAAO5C,GAAY+C,EAAAA,EAAAA,GAAKC,OAAOC,OAAOR,EAAMG,SAClDjD,EAAQiD,OAAOhD,GAAUmD,EAAAA,EAAAA,GAAKC,OAAOC,OAAOtD,EAAQiD,SACpDrC,EAAYqC,OACdpC,GAAcuC,EAAAA,EAAAA,GAAKC,OAAOC,OAAO1C,EAAYqC,SAE/C5B,GAAa,EACf,IACCkC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACd/B,GAAW,GACXJ,GAAa,EACf,IAnCAK,EAAS,oBAoCb,GAAG,CAAC/B,EAAY+B,EAAUhC,KAGxBsC,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,CAAAC,UACE3B,EAAAA,EAAAA,KAAClD,EAAI,CAAC8E,MAAO,CAAEC,UAAW,IAAKF,UAC7B3B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,CAAAH,SACPvC,GACCY,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,CAACC,UAAW,iBAAkBC,MAAO,UAC1CzC,GACFQ,EAAAA,EAAAA,KAACkC,EAAAA,GAAc,KAEflC,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,CAAAC,UACEQ,EAAAA,EAAAA,MAACrF,EAAI,CAAA6E,SAAA,EACH3B,EAAAA,EAAAA,KAACoC,EAAAA,GAAW,CACVnD,aAAcA,EACdoD,OAAQrD,EACRR,SAAUA,EACVC,YAAaA,EACbI,eAAgBA,EAChBZ,WAAYA,KAEdkE,EAAAA,EAAAA,MAACnF,EAAc,CAAA2E,SAAA,EACbQ,EAAAA,EAAAA,MAACjF,EAAI,CAAAyE,SAAA,EACH3B,EAAAA,EAAAA,KAAC5C,EAAG,CAACkF,GAAG,YAAWX,SAAC,eACpBQ,EAAAA,EAAAA,MAAC/E,EAAG,CAACkF,GAAG,UAASX,SAAA,CAAC,UACR,IACP/C,EAAY2D,OAAS,IACpBvC,EAAAA,EAAAA,KAACtD,EAAoB,CAAAiF,SAClB/C,EAAY2D,eAMpB3C,eASnB,C","sources":["pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { NavLink, useNavigate, useRoutes } from 'react-router-dom';\n\nimport {\n  fetchBookmarks,\n  fetchUserInfo,\n  fetchFriendsList,\n  fetchFriendsInvitationsList,\n} from 'utils';\nimport {\n  Loader,\n  ProfileCard,\n  Container,\n  ErrorComponent,\n  Friends,\n  Bookmarks,\n} from 'components';\n\nimport { authContext } from 'context';\n\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png';\nimport styled from 'styled-components';\n\nconst AccountPage = () => {\n  const { userId, isLoggedIn } = useContext(authContext);\n  const [friends, setFriends] = useState([]);\n  const [bookmarks, setBookmarks] = useState([]);\n  const [username, setUsername] = useState('');\n  const [invitations, setInvitations] = useState([]);\n  const [photoPath, setPhotoPath] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const routes = useRoutes([\n    {\n      path: '/friends',\n      element: (\n        <Friends\n          navigate={navigate}\n          friends={friends}\n          setFriends={setFriends}\n          invitations={invitations}\n          setInvitations={setInvitations}\n        />\n      ),\n    },\n    {\n      path: '/bookmarks',\n      element: <Bookmarks navigate={navigate} bookmarks={bookmarks} setBookmarks={setBookmarks}/>,\n    },\n  ]);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login/login-page');\n      return;\n    }\n\n    Promise.all([\n      fetchUserInfo(userId),\n      fetchBookmarks(userId),\n      fetchFriendsList(userId),\n      fetchFriendsInvitationsList(userId),\n    ])\n      .then(res => {\n        const [snapshot, games, friends, invitations] = res;\n        if (snapshot.exists()) {\n          const { username, photoUrl } = snapshot.val();\n          setUsername(username);\n          if (photoUrl) {\n            setPhotoPath(photoUrl);\n          } else {\n            setPhotoPath(avatarPlaceholder);\n          }\n        } else {\n          setUsername('User');\n        }\n\n        if (games.val()) setBookmarks([...Object.values(games.val())]);\n        if (friends.val()) setFriends([...Object.values(friends.val())]);\n        if (invitations.val())\n          setInvitations([...Object.values(invitations.val())]);\n\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error(error);\n        setIsError(true);\n        setIsLoading(false);\n      });\n  }, [isLoggedIn, navigate, userId]);\n\n  return (\n    <>\n      <Page style={{ marginTop: 61 }}>\n        <Container>\n          {isLoading ? (\n            <Loader className={'loader-profile'} color={'white'} />\n          ) : isError ? (\n            <ErrorComponent />\n          ) : (\n            <>\n              <Page>\n                <ProfileCard\n                  setPhotoPath={setPhotoPath}\n                  avatar={photoPath}\n                  username={username}\n                  setUsername={setUsername}\n                  setInvitations={setInvitations}\n                  setFriends={setFriends}\n                />\n                <OutletsSection>\n                  <Tabs>\n                    <Tab to=\"bookmarks\">Bookmarks</Tab>\n                    <Tab to=\"friends\">\n                      Friends{' '}\n                      {invitations.length > 0 && (\n                        <InvitationsIndicator>\n                          {invitations.length}\n                        </InvitationsIndicator>\n                      )}\n                    </Tab>\n                  </Tabs>\n\n                  {routes}\n                </OutletsSection>\n              </Page>\n            </>\n          )}\n        </Container>\n      </Page>\n    </>\n  );\n};\n\nconst InvitationsIndicator = styled.span`\n  width: 15px;\n  height: 15px;\n  border-radius: 8px;\n  position: absolute;\n  top: 0;\n  right: -15px;\n\n  font-size: 14px;\n  text-align: center;\n  vertical-align: center;\n\n  background-color: green;\n`;\n\nconst Page = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 61px);\n  padding: 20px;\n  box-sizing: border-box;\n\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  color: white;\n\n  background-color: #00021a;\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n`;\n\nconst OutletsSection = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 1200px) {\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 50%;\n  }\n`;\n\n\nconst Tabs = styled.div`\n  margin-bottom: 20px;\n  margin-left: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 0 40px;\n`;\n\nconst Tab = styled(NavLink)`\n  display: block;\n  padding: 10px 0;\n  border: none;\n\n  font-family: 'Nunito', sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n\n  position: relative;\n  background-color: transparent;\n  cursor: pointer;\n  color: white;\n\n  &.active::after {\n    content: '';\n    display: block;\n    height: 3px;\n    width: 100%;\n    border-radius: 4px;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    background-color: #ff6600;\n  }\n`;\nexport default AccountPage;\n"],"names":["InvitationsIndicator","styled","_templateObject","_taggedTemplateLiteral","Page","_templateObject2","OutletsSection","_templateObject3","Tabs","_templateObject4","Tab","NavLink","_templateObject5","_useContext","useContext","authContext","userId","isLoggedIn","_useState","useState","_useState2","_slicedToArray","friends","setFriends","_useState3","_useState4","bookmarks","setBookmarks","_useState5","_useState6","username","setUsername","_useState7","_useState8","invitations","setInvitations","_useState9","_useState10","photoPath","setPhotoPath","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","isError","setIsError","navigate","useNavigate","routes","useRoutes","path","element","_jsx","Friends","Bookmarks","useEffect","Promise","all","fetchUserInfo","fetchBookmarks","fetchFriendsList","fetchFriendsInvitationsList","then","res","_res","snapshot","games","exists","_snapshot$val","val","photoUrl","avatarPlaceholder","_toConsumableArray","Object","values","catch","error","console","_Fragment","children","style","marginTop","Container","Loader","className","color","ErrorComponent","_jsxs","ProfileCard","avatar","to","length"],"sourceRoot":""}