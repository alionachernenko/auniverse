{"version":3,"file":"static/js/260.8d42b725.chunk.js","mappings":"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","sources":["pages/UserProfile/UserProfile.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport {  useNavigate, useParams, useRoutes } from \"react-router-dom\"\nimport { fetchFriendsInvitationsList, fetchUserInfo, fetchFriendsList } from \"utils\"\nimport { NavLink } from \"react-router-dom\"\nimport {authContext} from 'context'\nimport styled from \"styled-components\"\nimport { ProfileCard, Loader, ErrorComponent, AcceptInvitationForm, Bookmarks, GoBackLink, FriendshipOptions} from \"components\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\n\nconst User = () => {\n    const { userId, isLoggedIn } = useContext(authContext)\n    const { id } = useParams()\n    const [name, setName] = useState('')\n    const [photo, setPhoto] = useState('')\n    const [bookmarks, setBookmarks] = useState([])\n    const [isFriendInvited, setIsFriendInvited] = useState(false)\n    const [isFriend, setIsFriend] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const [isPending, setIsPending] = useState(false)\n\n    const navigate = useNavigate()\n\n    const routes = useRoutes([\n        {\n            path: '/bookmarks',\n            element: <Bookmarks navigate={navigate} bookmarks={bookmarks}/>\n        }\n    ])\n\n    useEffect(() => {\n        if (id === userId) navigate('/profile/bookmarks')\n\n        setIsLoading(true)\n        Promise.all([fetchUserInfo(id), fetchFriendsInvitationsList(id), fetchFriendsList(userId)]).then(res => {\n            const [userInfo, invitationsList, friendsList] = res\n            \n            const { username, bookmarks, photoUrl } = userInfo.val()\n            \n            setName(username)\n\n            if (bookmarks) {\n                setBookmarks(Object.values(bookmarks))\n            }\n\n            if (photoUrl) {\n                setPhoto(photoUrl)\n            }\n            else {\n                setPhoto(avatarPlaceholder)\n            }\n            \n            if (invitationsList.val()) {\n                setIsFriendInvited(Object.values(invitationsList.val()).some(user => user === userId))\n                setIsPending(Object.keys(invitationsList.val()).some(friendId => friendId === id))\n            }\n\n            if (friendsList.val()) {\n                setIsFriend(Object.values(friendsList.val()).some(user => user === id))\n            }\n\n            setIsLoading(false)\n        }).catch(error => {\n            console.log(error)\n            setIsError(true)\n            setIsLoading(false)\n        })\n\n    }, [id, navigate, userId])\n\n    return(\n        <Page>\n            {isLoading ? <Loader className={'loader_profile'} color={'white'} /> : isError ? <ErrorComponent /> : \n                <>\n                    <GoBackLink />\n                <Wrapper >\n                <ProfileCard\n                    avatar={photo}\n                    username={name}\n                    isFriendInvited={isFriendInvited}\n                    isFriend={isFriend}\n                    setIsFriendInvited={setIsFriendInvited}\n                    setIsFriend={setIsFriend}\n                    isPending={isPending}\n                />\n                    \n                        {isLoggedIn && <FriendshipOptions\n                            isFriendInvited={isFriendInvited}\n                            isFriend={isFriend}\n                            setIsFriendInvited={setIsFriendInvited}\n                            setIsFriend={setIsFriend}\n                            isPending={isPending}\n                        />}\n                </Wrapper>\n                    \n                {isPending && <AcceptInvitationForm setIsPending={setIsPending} setIsFriend={setIsFriend} username={name} />}\n                <OutletsSection>\n                    <Tabs>\n                        <Tab to='bookmarks'>Bookmarks</Tab>\n                    </Tabs>\n                        {routes}\n                </OutletsSection>\n            </>\n            }\n        </Page>\n    )\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%\n`\n\nconst Page = styled.div`\n    min-height: calc(100vh - 61px);\n    width: 100%;\n    padding: 40px;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    position: relative;\n\n    color: white;\n    background-color: #00021A;\n\n    \n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n        align-items: flex-start;\n    }\n`\n\nconst OutletsSection = styled.div`\n    width: 100%;\n   \n    @media screen and (min-width: 768px) {\n        width: 50%;\n    }\n\n    @media screen and (min-width: 1200px) {\n        margin-left: auto;\n    }\n`\n\nconst Tabs = styled.div`\n    margin-bottom: 20px;\n    margin-left: auto;\n\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n\n    & :not(:last-child) {\n        margin-right: 100px;\n    }\n`\n\n\nconst Tab = styled(NavLink)`\n    color: #090E2F;\n    font-weight: 500;\n    padding: 10px 0;\n    background-color: transparent;\n    font-family: 'Nunito', sans-serif;\n    font-size: 20px;\n    cursor: pointer;\n    color: white;\n    border: none;\n    position: relative;\n    display: block;\n\n    &.active::after{\n        content: '';\n        display: block;\n        height: 3px;\n        width: 100%;\n        border-radius: 4px;\n\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        background-color: #FF6600;\n    }\n`\n\nexport default User "],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Page","_templateObject2","OutletsSection","_templateObject3","Tabs","_templateObject4","Tab","NavLink","_templateObject5","_useContext","useContext","authContext","userId","isLoggedIn","id","useParams","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","photo","setPhoto","_useState5","_useState6","bookmarks","setBookmarks","_useState7","_useState8","isFriendInvited","setIsFriendInvited","_useState9","_useState10","isFriend","setIsFriend","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","isError","setIsError","_useState15","_useState16","isPending","setIsPending","navigate","useNavigate","routes","useRoutes","path","element","_jsx","Bookmarks","useEffect","Promise","all","fetchUserInfo","fetchFriendsInvitationsList","fetchFriendsList","then","res","_res","userInfo","invitationsList","friendsList","_userInfo$val","val","username","photoUrl","Object","values","avatarPlaceholder","some","user","keys","friendId","catch","error","console","log","children","Loader","className","color","ErrorComponent","_jsxs","_Fragment","GoBackLink","ProfileCard","avatar","FriendshipOptions","AcceptInvitationForm","to"],"sourceRoot":""}