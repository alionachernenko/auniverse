{"version":3,"file":"static/js/809.cef663b8.chunk.js","mappings":"0LAGaA,EAAS,SAAHC,GAA4B,IAAvBC,EAASD,EAATC,UAAWC,EAAKF,EAALE,MAC/B,OACIC,EAAAA,EAAAA,KAACC,EAAO,CAACC,OAAQJ,EAAUK,UACvBH,EAAAA,EAAAA,KAACI,EAAAA,EAAa,CAACC,gBAAiBN,EAAOO,WAAY,CAAC,SAAU,WAAY,UAGtF,EAEML,EAAUM,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mBACpB,SAACC,GACC,MACS,oBADFA,EAAMR,QAEFS,EAAAA,EAAAA,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2DAICE,EAAAA,EAAAA,IAAGE,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8JAOtB,G,uICYEK,EAAOP,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mGAOjBM,EAAYR,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2EAK3B,UAzCc,WACV,IAAAO,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACvBG,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,OAYP,OATAG,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAWC,MAAK,SAAAC,GACZ,IAAMC,EAAMD,EAAIE,MAEhBb,EAAWc,OAAOC,KAAKH,GAAKI,QAAO,SAAAC,GAAE,OAAIA,IAAOZ,CAAM,KACtDD,GAAa,EACjB,GACJ,GAAG,CAACC,KAGA1B,EAAAA,EAAAA,KAACc,EAAI,CAAAX,UACDH,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAAApC,SACLqB,GACGxB,EAAAA,EAAAA,KAACJ,EAAAA,EAAM,CAACE,UAAW,iBAAkBC,MAAO,aAC5CC,EAAAA,EAAAA,KAACe,EAAS,CAAAZ,SACLiB,EAAQoB,KAAI,SAAAC,GAAM,OAAIzC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAQ,CAACC,GAAIF,GAAS,SAMtE,C","sources":["components/Loader/Loader.jsx","pages/Users/Users.jsx"],"sourcesContent":["import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { useContext, useEffect, useState } from 'react'\nimport { getUsers } from 'utils/firebase'\nimport { authContext } from '../../context/context'\nimport { Loader } from 'components/Loader/Loader'\n\nimport { UserCard } from 'components/UserCard/UserCard'\nimport { Container } from 'components/Container/Container'\n\nimport styled from 'styled-components'\nconst Users = () => {\n    const [userIDs, setUserIDs] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const {userId} = useContext(authContext)\n\n\n    useEffect(() => {\n        getUsers().then(res => {\n            const IDs = res.val()\n\n            setUserIDs(Object.keys(IDs).filter(ID => ID !== userId))\n            setIsLoading(false)\n        })\n    }, [userId])\n\n    return(\n        <Page>\n            <Container>\n                {isLoading ?\n                    <Loader className={'loader-profile'} color={'#00021A'} /> : \n                    <UsersList>\n                        {userIDs.map(userID => <UserCard id={userID}/>)}\n                    </UsersList>\n                }\n            </Container>\n        </Page>\n    )\n}\n\nconst Page = styled.div`\nwidth: 100%; \npadding: 20px;\nbox-sizing: border-box;\nmin-height: calc(100vh - 61px);\n`\n\nconst UsersList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`\nexport default Users"],"names":["Loader","_ref","className","color","_jsx","Wrapper","render","children","FidgetSpinner","backgroundColor","ballColors","styled","_templateObject","_taggedTemplateLiteral","props","css","_templateObject2","_templateObject3","Page","UsersList","_useState","useState","_useState2","_slicedToArray","userIDs","setUserIDs","_useState3","_useState4","isLoading","setIsLoading","userId","useContext","authContext","useEffect","getUsers","then","res","IDs","val","Object","keys","filter","ID","Container","map","userID","UserCard","id"],"sourceRoot":""}