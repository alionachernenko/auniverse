{"version":3,"file":"static/js/890.bdfee662.chunk.js","mappings":"0LAGaA,EAAS,SAAHC,GAA4B,IAAvBC,EAASD,EAATC,UAAWC,EAAKF,EAALE,MAC/B,OACIC,EAAAA,EAAAA,KAACC,EAAO,CAACC,OAAQJ,EAAUK,UACvBH,EAAAA,EAAAA,KAACI,EAAAA,EAAa,CAACC,gBAAiBN,EAAOO,WAAY,CAAC,SAAU,WAAY,UAGtF,EAMML,EAAUM,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mBACpB,SAACC,GACC,MACS,oBADFA,EAAMR,QAEFS,EAAAA,EAAAA,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2DAICE,EAAAA,EAAAA,IAAGE,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8JAOtB,G,4LCzBSK,EAAa,SAAHjB,GAAkB,IAAbkB,EAAMlB,EAANkB,OACxB,OACIf,EAAAA,EAAAA,KAACgB,EAAI,CAAAb,SACAY,EAAOE,KAAI,SAAAC,GAAc,IAAZC,EAAKD,EAALC,MACHC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,OACb,OAAOrB,EAAAA,EAAAA,KAAA,MAAAG,UAAImB,EAAAA,EAAAA,MAAA,KAAGC,KAAI,WAAAC,OAAaH,GAASlB,SAAA,CAC1B,UAATiB,IAAoBpB,EAAAA,EAAAA,KAACyB,EAAAA,IAAO,IACnB,sBAATL,IAAgCpB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAa,IACrC,cAATN,IAAwBpB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAU,IAC1B,QAATP,IAAkBpB,EAAAA,EAAAA,KAAC4B,EAAAA,IAAW,IACrB,eAATR,IAAyBpB,EAAAA,EAAAA,KAAC6B,EAAAA,IAAM,IACvB,mBAATT,IAA6BpB,EAAAA,EAAAA,KAAC8B,EAAAA,IAAU,IAC/B,mBAATV,IAA6BpB,EAAAA,EAAAA,KAAC+B,EAAAA,IAAU,IAC/B,eAATX,IAAyBpB,EAAAA,EAAAA,KAACgC,EAAAA,IAAW,IAC5B,gBAATZ,IAA0BpB,EAAAA,EAAAA,KAACiC,EAAAA,IAAY,IAC9B,YAATb,IAAsBpB,EAAAA,EAAAA,KAACkC,EAAAA,IAAQ,QAExC,KAIZ,EAEMlB,EAAQT,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yK,uCCtBV0B,EAAwB,SAAHtC,GAAoB,IAAfuC,EAAQvC,EAARuC,SAC5BC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,OACPG,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAQ9B,OANJI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBV,GAAQW,MAAK,SAAAC,GACxBA,EAAIC,OAAOL,EAAeM,OAAOC,KAAKH,EAAIC,OAAOG,MAAK,SAAAC,GAAE,OAAIA,IAAOlB,EAASmB,IAAI,IACvF,GACJ,GAAG,CAACnB,EAASmB,KAAMlB,EAAQO,KAGnB5C,EAAAA,EAAAA,KAAAwD,EAAAA,SAAA,CAAArD,SAAGyC,GAActB,EAAAA,EAAAA,MAACmC,EAAM,CAACC,KAAK,SAASC,QAAS,YAC5CC,EAAAA,EAAAA,IAAwBvB,EAAQD,EAASmB,MACzCV,GAAe,EACnB,EAAE1C,SAAA,CAAC,aAASH,EAAAA,EAAAA,KAAC6D,EAAAA,IAAkB,CAACC,KAAK,aACrCxC,EAAAA,EAAAA,MAACmC,EAAM,CAACC,KAAK,SAASC,QAAS,YAC3BI,EAAAA,EAAAA,IAAmB1B,EAAQD,EAASmB,KAAMnB,GAC1CS,GAAe,EACnB,EAAE1C,SAAA,CAAC,aAASH,EAAAA,EAAAA,KAACgE,EAAAA,IAAU,CAACF,KAAK,aAErC,EAEEL,EAASlD,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iVCwDtBwD,EAAO1D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wQAajByD,EAAO3D,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sdAgBjB0D,EAAO5D,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uOAYjB2D,EAAQ7D,EAAAA,GAAAA,GAAS8D,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,+PAajB6D,EAAO/D,EAAAA,GAAAA,EAAQgE,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,4MAWf+D,EAAWjE,EAAAA,GAAAA,EAAQkE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,iJASnBiE,EAAcnE,EAAAA,GAAAA,GAASoE,IAAAA,GAAAlE,EAAAA,EAAAA,GAAA,8JAUvBmE,EAAarE,EAAAA,GAAAA,IAAUsE,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,mVAe7B,EA9KwB,WACpB,IAAOqE,GAAcxC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBuC,WAEPtC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BuC,EAAKrC,EAAA,GAAEsC,EAAQtC,EAAA,GACtBuC,GAA4BxC,EAAAA,EAAAA,YAAUyC,GAAAvC,EAAAA,EAAAA,GAAAsC,EAAA,GAA/BE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAsC5C,EAAAA,EAAAA,UAAS,IAAG6C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsChD,EAAAA,EAAAA,YAAUiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA4BpD,EAAAA,EAAAA,YAAUqD,GAAAnD,EAAAA,EAAAA,GAAAkD,EAAA,GAA/B9E,EAAM+E,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAwBvD,EAAAA,EAAAA,UAAS,MAAKwD,GAAAtD,EAAAA,EAAAA,GAAAqD,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkC3D,EAAAA,EAAAA,WAAS,GAAK4D,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgC/D,EAAAA,EAAAA,UAAS,CAAC,GAAEgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAArCpE,EAAQqE,EAAA,GAAEC,EAAWD,EAAA,GAEpBE,GAAaC,EAAAA,EAAAA,MAAbD,SA6BR,OA3BAE,OAAOC,OAAO,CACVC,IAAK,KAGTjE,EAAAA,EAAAA,YAAU,WACNkE,QAAQC,IAAI,EAACC,EAAAA,EAAAA,IAAYP,IAAWQ,EAAAA,EAAAA,IAAeR,KAAY3D,MAAK,SAAAC,GAChE,IAAAmE,GAAAzE,EAAAA,EAAAA,GAA4BM,EAAG,GAAxBoE,EAAID,EAAA,GAAE7B,EAAW6B,EAAA,GACjBE,EAAQD,EAARC,KACAlG,EAA6DkG,EAA7DlG,KAAMmG,EAAuDD,EAAvDC,iBAAkBC,EAAqCF,EAArCE,gBAAiBzG,EAAoBuG,EAApBvG,OAAQ0G,EAAYH,EAAZG,SACjDC,EAAWnC,EAAY+B,KAAvBI,QAEPhB,EAAYY,GACZtC,EAAS5D,GACTgE,EAAUmC,GACV3B,EAAe4B,GACfzB,EAAUhF,GACVoF,EAAQsB,EAASE,MAAM,EAAG,IAC1BnC,EAAekC,GAEfnB,GAAa,EACjB,IAAGqB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZtB,GAAa,EACjB,GAEJ,GAAG,CAACI,KAGA3G,EAAAA,EAAAA,KAACiE,EAAI,CAAC+D,WAAY7C,EAAOhF,SACpBmG,GAAYtG,EAAAA,EAAAA,KAACJ,EAAAA,EAAM,CAACG,MAAO,WAC5BuB,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAArD,SAAA,EACAH,EAAAA,EAAAA,KAAA,OAAKiI,MAAO,CAACC,QAAS,QAAQ/H,UAC1BmB,EAAAA,EAAAA,MAAC4C,EAAI,CAAA/D,SAAA,EACDmB,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACImB,EAAAA,EAAAA,MAAC6C,EAAI,CAAAhE,SAAA,EAEDH,EAAAA,EAAAA,KAACoE,EAAK,CAAAjE,SAAE4E,IACPmB,IAAQlG,EAAAA,EAAAA,KAACsE,EAAI,CAAAnE,SAAE+F,IACfpB,IACG9E,EAAAA,EAAAA,KAACmC,EAAqB,CAACC,SAAUA,OAI5CuD,IAAe3F,EAAAA,EAAAA,KAACwE,EAAQ,CAAArE,SAAEwF,OAE1B5E,IAAUf,EAAAA,EAAAA,KAACc,EAAU,CAACC,OAAQA,SAG1BwE,IACGvF,EAAAA,EAAAA,KAAC0E,EAAW,CAAAvE,SACPoF,EAAYtE,KAAI,SAAApB,GAAA,IAAEsI,EAAKtI,EAALsI,MAAK,OACxBnI,EAAAA,EAAAA,KAAA,MAAAG,UACIH,EAAAA,EAAAA,KAAC4E,EAAU,CAACwD,IAAKD,EAAOE,IAAI,OAAOC,QAAQ,UAC1C,UAMrC,C","sources":["components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/ToggleFavouriteButton/ToggleFavouriteButton.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport {RiXboxLine} from 'react-icons/ri'\nimport styled from 'styled-components'\n\nexport const StoresList = ({stores}) => {\n    return (\n        <List>\n            {stores.map(({store}) => {\n                const {name, domain} = store\n                return(<li><a href={`https://${domain}`}>\n                    {name === 'Steam' && <FaSteam />}\n                    {name === 'PlayStation Store' && <FaPlaystation />}\n                    {name === 'App Store' && <FaAppStore />}\n                    {name === 'GOG' && <SiGogdotcom />}\n                    {name === 'Xbox Store' && <FaXbox />}\n                    {name === 'Xbox 360 Store' && <RiXboxLine />}\n                    {name === 'Nintendo Store' && <SiNintendo />}\n                    {name === 'Epic Games' && <SiEpicgames />}\n                    {name === 'Google Play' && <FaGooglePlay />}\n                    {name === 'itch.io' && <FaItchIo />}\n                </a></li>)\n            })}\n        </List>\n    )\n    \n}\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport authContext from '../../context/context'\nimport { removeGameFromFavourite, addGameToFavourite, getFavouriteGames } from \"utils/firebase\"\nimport {BsBookmark, BsFillBookmarkFill} from 'react-icons/bs'\nimport styled from \"styled-components\"\n\nexport const ToggleFavouriteButton = ({gameData}) => {\n    const {userId} = useContext(authContext)\n    const [isFavourite, setIsFavourite] = useState()\n\n    useEffect(() => {\n        getFavouriteGames(userId).then(res => {\n            if(res.val()) setIsFavourite(Object.keys(res.val()).some(el => el === gameData.slug))\n        })\n    }, [gameData.slug, userId, isFavourite])\n\n        return (\n            <>{isFavourite ? <Button type=\"button\" onClick={() => {\n                removeGameFromFavourite(userId, gameData.slug)\n                setIsFavourite(false)\n            }}>Bookmark <BsFillBookmarkFill size='20px'/></Button> :\n            <Button type=\"button\" onClick={() => {\n                addGameToFavourite(userId, gameData.slug, gameData)\n                setIsFavourite(true)\n            }}>Bookmark <BsBookmark size='20px'/></Button>}</>\n        )\n    }\n\nconst Button = styled.button`\n    background-color: rgba(84, 84, 84, 0.5);\n    color: white;\n    height: auto;\n    padding: 10px 20px;\n    font-size: 17px;\n    display: flex;\n    gap: 10px;\n    border: none;\n    border-radius: 10px;\n    font-family: 'Nunito', sans-serif;\n    display: flex;\n    align-items: center;\n    justify-content: center\n`","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { getGameById, getScreenshots} from \"../../services/games-api\"\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport authContext from '../../context/context'\nimport styled from \"styled-components\";\nimport { ToggleFavouriteButton } from \"components/ToggleFavouriteButton/ToggleFavouriteButton\";\n\nconst GameDescription = () => {\n    const {isLoggedIn} = useContext(authContext)\n\n    const [title, setTitle] = useState('')\n    const [poster, setPoster] = useState()\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState()\n    const [stores, setStores] = useState()\n    const [year, setYear] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n\n    const { gameSlug } = useParams()\n\n    window.scroll({\n        top: 0,\n    });\n\n    useEffect(() => {\n        Promise.all([getGameById(gameSlug), getScreenshots(gameSlug)]).then(res => {\n            const [game, screenshots] = res\n            const {data} = game\n            const {name, background_image, description_raw, stores, released} = data\n            const {results} = screenshots.data\n\n            setGameData(data)\n            setTitle(name)\n            setPoster(background_image)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released.slice(0, 4))\n            setScreenshots(results)\n\n            setIsLoading(false)\n        }).catch(error => {\n            console.log(error)\n            setIsLoading(false)\n        })\n        \n    }, [gameSlug])\n\n    return (\n        <Page background={poster}>\n            {isLoading ? <Loader color={'white'} /> :\n            <>\n            <div style={{display: 'flex'}}>\n                <Info>\n                    <div >\n                        <Meta>\n\n                            <Title>{title}</Title>\n                            {year && <Year>{year}</Year>}\n                            {isLoggedIn &&\n                                <ToggleFavouriteButton gameData={gameData}/>\n                            }\n                        </Meta>\n                \n                    {description && <Overview>{description}</Overview>}\n                    </div>\n                    {stores && <StoresList stores={stores}/>}\n                        </Info>\n                        </div >\n                        {screenshots &&\n                            <Screenshots>\n                                {screenshots.map(({image}) => \n                                <li>\n                                    <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                                </li>)}\n                            </Screenshots>}</>\n                        }\n                \n        </Page>\n    )\n}\n\nconst Page = styled.div`\n    padding: 20px;\n\n    height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    overflow-y: scroll;\n    // align-items: center;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;    \n`\n\nconst Info = styled.div`\n    overflow-y: scroll;\n    display: flex;\n    gap: 40px;\n    clip-path: polygon(3% 0, 100% 0, 100% 10%, 100% 92%, 97% 100%, 0 100%, 0 71%, 0 9%);\n    background-color: transparent;\n    backdrop-filter: blur(10px);\n    // clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 70%, 0 11%);\n    height: auto;\n    // background-color: #080D2B;\n    padding: 40px;\n    box-sizing: border-box;\n    margin-bottom: 20px;\n    width: 60vw\n`\n\nconst Meta = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 20px;\n    gap: 10px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 35px;\n\n    \n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n    margin-right: auto;\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    max-height: 200px;\n    overflow-y: scroll\n`\n\nconst Screenshots = styled.ul`\n    display: flex;\n    height: auto;\n    gap: 10px;\n    padding: 40px;\n    flex-wrap: wrap;\n    backdrop-filter: blur(10px);\n    width: 90vw\n`\n\nconst Screenshot = styled.img`\n    height: 200px;\n    width: calc((90vw - 40px)/5);\n    max-width: 1000px;\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n    object-fit: cover;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    &:hover {\n        transform: scale(0.9);\n        clip-path:none\n    }\n`\n\nexport default GameDescription"],"names":["Loader","_ref","className","color","_jsx","Wrapper","render","children","FidgetSpinner","backgroundColor","ballColors","styled","_templateObject","_taggedTemplateLiteral","props","css","_templateObject2","_templateObject3","StoresList","stores","List","map","_ref2","store","name","domain","_jsxs","href","concat","FaSteam","FaPlaystation","FaAppStore","SiGogdotcom","FaXbox","RiXboxLine","SiNintendo","SiEpicgames","FaGooglePlay","FaItchIo","ToggleFavouriteButton","gameData","userId","useContext","authContext","_useState","useState","_useState2","_slicedToArray","isFavourite","setIsFavourite","useEffect","getFavouriteGames","then","res","val","Object","keys","some","el","slug","_Fragment","Button","type","onClick","removeGameFromFavourite","BsFillBookmarkFill","size","addGameToFavourite","BsBookmark","Page","Info","Meta","Title","_templateObject4","Year","_templateObject5","Overview","_templateObject6","Screenshots","_templateObject7","Screenshot","_templateObject8","isLoggedIn","title","setTitle","_useState3","_useState4","poster","setPoster","_useState5","_useState6","screenshots","setScreenshots","_useState7","_useState8","description","setDescription","_useState9","_useState10","setStores","_useState11","_useState12","year","setYear","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","setGameData","gameSlug","useParams","window","scroll","top","Promise","all","getGameById","getScreenshots","_res","game","data","background_image","description_raw","released","results","slice","catch","error","console","log","background","style","display","image","src","alt","loading"],"sourceRoot":""}