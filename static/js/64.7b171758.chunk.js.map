{"version":3,"file":"static/js/64.7b171758.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/BookmarkButton/BookmarkButton.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","components/GameOverview/GameOverview.jsx","components/GameScreenshots/GameScreenshots.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n    color: white;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport { RiXboxLine } from 'react-icons/ri'\nimport styled from 'styled-components'\nimport { memo } from 'react'\n\nconst setStoreIcon = (storeName) => {\n    let icon\n    switch (storeName) {\n        case 'Steam':\n            icon = <FaSteam />\n            break\n        case 'PlayStation Store':\n            icon = <FaPlaystation />\n            break\n        case 'App Store':\n            icon = <FaAppStore />\n            break\n        case 'GOG':\n            icon = <SiGogdotcom />\n            break\n        case 'Xbox Store':\n            icon = <FaXbox />\n            break\n        case 'Xbox 360 Store':\n            icon = <RiXboxLine />\n            break\n        case 'Nintendo Store':\n            icon = <SiNintendo />\n            break\n        case 'Epic Games':\n            icon = <SiEpicgames />\n            break\n        case 'Google Play':\n            icon = <FaGooglePlay />\n            break\n        case 'itch.io':\n            icon = <FaItchIo />\n            break\n        default:\n            return null\n    }\n    return icon\n}\n\nexport const StoresList = memo(({ stores }) => {\n    console.log('stores')\n        return (\n            <List>\n                {stores.map(({ store, id }) => {\n                    const { name, domain } = store\n\n                    return (\n                        <li key={id}>\n                            <a href={`https://${domain}`} target='_blank' rel='noreferrer'>\n                                {setStoreIcon(name)}\n                            </a>\n                        </li>\n                    )\n                })}\n            </List>\n        )\n    })\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n     gap: 10px;\n     flex-wrap: wrap;\n   \n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        gap: 20px;\n    }\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { memo, useContext } from \"react\"\nimport { authContext } from '../../context/context'\nimport { removeGameFromBookmarks, addGameToBookmarks } from \"utils/firebase/database\"\nimport { BsBookmark, BsFillBookmarkFill } from 'react-icons/bs'\nimport { useParams } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nexport const BookmarkButton = memo(({isBookmark, gameData, setIsBookmark}) => {\n    const { userId } = useContext(authContext)\n    const {gameSlug} = useParams()\n\n    const toggleIsFavourite = () => {\n        if (isBookmark) {\n            removeGameFromBookmarks(userId, gameSlug)\n        }\n        else {\n            addGameToBookmarks(userId, gameSlug, gameData)\n        }\n        \n        setIsBookmark(prevState => !prevState)\n    }\n\n\n        return (\n            <Button type=\"button\" onClick={toggleIsFavourite}>\n                Bookmark {isBookmark ? <BsFillBookmarkFill size='20px' /> : <BsBookmark size='20px' />}\n            </Button>\n        )\n})\n    \n\n\nconst Button = styled.button`\n    height: auto;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n\n    color: white;\n    background-color: rgba(84, 84, 84, 0.5);\n`","import { memo, useEffect, useState } from \"react\"\nimport { fetchUserInfo } from \"utils/firebase/database\"\nimport styled from \"styled-components\"\n\nexport const Comment = memo(({ userId, text }) => {\n\n    const [authorAvatar, setAuthorAvatar] = useState()\n    const [authorUsername, setAuthorUsername] = useState('')\n    \n    useEffect(() => {\n        fetchUserInfo(userId).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setAuthorUsername(username)\n            setAuthorAvatar(photoUrl)\n        }).catch(error => {\n            console.log(error)\n        }\n    )\n    }, [userId])\n\n    return (\n        <CommentWrapper>\n            <AuthorInfo>\n                <AvatarWrapper>\n                    {authorAvatar && <AuthorAvatar src={authorAvatar} alt={`${authorUsername}'s avatar`}></AuthorAvatar>}\n                </AvatarWrapper>\n                <AuthorName>{authorUsername}</AuthorName>\n            </AuthorInfo>\n            \n            <CommentText>{text}</CommentText>\n        </CommentWrapper>\n    )\n})\n\nconst CommentWrapper = styled.li`\n    width: 100%;\n    padding: 10px 20px;\n    box-sizing: border-box;\n    border: 2px solid #2F3149;\n    border-radius: 20px;\n    \n    @media screen and (min-width: 768px){\n        width: 542px;\n    }\n`\n\nconst AuthorName = styled.p`\n    color: white\n`\n\nconst CommentText = styled.p`\n    color: white\n`\n\nconst AuthorInfo = styled.div`\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n   \n`\n\nconst AvatarWrapper = styled.div`\n    height: 60px;\n    width: 60px;\n    overflow: hidden;\n    margin-right: 10px;\n    position: relative;\n    border-radius: 100px;    \n`\n\nconst AuthorAvatar = styled.img`\n    width: 60px;\n    height: 60px;\n    object-fit: cover;\n`","import { useContext} from \"react\"\nimport { authContext } from \"context/context\"\nimport { leaveComment } from \"utils/firebase/database\"\nimport { Comment } from \"components/Comment/Comment\"\nimport { useParams } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst getAndFormatAuthorId = (comment) => {\n    return Object.keys(comment)[0].split('-')[0]\n}\n\nconst getCommentText = (comment) => {\n    return Object.values(comment)[0]\n}\n\nexport const Comments = ({comments, setComments}) => {\n    const { userId, isLoggedIn } = useContext(authContext)\n    const { gameSlug } = useParams()\n    \n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n\n        const commentInput = e.target.elements.comment\n        const commentText = commentInput.value\n\n        leaveComment(userId, gameSlug, commentText)\n        setComments(prev => [...prev, { [userId]: commentText }])\n\n        commentInput.value = ''\n    }\n\n    return (\n        <Section>\n            {!isLoggedIn ? <Message>You must be logged in to comment</Message> :\n                <Form onSubmit={(e) => onFormSubmit(e)}>\n                <Input required name='comment' placeholder=\"What do you think about this game?\" />\n                <SubmitButton type=\"submit\">Comment</SubmitButton>\n            </Form>\n            }\n                {comments.length &&\n                    <CommentsList>\n                        {comments.map(comment => \n                            <Comment userId={getAndFormatAuthorId(comment)} key={Object.keys(comment)[0]} text={getCommentText(comment)} />\n                        )}\n                    </CommentsList>}\n        </Section>\n    )\n}\n\nconst Message = styled.p`\n    color: white;\n    font-size: 30px;\n    font-family: 'Nunito', sans-serif;\n    margin-bottom: 20px\n`\n\nconst Section = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    @media screen and (min-width: 1200px){\n        align-items: flex-start\n    }\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-bottom: 20px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n\n    @media screen and (min-width: 768px) {\n        width: 542px;\n    }\n`\n\nconst CommentsList = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        align-items: flex-start\n    }\n`\n\nconst Input = styled.textarea`\n    width: 100%;\n    min-height: 80px !important;\n    resize: vertical;\n\n    padding: 10px 20px;\n    border-radius: 20px;\n    \n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n    \n    @media screen and (min-width: 768px){\n        width: 500px;\n        min-height: 30px;\n    }\n\n    &::placeholder{\n        font-family: 'Nunito', sans-serif\n    }\n`\n\nconst SubmitButton = styled.button`\n    padding: 4px 10px;\n    border: none;\n    border-radius: 12px;\n\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    background-color: #00021A;\n    color: white;\n`","import styled from \"styled-components\"\nimport { memo, useState } from \"react\"\n\nexport const GameOverview = memo(({ description }) => {\n    console.log('desc')\n    const [showOverview, setShowOverview] = useState(false)\n\n    \n    const toggleShowDescription = () => {\n        setShowOverview(prev => !prev)\n    }\n\n        return (\n            <>\n                <Overview className={showOverview ? 'more' : 'less'}>\n                    {description}\n                </Overview>\n                {description.length > 673 &&\n                    <ToggleShowButton onClick={toggleShowDescription}>\n                        Show {showOverview ? 'less' : 'more'}\n                    </ToggleShowButton>\n                }\n            </>\n        )\n}\n)\n\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    overflow: hidden;\n    transition: 250ms all ease;\n    margin-bottom: 20px;\n    text-overflow: ellipsis;\n\n    &.less{\n        height: 205px;\n    }\n\n    &.more{\n        height: auto\n    }\n`\n\nconst ToggleShowButton = styled.button`\n    background-color: transparent;\n    font-family: 'Nunito', sans-serif;\n    color: white;\n    font-size: 17px;\n    padding: 5px 10px;\n    border: 1px solid orange;\n    border-radius: 10px\n`","import styled from \"styled-components\"\nimport { memo } from \"react\"\n\nexport const GameScreenshots = memo(({screenshots}) => {\n        return (\n            <>\n                <Screenshots>\n                    {screenshots.map(({image, id}) => \n                        <ScreenshotWrapper key={id}>\n                            <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                        </ScreenshotWrapper>)\n                    }\n                </Screenshots>\n            </>\n        )\n    } \n)\nconst Screenshots = styled.ul`\n    width: 100%;\n    height: auto;\n    margin-bottom: 60px;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    \n    backdrop-filter: blur(10px);\n`\n\nconst Screenshot = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n`\n\nconst ScreenshotWrapper = styled.li`\n    width: 100%;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n\n    &:hover {\n        transform: scale(1.2);\n        clip-path:none;\n        z-index: 1111\n    }\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 10px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 20px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 30px)/4);\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { fetchGameById, fetchScreenshots } from \"utils/rawg-api\";\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport {authContext} from '../../context/context'\n\nimport { BookmarkButton } from \"components/BookmarkButton/BookmarkButton\";\nimport { Container } from \"components/Container/Container\";\nimport { Comments } from \"components/Comments/Comments\";\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\";\n\nimport styled from \"styled-components\";\nimport { GameOverview } from \"components/GameOverview/GameOverview\";\nimport { GameScreenshots } from \"components/GameScreenshots/GameScreenshots\";\nimport { fetchBookmarks, fetchComments } from \"utils/firebase/database\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const { isLoggedIn, userId } = useContext(authContext)\n    const [isBookmark, setIsBookmark] = useState()\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState('')\n    const [stores, setStores] = useState([])\n    const [year, setYear] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const [isError, setIsError] = useState(false)\n    const { gameSlug } = useParams()\n\n    useEffect(() => {\n        Promise.all([fetchGameById(gameSlug),\n            fetchScreenshots(gameSlug),\n            fetchComments(gameSlug),\n            fetchBookmarks(userId)\n        ]).then(res => {\n            const [game, screenshots, comments, bookmarks] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n            \n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released)\n            setScreenshots(results)\n\n            if (bookmarks.val()) {\n                setIsBookmark(Object.keys(bookmarks.val()).some(el => el === gameSlug))\n            }\n\n            if(comments.val()) setComments(formatComments(comments.val()))\n\n            setIsLoading(false)\n        }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n    }, [gameSlug, userId])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> : isError ? <ErrorComponent/> :\n            <>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year.slice(0, 4)}</Year> }\n                                {isLoggedIn && <BookmarkButton\n                                    gameData={gameData}\n                                    isBookmark={isBookmark}\n                                    setIsBookmark={setIsBookmark} />\n                                }\n                            </Meta>\n                                {description && <GameOverview description={description} />}\n                        </div>\n                                {stores && <StoresList stores={stores} data={gameData}/>}\n                    </Info>\n                 </div>\n                                {screenshots && <GameScreenshots screenshots={screenshots} />}\n                                <Comments setComments={setComments} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nexport default GameDescription"],"names":["ErrorComponent","_jsxs","Block","children","_jsx","Message","Image","src","mario","alt","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Loader","_ref","className","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","setStoreIcon","storeName","icon","FaSteam","FaPlaystation","FaAppStore","SiGogdotcom","FaXbox","RiXboxLine","SiNintendo","SiEpicgames","FaGooglePlay","FaItchIo","StoresList","memo","stores","console","log","List","map","_ref2","store","id","name","domain","href","concat","target","rel","BookmarkButton","isBookmark","gameData","setIsBookmark","userId","useContext","authContext","gameSlug","useParams","Button","type","onClick","removeGameFromBookmarks","addGameToBookmarks","prevState","BsFillBookmarkFill","size","BsBookmark","Comment","text","_useState","useState","_useState2","_slicedToArray","authorAvatar","setAuthorAvatar","_useState3","_useState4","authorUsername","setAuthorUsername","useEffect","fetchUserInfo","then","res","_res$val","val","username","photoUrl","catch","error","CommentWrapper","AuthorInfo","AvatarWrapper","AuthorAvatar","AuthorName","CommentText","_templateObject4","_templateObject5","_templateObject6","getAndFormatAuthorId","comment","Object","keys","split","getCommentText","values","Comments","comments","setComments","_useContext","isLoggedIn","Section","Form","onSubmit","e","preventDefault","commentInput","elements","commentText","value","leaveComment","prev","_toConsumableArray","_defineProperty","onFormSubmit","Input","required","placeholder","SubmitButton","length","CommentsList","GameOverview","description","showOverview","setShowOverview","_Fragment","Overview","ToggleShowButton","GameScreenshots","screenshots","Screenshots","image","ScreenshotWrapper","Screenshot","loading","Page","Info","Meta","Title","Year","title","setTitle","_useState5","_useState6","setScreenshots","_useState7","_useState8","setDescription","_useState9","_useState10","setStores","_useState11","_useState12","year","setYear","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","setGameData","_useState17","_useState18","_useState19","_useState20","isError","setIsError","Promise","all","fetchGameById","fetchScreenshots","fetchComments","fetchBookmarks","_res","game","bookmarks","data","description_raw","released","results","some","el","entries","formatComments","Container","style","display","slice"],"sourceRoot":""}