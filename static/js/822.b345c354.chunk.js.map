{"version":3,"file":"static/js/822.b345c354.chunk.js","mappings":"0NAmEMA,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iVAgBvB,UA5EgB,WACZ,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAkCT,EAAAA,EAAAA,WAAS,GAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8Bb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAjB,EAAAA,EAAAA,GAAAe,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAeC,EAAAA,EAAAA,UACjB,kBAAMC,OAAOC,aAAWC,EAAAA,EAAAA,GAAKN,GAAQ,GACrC,CAACA,IAGLO,EAAsDL,EAA9CM,SAAAA,OAAQ,IAAAD,EAAG,KAAIA,EAAEE,EAA6BP,EAA7BO,MAAKC,EAAwBR,EAAtBS,MAAAA,OAAK,IAAAD,EAAG,KAAIA,EAAEE,EAAQV,EAARU,MAE9CC,EAAAA,EAAAA,YAAU,WACNrB,GAAa,IACbsB,EAAAA,EAAAA,IAAuBL,EAAOG,EAAMJ,EAAUG,GAAOI,MAAK,SAAAC,GAAa,IAAXC,EAAID,EAAJC,KAC5CC,EAAmBD,EAAnBC,QAASC,EAAUF,EAAVE,MAEjBnC,EAASkC,EAAQE,QAAO,SAAAC,GAAI,MAAkB,iBAAdA,EAAKC,IAAuB,KAC5DlC,EAAc+B,EAAQ,IAEtB3B,GAAa,EACjB,IAAG+B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ5B,GAAW,GACXJ,GAAa,EACjB,GACR,GAAG,CAACoB,EAAMH,EAAOD,EAAUG,EAAOX,IAWlC,OACI2B,EAAAA,EAAAA,KAACpD,EAAI,CAAAqD,SACAjC,GAAUgC,EAAAA,EAAAA,KAACE,EAAAA,GAAc,KAC1BC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACQD,EAAAA,EAAAA,KAACK,EAAAA,GAAU,CAACC,UAAW,YACtB1C,GAAYoC,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CAACD,UAAW,iBAAkBE,MAAO,UACnC,IAAjBpD,EAAMqD,QACHN,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACID,EAAAA,EAAAA,KAACU,EAAAA,GAAQ,CAACtD,MAAOA,KACjB4C,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAACnD,WAAYA,GAAc,IAAMA,EAAa,IAAKoD,WAlBjE,SAAC3B,GACtBX,GAASuC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGtC,GAAY,IAAEU,KAAOA,EAAO,KAE1CpB,GAAa,GAEbiD,OAAOC,OAAO,CACVC,IAAK,GAEb,EAUwH/B,KAAMA,QAEtGe,EAAAA,EAAAA,KAAA,MAAIiB,MAAO,CAAET,MAAO,SAAUP,SAAC,mBAO3D,C","sources":["pages/Catalog/Catalog.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { fetchGameBySearchQuery } from \"utils\"\nimport { Pagination, SearchForm, Loader, GameList, ErrorComponent } from 'components'\nimport styled from \"styled-components\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { useMemo } from \"react\"\n\nconst Catalog = () => {\n    const [games, setGames] = useState([])\n    const [totalPages, setTotalPages] = useState(0)\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n    const [params, setParams] = useSearchParams()\n\n    const searchParams = useMemo(\n        () => Object.fromEntries([...params]),\n        [params]\n    );\n\n    const { ordering = null, query, genre = null, page} = searchParams\n\n    useEffect(() => {\n        setIsLoading(true)\n        fetchGameBySearchQuery(query, page, ordering, genre).then(({data}) => {\n                const { results, count } = data\n\n                setGames(results.filter(game => game.slug !== 'atomic-heart'))\n                setTotalPages(count / 20)\n\n                setIsLoading(false)\n            }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n    }, [page, query, ordering, genre, params])\n\n    const handlePageChange = (page) => {\n        setParams({...searchParams, page: (page + 1)})\n        \n        setIsLoading(true)\n\n        window.scroll({\n            top: 0,\n        });\n    }\n    return (\n        <Page>\n            {isError ? <ErrorComponent/> :\n            <>\n                    <SearchForm className={'catalog'} />\n                    {isLoading ? <Loader className={'loader-catalog'} color={'white'} /> :\n                        (games.length !== 0 ?\n                            <>\n                                <GameList games={games} />\n                                <Pagination totalPages={totalPages <= 500 ? totalPages : 500} changePage={handlePageChange} page={page} />\n                            </> :\n                            <h1 style={{ color: 'white' }}>No matches</h1>\n                        )\n                    }\n                </>\n            }\n        </Page>\n    )\n}\n\n\nconst Page = styled.div`\n    padding: 10px 0 40px 0;\n    box-sizing: border-box;\n    min-height: calc(100vh - 61px);\n    position: relative;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px){\n        padding: 40px 0;\n    }\n`\n\nexport default Catalog"],"names":["Page","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","games","setGames","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isError","setIsError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchParams","useMemo","Object","fromEntries","_toConsumableArray","_searchParams$orderin","ordering","query","_searchParams$genre","genre","page","useEffect","fetchGameBySearchQuery","then","_ref","data","results","count","filter","game","slug","catch","error","console","log","_jsx","children","ErrorComponent","_jsxs","_Fragment","SearchForm","className","Loader","color","length","GameList","Pagination","changePage","_objectSpread","window","scroll","top","style"],"sourceRoot":""}