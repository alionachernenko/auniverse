{"version":3,"file":"static/js/699.ea738572.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/BookmarkButton/BookmarkButton.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n    color: white;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport {RiXboxLine} from 'react-icons/ri'\nimport styled from 'styled-components'\n\nexport const StoresList = ({ stores}) => {\n\n    return (\n        <List>\n            {stores.map(({store, id}) => {\n                const { name, domain } = store\n\n                return(<li key={id}><a href={`https://${domain}`}>\n                    {name === 'Steam' && <FaSteam />}\n                    {name === 'PlayStation Store' && <FaPlaystation />}\n                    {name === 'App Store' && <FaAppStore />}\n                    {name === 'GOG' && <SiGogdotcom />}\n                    {name === 'Xbox Store' && <FaXbox />}\n                    {name === 'Xbox 360 Store' && <RiXboxLine />}\n                    {name === 'Nintendo Store' && <SiNintendo />}\n                    {name === 'Epic Games' && <SiEpicgames />}\n                    {name === 'Google Play' && <FaGooglePlay />}\n                    {name === 'itch.io' && <FaItchIo />}\n                </a></li>)\n            })}\n        </List>\n    )\n    \n}\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n     gap: 10px;\n     flex-wrap: wrap;\n   \n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        gap: 20px;\n    }\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport { authContext } from '../../context/context'\nimport { removeGameFromFavourite, addGameToFavourite, getFavouriteGames } from \"utils/firebase\"\nimport { BsBookmark, BsFillBookmarkFill } from 'react-icons/bs'\n\nimport styled from \"styled-components\"\n\nexport const BookmarkButton = ({gameData}) => {\n    const { userId } = useContext(authContext)\n    \n    const [isFavourite, setIsFavourite] = useState()\n\n    const { slug } = gameData\n\n    const toggleIsFavourite = () => {\n        if (isFavourite) {\n            removeGameFromFavourite(userId, slug)\n        }\n        else if (!isFavourite) {\n            addGameToFavourite(userId, slug, gameData)\n        }\n        \n        setIsFavourite(prevState => !prevState)\n    }\n\n    useEffect(() => {\n        getFavouriteGames(userId).then(res => {\n            if(res.val()) setIsFavourite(Object.keys(res.val()).some(el => el === slug))\n        }).catch(error => console.log(error))\n    }, [userId, isFavourite, slug])\n\n        return (\n            <Button type=\"button\" onClick={toggleIsFavourite}>\n                Bookmark {isFavourite ? <BsFillBookmarkFill size='20px' /> : <BsBookmark size='20px' />}\n            </Button>\n        )\n}\n    \n\n\nconst Button = styled.button`\n    height: auto;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n\n    color: white;\n    background-color: rgba(84, 84, 84, 0.5);\n`","import { useEffect, useState } from \"react\"\nimport { getUserInfo } from \"utils/firebase\"\nimport styled from \"styled-components\"\n\nexport const Comment = ({ userId, text }) => {\n    \n    const [authorAvatar, setAuthorAvatar] = useState()\n    const [authorUsername, setAuthorUsername] = useState('')\n    \n    useEffect(() => {\n        getUserInfo(userId).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setAuthorUsername(username)\n            setAuthorAvatar(photoUrl)\n        }).catch(error => {\n            console.log(error)\n        }\n    )\n    }, [userId])\n\n    return (\n        <CommentWrapper>\n            <AuthorInfo>\n                <AvatarWrapper>\n                    {authorAvatar && <AuthorAvatar src={authorAvatar} alt={`${authorUsername}'s avatar`}></AuthorAvatar>}\n                </AvatarWrapper>\n                <AuthorName>{authorUsername}</AuthorName>\n            </AuthorInfo>\n            \n            <CommentText>{text}</CommentText>\n        </CommentWrapper>\n    )\n}\n\nconst CommentWrapper = styled.li`\n    width: 100%;\n    padding: 10px 20px;\n    box-sizing: border-box;\n    border: 2px solid #2F3149;\n    border-radius: 20px;\n    \n    @media screen and (min-width: 768px){\n        width: 542px;\n    }\n`\n\nconst AuthorName = styled.p`\n    color: white\n`\n\nconst CommentText = styled.p`\n    color: white\n`\n\nconst AuthorInfo = styled.div`\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n   \n`\n\nconst AvatarWrapper = styled.div`\n    height: 60px;\n    width: 60px;\n    overflow: hidden;\n    margin-right: 10px;\n    position: relative;\n    border-radius: 100px;    \n`\n\nconst AuthorAvatar = styled.img`\n    width: 60px;\n    height: 60px;\n    object-fit: cover;\n`","import { useContext } from \"react\"\nimport { authContext } from \"context/context\"\nimport { leaveComment } from \"utils/firebase\"\nimport { Comment } from \"components/Comment/Comment\"\nimport styled from \"styled-components\"\n\nconst getAndFormatAuthorId = (comment) => {\n    return Object.keys(comment)[0].split('-')[0]\n}\n\nconst getCommentText = (comment) => {\n    return Object.values(comment)[0]\n}\n\nexport const Comments = ({comments, setComments, gameSlug}) => {\n    const { userId, isLoggedIn} = useContext(authContext)\n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n\n        const commentInput = e.target.elements.comment\n        const commentText = commentInput.value\n\n        leaveComment(userId, gameSlug, commentText)\n        setComments(prev => [...prev, { [userId]: commentText }])\n\n        commentInput.value = ''\n    }\n\n    return (\n        <Section>\n            {!isLoggedIn ? <Message>You must be logged in to comment</Message> :\n                <Form onSubmit={(e) => onFormSubmit(e)}>\n                <Input required name='comment' placeholder=\"What do you think about this game?\" />\n                <SubmitButton type=\"submit\">Comment</SubmitButton>\n            </Form>\n            }\n                {comments.length !== 0 &&\n                    <CommentsList>\n                        {comments.map(comment => \n                            <Comment userId={getAndFormatAuthorId(comment)} key={Object.keys(comment)[0]} text={getCommentText(comment)} />\n                        )}\n                    </CommentsList>}\n        </Section>\n    )\n}\n\nconst Message = styled.p`\n    color: white;\n    font-size: 30px;\n    font-family: 'Nunito', sans-serif;\n    margin-bottom: 20px\n`\n\nconst Section = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    @media screen and (min-width: 1200px){\n        align-items: flex-start\n    }\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-bottom: 20px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n\n    @media screen and (min-width: 768px) {\n        width: 542px;\n    }\n`\n\nconst CommentsList = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        align-items: flex-start\n    }\n`\n\nconst Input = styled.textarea`\n    width: 100%;\n    min-height: 80px !important;\n    resize: vertical;\n\n    padding: 10px 20px;\n    border-radius: 20px;\n    \n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n    \n    @media screen and (min-width: 768px){\n        width: 500px;\n        min-height: 30px;\n    }\n\n    &::placeholder{\n        font-family: 'Nunito', sans-serif\n    }\n`\n\nconst SubmitButton = styled.button`\n    padding: 4px 10px;\n    border: none;\n    border-radius: 12px;\n\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    background-color: #00021A;\n    color: white;\n`","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { getGameById, getScreenshots} from \"../../services/games-api\"\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport {authContext} from '../../context/context'\n\nimport { BookmarkButton } from \"components/BookmarkButton/BookmarkButton\";\nimport { Container } from \"components/Container/Container\";\nimport { getComments } from \"utils/firebase\";\nimport { Comments } from \"components/Comments/Comments\";\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\";\n\nimport styled from \"styled-components\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const {isLoggedIn} = useContext(authContext)\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState()\n    const [stores, setStores] = useState()\n    const [year, setYear] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const [isError, setIsError] = useState(false)\n    const [showOverview, setShowOverview] = useState(false)\n    const { gameSlug } = useParams()\n\n    const toggleShowDescription = () => {\n        setShowOverview(prev => !prev)\n    }\n\n\n    window.scroll({\n        top: 0,\n    });\n\n    useEffect(() => {\n        Promise.all([getGameById(gameSlug), getScreenshots(gameSlug), getComments(gameSlug)]).then(res => {\n            const [game, screenshots, comments] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n\n            console.log(data)\n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released.slice(0, 4))\n            setScreenshots(results)\n\n            if(comments.val()) setComments(formatComments(comments.val()))\n\n            setIsLoading(false)\n        }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n    }, [description, gameSlug])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> : isError ? <ErrorComponent/> :\n            <>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year}</Year> }\n                                { isLoggedIn && <BookmarkButton gameData={gameData}/> }\n                            </Meta>\n                                    {description && <Overview className={showOverview ? 'more' : 'less'}>{description}</Overview>}\n                                    {description && description.length > 673 && <ToggleShowButton onClick={toggleShowDescription}>Show {showOverview ? 'less' : 'more'}</ToggleShowButton>}\n                        </div>\n                                {stores && <StoresList stores={stores} data={gameData}/>}\n                    </Info>\n                 </div>\n                    {screenshots &&\n                        <Screenshots>\n                            {screenshots.map(({image, id}) => \n                                <ScreenshotWrapper key={id}>\n                                    <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                                </ScreenshotWrapper>)}\n                        </Screenshots>}\n                    <Comments setComments={setComments} gameSlug={gameSlug} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    overflow: hidden;\n    transition: 250ms all ease;\n    margin-bottom: 20px;\n    text-overflow: ellipsis;\n\n    &.less{\n        height: 205px;\n    }\n\n    &.more{\n        height: auto\n    }\n`\n\nconst Screenshots = styled.ul`\n    width: 100%;\n    height: auto;\n    margin-bottom: 60px;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    \n    backdrop-filter: blur(10px);\n`\n\nconst Screenshot = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n`\n\nconst ScreenshotWrapper = styled.li`\n    width: 100%;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n\n    &:hover {\n        transform: scale(1.2);\n        clip-path:none;\n        z-index: 1111\n    }\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 10px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 20px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 30px)/4);\n    }\n`\nconst ToggleShowButton = styled.button`\n    background-color: transparent;\n    font-family: 'Nunito', sans-serif;\n    color: white;\n    font-size: 17px;\n    padding: 5px 10px;\n    border: 1px solid orange;\n    border-radius: 10px\n`\nexport default GameDescription"],"names":["ErrorComponent","Block","Message","Image","src","mario","alt","styled","Loader","className","color","Wrapper","render","backgroundColor","ballColors","props","css","StoresList","stores","List","map","store","id","name","domain","href","BookmarkButton","gameData","userId","useContext","authContext","useState","isFavourite","setIsFavourite","slug","useEffect","getFavouriteGames","then","res","val","Object","keys","some","el","catch","error","console","log","Button","type","onClick","removeGameFromFavourite","addGameToFavourite","prevState","size","Comment","text","authorAvatar","setAuthorAvatar","authorUsername","setAuthorUsername","getUserInfo","username","photoUrl","CommentWrapper","AuthorInfo","AvatarWrapper","AuthorAvatar","AuthorName","CommentText","getAndFormatAuthorId","comment","split","getCommentText","values","Comments","comments","setComments","gameSlug","isLoggedIn","Section","Form","onSubmit","e","preventDefault","commentInput","target","elements","commentText","value","leaveComment","prev","onFormSubmit","Input","required","placeholder","SubmitButton","length","CommentsList","Page","Info","Meta","Title","Year","Overview","Screenshots","Screenshot","ScreenshotWrapper","ToggleShowButton","title","setTitle","screenshots","setScreenshots","description","setDescription","setStores","year","setYear","isLoading","setIsLoading","setGameData","isError","setIsError","showOverview","setShowOverview","useParams","window","scroll","top","Promise","all","getGameById","getScreenshots","getComments","game","data","description_raw","released","results","slice","entries","formatComments","Container","style","display","image","loading"],"sourceRoot":""}