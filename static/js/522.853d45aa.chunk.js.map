{"version":3,"file":"static/js/522.853d45aa.chunk.js","mappings":"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","sources":["pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport {  useLocation, useParams } from \"react-router-dom\"\nimport {\n    Loader, StoresList, BookmarkButton, Container, Comments, ErrorComponent,\n    GameOverview, GameScreenshots, GoBackLink\n} from \"components\";\nimport {authContext} from 'context'\n\nimport styled from \"styled-components\";\nimport { fetchBookmarks, fetchComments, fetchGameById, fetchScreenshots} from \"utils\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const { isLoggedIn, userId } = useContext(authContext)\n    const [isBookmark, setIsBookmark] = useState()\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState('')\n    const [stores, setStores] = useState([])\n    const [year, setYear] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const [isError, setIsError] = useState(false)\n    const location = useLocation()\n\n    const { gameSlug } = useParams()\n    console.log(location.state)\n\n    useEffect(() => {\n        Promise.all([fetchGameById(gameSlug),\n            fetchScreenshots(gameSlug),\n            fetchComments(gameSlug),\n            fetchBookmarks(userId)\n        ]).then(res => {\n            const [game, screenshots, comments, bookmarks] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n            \n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released)\n            setScreenshots(results)\n\n            if (bookmarks.val()) {\n                setIsBookmark(Object.keys(bookmarks.val()).some(el => el === gameSlug))\n            }\n\n            if(comments.val()) setComments(formatComments(comments.val()))\n\n            setIsLoading(false)\n        }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n    }, [gameSlug, userId])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> : isError ? <ErrorComponent/> :\n            <>\n                <GoBackLink/>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year.slice(0, 4)}</Year> }\n                                {isLoggedIn && <BookmarkButton\n                                    gameData={gameData}\n                                    isBookmark={isBookmark}\n                                    setIsBookmark={setIsBookmark} />\n                                }\n                            </Meta>\n                                {description && <GameOverview description={description} />}\n                        </div>\n                                {stores && <StoresList stores={stores} data={gameData}/>}\n                    </Info>\n                 </div>\n                                {screenshots && <GameScreenshots screenshots={screenshots} />}\n                                <Comments setComments={setComments} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n    position: relative;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nexport default GameDescription"],"names":["Page","styled","_templateObject","_taggedTemplateLiteral","Info","_templateObject2","Meta","_templateObject3","Title","_templateObject4","Year","_templateObject5","_useContext","useContext","authContext","isLoggedIn","userId","_useState","useState","_useState2","_slicedToArray","isBookmark","setIsBookmark","_useState3","_useState4","title","setTitle","_useState5","_useState6","screenshots","setScreenshots","_useState7","_useState8","description","setDescription","_useState9","_useState10","stores","setStores","_useState11","_useState12","year","setYear","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","gameData","setGameData","_useState17","_useState18","comments","setComments","_useState19","_useState20","isError","setIsError","location","useLocation","gameSlug","useParams","console","log","state","useEffect","Promise","all","fetchGameById","fetchScreenshots","fetchComments","fetchBookmarks","then","res","_res","game","bookmarks","data","name","description_raw","released","results","val","Object","keys","some","el","entries","map","_defineProperty","formatComments","catch","error","_jsx","children","Container","Loader","color","ErrorComponent","_jsxs","_Fragment","GoBackLink","style","display","slice","BookmarkButton","GameOverview","StoresList","GameScreenshots","Comments"],"sourceRoot":""}