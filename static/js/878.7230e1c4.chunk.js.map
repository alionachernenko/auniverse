{"version":3,"file":"static/js/878.7230e1c4.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/Loader/Loader.jsx","components/ProfileCard/ProfileCard.jsx","pages/Profile/Profile.jsx"],"sourcesContent":["import './GameCard.scss'\nimport { BiRightArrow } from 'react-icons/bi'\n\nimport { Link } from \"react-router-dom\"\nimport placeholderImage from 'assets/images/placeholder.png'\n\nexport const GameCard = ({ data, className }) => {\n\n    const {name, released, genres, background_image, slug, rating } = data\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <div className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster'\n                alt='No poster here' width='500' height='auto' /> : <img src={placeholderImage} alt={`${name} poster`} className='poster'/>}\n                <div className='description'>\n                    <p className='title'>\n                        {name}\n                    </p>\n                    {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                    {genres && <ul className='genres'>\n                        {genres.map((genre => <li className=\"genres_item\" key={genre.id}>{genre.name}</li>))}\n                    </ul>}\n                </div>\n                <div className='readmore-btn'>\n                    <p>Read more</p>\n                    <BiRightArrow color=\"green\" title=\"Read more button right arrow\"/>\n                </div>\n             <p className='rating'>{rating}</p>\n        </div>\n    </Link>\n    )\n}","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 60px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import styled from \"styled-components\"\nimport { RxUpload } from \"react-icons/rx\"\nimport { Oval } from \"react-loader-spinner\"\nimport authContext from '../../context/context'\nimport { useContext, useState } from \"react\"\nimport { uploadBytes, getDownloadURL, ref as sRef } from 'firebase/storage'\nimport {set, ref} from 'firebase/database'\nimport firebaseApps from 'config/firebase'\nimport { useLocation } from \"react-router-dom\"\nimport {BsPenFill} from 'react-icons/bs'\nimport {MdDone} from 'react-icons/md'\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading, setUsername}) => {\n\n    const {userId} = useContext(authContext)\n    const location = useLocation()\n    const [showChangeUsernameFrom, setShowChangeUsernameForm] = useState(false)\n    \n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname === '/profile' &&\n                    <><UploadInput id='upload_file'accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={\n                (e) => {\n                e.preventDefault()\n                \n                if(e.target.files[0]){\n                    if(e.target.files[0].size > 2097152){\n                        console.log('noooooJJFJFJJFJFJ')\n                        setIsAvatarLoading(false)\n                        return\n                    }\n                    setIsAvatarLoading(true)\n                    uploadBytes(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`), e.target.files[0]).then(() => {\n                    return getDownloadURL(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`))}).then((url) =>{\n                        console.log(url)\n                        \n                        set(ref(firebaseApps.database, 'users/' + userId + '/photoUrl'), url)\n                        setPhotoPath(url)\n    \n                        setIsAvatarLoading(false)\n                    })\n                }\n                }\n            }/>\n                    <UploadButton htmlFor=\"upload_file\">\n                        <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </UploadButton></>\n                        }\n                        {isAvatarLoading ? <Spinner><Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'}/></Spinner> : \n                        <Avatar style={{objectFit: 'cover',width: 200, height: '100%'}} src={`${avatar}`} alt=\"\"/>}\n                    </AvatarWrapper>\n                    <div style={{display: 'flex', gap: 5, alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap'}}>\n                {!showChangeUsernameFrom && <h1>{username}</h1>}\n                {location.pathname === '/profile' && !showChangeUsernameFrom && <ChangeUsernameButton onClick={() => setShowChangeUsernameForm(true)}><BsPenFill/></ChangeUsernameButton>}</div>\n                {showChangeUsernameFrom && <ChangeUsernameForm action=\"\" onSubmit={\n                    (e) => {\n                        e.preventDefault()\n                        set(ref(firebaseApps.database, 'users/' + userId + '/username'), e.target.elements.username.value)\n                        setUsername(e.target.elements.username.value)\n                        setShowChangeUsernameForm(false)\n                    }\n                }>\n                    <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                    <button><MdDone size={15}/></button>\n                </ChangeUsernameForm>}\n            </Info>\n    )\n}\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px\n`\nconst Spinner = styled.div`\n    text-align: center;\n    width: 90%;\n    height: 90%\n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 200px;\n    width: 200px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: transparent;\n\n`\n\nconst Avatar = styled.img`\ntransition: 250ms filter ease;\n\n    ${AvatarWrapper}:hover &{\n        filter: blur(3px)\n    }\n`\n\nconst UploadButton = styled.label`\n    border: none;\n    position: absolute;\n    opacity: 0;\n    width: 30px;\n    height: 30px;\n    background-color: white;\n    padding: 5px;\n    border-radius: 100px;\n    cursor: pointer;\n    z-index: 1111;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n`\n\nconst ChangeUsernameButton = styled.button`\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`","import { useContext, useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport authContext from '../../context/context'\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport { getFavouriteGames, userSignOut, getUserInfo } from \"../../utils/firebase\"\nimport { Loader } from 'components/Loader/Loader'\nimport { GameList } from 'components/GameList/GameList'\nimport { ProfileCard } from 'components/ProfileCard/ProfileCard'\n\nimport styled from 'styled-components'\nimport { Container } from \"components/Container/Container\"\n\nconst Profile = () => {\n    const {userId, isLoggedIn, setUserId} = useContext(authContext)\n\n    const [favouriteGames, setFavouriteGames] = useState([])\n    const [username, setUsername] = useState('')\n    const [photoPath, setPhotoPath] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [isAvatarLoading, setIsAvatarLoading] = useState(false)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/login/login-page')\n            return\n        }\n\n        Promise.all([getUserInfo(userId), getFavouriteGames(userId)])\n            .then(res => {\n                const [snapshot, games] = res\n            if (snapshot.exists()) {\n                const {username, photoUrl} = snapshot.val()\n                setUsername(username)\n                if(photoUrl) {\n                    setPhotoPath(photoUrl)\n                }\n                else {\n                    setPhotoPath(avatarPlaceholder)\n                }\n            } else {\n                setUsername('User')\n            }\n\n                if(games.val()) setFavouriteGames([...Object.values(games.val())])\n                setIsLoading(false)\n               \n            }).catch((error) => {\n                console.error(error);\n                setIsLoading(false)\n    })\n    \n    }, [isLoggedIn, navigate, userId])\n\n    const logOut = () => {\n        userSignOut()\n            .then(() => {\n                navigate('/login/login-page')\n                setUserId('')\n            }\n        );\n    }\n    \n    return (\n        <>\n            <Page>\n                <Container>\n               {isLoading ? <Loader className={'loader-profile'} color={'darkblue'} /> : <><Page className='top'>\n                    <ProfileCard setPhotoPath={setPhotoPath} avatar={photoPath} username={username} isAvatarLoading={isAvatarLoading} setIsAvatarLoading={setIsAvatarLoading} setUsername={setUsername}/>\n                    <LogOut type=\"button\" onClick={logOut}>Log out</LogOut>\n                    <h2 >Your bookmarks:</h2>\n                    <GameList games={favouriteGames}/>\n                    </Page> \n                    </>}\n                    </Container>\n            </Page>\n        </>\n        \n    )\n}\n\nconst Page = styled.div`\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    position: relative;\n    min-height: calc(100vh - 61px);\n    width: 100%;\n`\n\nconst LogOut = styled.button`\n    color: white;\n    background-color: orange;\n    font-size: 20px;\n    font-family: 'Nunito', sans-serif;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n`\n\nexport default Profile"],"names":["GameCard","_ref","data","className","name","released","genres","background_image","slug","rating","_jsx","Link","to","concat","children","_jsxs","loading","src","alt","width","height","placeholderImage","slice","map","genre","id","BiRightArrow","color","title","GameList","games","Container","List","game","Item","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Loader","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","_templateObject3","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","userId","useContext","authContext","location","useLocation","_useState","useState","_useState2","_slicedToArray","showChangeUsernameFrom","setShowChangeUsernameForm","Info","AvatarWrapper","pathname","_Fragment","UploadInput","accept","type","onChange","e","preventDefault","target","files","size","console","log","uploadBytes","sRef","firebaseApps","then","getDownloadURL","url","set","ref","UploadButton","htmlFor","RxUpload","fill","stroke","Spinner","Oval","secondaryColor","Avatar","style","objectFit","display","gap","alignItems","justifyContent","flexWrap","ChangeUsernameButton","onClick","BsPenFill","ChangeUsernameForm","action","onSubmit","elements","value","minLength","required","autoComplete","MdDone","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Page","LogOut","_useContext","isLoggedIn","setUserId","favouriteGames","setFavouriteGames","_useState3","_useState4","_useState5","_useState6","photoPath","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","navigate","useNavigate","useEffect","Promise","all","getUserInfo","getFavouriteGames","res","_res","snapshot","exists","_snapshot$val","val","photoUrl","avatarPlaceholder","_toConsumableArray","Object","values","catch","error","userSignOut"],"sourceRoot":""}