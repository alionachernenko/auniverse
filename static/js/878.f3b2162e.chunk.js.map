{"version":3,"file":"static/js/878.f3b2162e.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/Loader/Loader.jsx","components/ProfileCard/ProfileCard.jsx","pages/Profile/Profile.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\"\nimport { BiRightArrow } from 'react-icons/bi'\nimport './GameCard.scss'\nimport placeholderImage from 'assets/images/placeholder.png'\n// import styled from \"styled-components\"\n\nexport const GameCard = ({ data, width, className }) => {\n    const location = useLocation()\n    const {name, released, genres, background_image, slug, rating } = data\n    console.log(rating)\n    console.log(data)\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <div className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster'\n                alt=\"\" width='500' height='auto' /> : <img src={placeholderImage} alt='' className='poster'/>}\n                <div className='description'>\n                <p className='title'>\n                    {name}\n                </p>\n                {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                {genres && <ul className='genres'>\n                    {genres.map((genre => {\n                        return  <li className=\"genres_item\" key={genre.id}>{genre.name}</li>\n                    }))}\n                </ul>}\n            </div>\n            <div className=\"desc\">\n                {name && <h1>{name}</h1>}\n                {genres && <ul className='genres'>\n                    {genres.map((genre => {\n                        return  <li className=\"genres_item\" key={genre.id}>{genre.name}</li>\n                    }))}\n                </ul>}\n            </div>\n            <div className='readmore-btn'>\n                <p>Read more</p>\n                <BiRightArrow color=\"green\" title=\"Read more button right arrow\"/>\n            </div>\n            \n            {location.pathname === '/catalog' && <p className='rating'>{rating}</p>}\n        </div>\n        </Link>\n    )\n}","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    // margin-bottom: 20px;\n    // align-items: center;\n    // justify-content: center;\n    // display: grid;\n    // grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    // grid-gap: 1em;\n    // margin-top: 0;\n    // margin-bottom: 0;\n    // padding: 0;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n}\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n\n    \n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import styled from \"styled-components\"\nimport { RxUpload } from \"react-icons/rx\"\nimport { Oval } from \"react-loader-spinner\"\nimport authContext from '../../context/context'\nimport { useContext, useState } from \"react\"\nimport { uploadBytes, getDownloadURL, ref as sRef } from 'firebase/storage'\nimport {set, ref} from 'firebase/database'\nimport firebaseApps from 'config/firebase'\nimport { useLocation } from \"react-router-dom\"\nimport {BsPenFill} from 'react-icons/bs'\nimport {MdDone} from 'react-icons/md'\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading, setUsername}) => {\n\n    const {userId} = useContext(authContext)\n    const location = useLocation()\n    const [showChangeUsernameFrom, setShowChangeUsernameForm] = useState(false)\n    \n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname === '/profile' &&\n                    <><UploadInput id='upload_file'accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={\n                (e) => {\n                e.preventDefault()\n                \n                if(e.target.files[0]){\n                    if(e.target.files[0].size > 2097152){\n                        console.log('noooooJJFJFJJFJFJ')\n                        setIsAvatarLoading(false)\n                        return\n                    }\n                    setIsAvatarLoading(true)\n                    uploadBytes(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`), e.target.files[0]).then(() => {\n                    return getDownloadURL(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`))}).then((url) =>{\n                        console.log(url)\n                        \n                        set(ref(firebaseApps.database, 'users/' + userId + '/photoUrl'), url)\n                        setPhotoPath(url)\n    \n                        setIsAvatarLoading(false)\n                    })\n                }\n                }\n            }/>\n                    <UploadButton htmlFor=\"upload_file\">\n                        <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </UploadButton></>\n                        }\n                        {isAvatarLoading ? <Spinner><Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'}/></Spinner> : \n                        <Avatar style={{objectFit: 'cover',width: 200, height: '100%'}} src={`${avatar}`} alt=\"\"/>}\n                    </AvatarWrapper>\n                    <div style={{display: 'flex', gap: 5, alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap'}}>\n                {!showChangeUsernameFrom && <h1>{username}</h1>}\n                {location.pathname === '/profile' && !showChangeUsernameFrom && <ChangeUsernameButton onClick={() => setShowChangeUsernameForm(true)}><BsPenFill/></ChangeUsernameButton>}</div>\n                {showChangeUsernameFrom && <ChangeUsernameForm action=\"\" onSubmit={\n                    (e) => {\n                        e.preventDefault()\n                        set(ref(firebaseApps.database, 'users/' + userId + '/username'), e.target.elements.username.value)\n                        setUsername(e.target.elements.username.value)\n                        setShowChangeUsernameForm(false)\n                    }\n                }>\n                    <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                    <button><MdDone size={15}/></button>\n                </ChangeUsernameForm>}\n            </Info>\n    )\n}\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px\n`\nconst Spinner = styled.div`\n    text-align: center;\n    width: 90%;\n    height: 90%\n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 200px;\n    width: 200px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: transparent;\n\n`\n\nconst Avatar = styled.img`\ntransition: 250ms filter ease;\n\n    ${AvatarWrapper}:hover &{\n        filter: blur(3px)\n    }\n`\n\nconst UploadButton = styled.label`\n    border: none;\n    position: absolute;\n    opacity: 0;\n    width: 30px;\n    height: 30px;\n    background-color: white;\n    padding: 5px;\n    border-radius: 100px;\n    cursor: pointer;\n    z-index: 1111;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n`\n\nconst ChangeUsernameButton = styled.button`\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`","import { useContext, useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport authContext from '../../context/context'\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport { getFavouriteGames, userSignOut, getUserInfo } from \"../../utils/firebase\"\nimport { Loader } from 'components/Loader/Loader'\nimport { GameList } from 'components/GameList/GameList'\nimport { ProfileCard } from 'components/ProfileCard/ProfileCard'\n\nimport styled from 'styled-components'\n\nconst Profile = () => {\n    const {userId, isLoggedIn, setUserId} = useContext(authContext)\n\n    const [favouriteGames, setFavouriteGames] = useState([])\n    const [username, setUsername] = useState('')\n    const [photoPath, setPhotoPath] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [isAvatarLoading, setIsAvatarLoading] = useState(false)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/login/login-page')\n            return\n        }\n\n        Promise.all([getUserInfo(userId), getFavouriteGames(userId)])\n            .then(res => {\n                const [snapshot, games] = res\n            if (snapshot.exists()) {\n                const {username, photoUrl} = snapshot.val()\n                setUsername(username)\n                if(photoUrl) {\n                    setPhotoPath(photoUrl)\n                }\n                else {\n                    setPhotoPath(avatarPlaceholder)\n                }\n            } else {\n                setUsername('User')\n            }\n\n                if(games.val()) setFavouriteGames([...Object.values(games.val())])\n                setIsLoading(false)\n               \n            }).catch((error) => {\n                console.error(error);\n                setIsLoading(false)\n    })\n    \n    }, [isLoggedIn, navigate, userId])\n\n    const logOut = () => {\n        userSignOut()\n            .then(() => {\n                navigate('/login/login-page')\n                setUserId('')\n            }\n        );\n    }\n    \n    return (\n        <>\n            <Page>\n               {isLoading ? <Loader className={'loader-profile'} color={'darkblue'} /> : <><Page className='top'>\n                    <ProfileCard setPhotoPath={setPhotoPath} avatar={photoPath} username={username} isAvatarLoading={isAvatarLoading} setIsAvatarLoading={setIsAvatarLoading} setUsername={setUsername}/>\n                    <LogOut type=\"button\" onClick={logOut}>Log out</LogOut>\n                    <h2 >Your favourite games:</h2>\n                    <GameList games={favouriteGames}/>\n                    </Page> \n                </>}\n            </Page>\n        </>\n        \n    )\n}\n\nconst Page = styled.div`\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    position: relative;\n    min-height: calc(100vh - 61px);\n    width: 100%;\n`\n\nconst LogOut = styled.button`\n    color: white;\n    background-color: orange;\n    font-size: 20px;\n    font-family: 'Nunito', sans-serif;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n`\n\nexport default Profile"],"names":["GameCard","_ref","data","className","width","location","useLocation","name","released","genres","background_image","slug","rating","console","log","_jsx","Link","to","concat","children","_jsxs","loading","src","alt","height","placeholderImage","slice","map","genre","id","BiRightArrow","color","title","pathname","GameList","games","Container","List","game","Item","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Loader","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","_templateObject3","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","userId","useContext","authContext","_useState","useState","_useState2","_slicedToArray","showChangeUsernameFrom","setShowChangeUsernameForm","Info","AvatarWrapper","_Fragment","UploadInput","accept","type","onChange","e","preventDefault","target","files","size","uploadBytes","sRef","firebaseApps","then","getDownloadURL","url","set","ref","UploadButton","htmlFor","RxUpload","fill","stroke","Spinner","Oval","secondaryColor","Avatar","style","objectFit","display","gap","alignItems","justifyContent","flexWrap","ChangeUsernameButton","onClick","BsPenFill","ChangeUsernameForm","action","onSubmit","elements","value","minLength","required","autoComplete","MdDone","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Page","LogOut","_useContext","isLoggedIn","setUserId","favouriteGames","setFavouriteGames","_useState3","_useState4","_useState5","_useState6","photoPath","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","navigate","useNavigate","useEffect","Promise","all","getUserInfo","getFavouriteGames","res","_res","snapshot","exists","_snapshot$val","val","photoUrl","avatarPlaceholder","_toConsumableArray","Object","values","catch","error","userSignOut"],"sourceRoot":""}