{"version":3,"file":"static/js/218.8cd2d943.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/ProfileCard/ProfileCard.jsx","pages/User/User.jsx"],"sourcesContent":["import './GameCard.scss'\nimport { BiRightArrow } from 'react-icons/bi'\n\nimport { Link } from \"react-router-dom\"\nimport placeholderImage from 'assets/images/placeholder.png'\n\nexport const GameCard = ({ data, className }) => {\n\n    const {name, released, genres, background_image, slug, rating } = data\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <div className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster'\n                alt='No poster here' width='500' height='auto' /> : <img src={placeholderImage} alt={`${name} poster`} className='poster'/>}\n                <div className='description'>\n                    <p className='title'>\n                        {name}\n                    </p>\n                    {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                    {genres && <ul className='genres'>\n                        {genres.map((genre => <li className=\"genres_item\" key={genre.id}>{genre.name}</li>))}\n                    </ul>}\n                </div>\n                <div className='readmore-btn'>\n                    <p>Read more</p>\n                    <BiRightArrow color=\"green\" title=\"Read more button right arrow\"/>\n                </div>\n             <p className='rating'>{rating}</p>\n        </div>\n    </Link>\n    )\n}","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 60px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n`","import styled from \"styled-components\"\nimport { RxUpload } from \"react-icons/rx\"\nimport { Oval } from \"react-loader-spinner\"\nimport authContext from '../../context/context'\nimport { useContext, useState } from \"react\"\nimport { uploadBytes, getDownloadURL, ref as sRef } from 'firebase/storage'\nimport {set, ref} from 'firebase/database'\nimport firebaseApps from 'config/firebase'\nimport { useLocation } from \"react-router-dom\"\nimport {BsPenFill} from 'react-icons/bs'\nimport {MdDone} from 'react-icons/md'\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading, setUsername}) => {\n\n    const {userId} = useContext(authContext)\n    const location = useLocation()\n    const [showChangeUsernameFrom, setShowChangeUsernameForm] = useState(false)\n    \n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname === '/profile' &&\n                    <><UploadInput id='upload_file'accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={\n                (e) => {\n                e.preventDefault()\n                \n                if(e.target.files[0]){\n                    if(e.target.files[0].size > 2097152){\n                        console.log('noooooJJFJFJJFJFJ')\n                        setIsAvatarLoading(false)\n                        return\n                    }\n                    setIsAvatarLoading(true)\n                    uploadBytes(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`), e.target.files[0]).then(() => {\n                    return getDownloadURL(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`))}).then((url) =>{\n                        console.log(url)\n                        \n                        set(ref(firebaseApps.database, 'users/' + userId + '/photoUrl'), url)\n                        setPhotoPath(url)\n    \n                        setIsAvatarLoading(false)\n                    })\n                }\n                }\n            }/>\n                    <UploadButton htmlFor=\"upload_file\">\n                        <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </UploadButton></>\n                        }\n                        {isAvatarLoading ? <Spinner><Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'}/></Spinner> : \n                        <Avatar style={{objectFit: 'cover',width: 200, height: '100%'}} src={`${avatar}`} alt=\"\"/>}\n                    </AvatarWrapper>\n                    <div style={{display: 'flex', gap: 5, alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap'}}>\n                {!showChangeUsernameFrom && <h1>{username}</h1>}\n                {location.pathname === '/profile' && !showChangeUsernameFrom && <ChangeUsernameButton onClick={() => setShowChangeUsernameForm(true)}><BsPenFill/></ChangeUsernameButton>}</div>\n                {showChangeUsernameFrom && <ChangeUsernameForm action=\"\" onSubmit={\n                    (e) => {\n                        e.preventDefault()\n                        set(ref(firebaseApps.database, 'users/' + userId + '/username'), e.target.elements.username.value)\n                        setUsername(e.target.elements.username.value)\n                        setShowChangeUsernameForm(false)\n                    }\n                }>\n                    <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                    <button><MdDone size={15}/></button>\n                </ChangeUsernameForm>}\n            </Info>\n    )\n}\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px\n`\nconst Spinner = styled.div`\n    text-align: center;\n    width: 90%;\n    height: 90%\n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 200px;\n    width: 200px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: transparent;\n\n`\n\nconst Avatar = styled.img`\ntransition: 250ms filter ease;\n\n    ${AvatarWrapper}:hover &{\n        filter: blur(3px)\n    }\n`\n\nconst UploadButton = styled.label`\n    border: none;\n    position: absolute;\n    opacity: 0;\n    width: 30px;\n    height: 30px;\n    background-color: white;\n    padding: 5px;\n    border-radius: 100px;\n    cursor: pointer;\n    z-index: 1111;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n`\n\nconst ChangeUsernameButton = styled.button`\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`","import { useContext, useEffect, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { getUserInfo } from \"utils/firebase\"\nimport { GameList } from \"components/GameList/GameList\"\nimport authContext from '../../context/context'\nimport styled from \"styled-components\"\nimport { ProfileCard } from \"components/ProfileCard/ProfileCard\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport { Container } from \"components/Container/Container\"\n\nconst User = () => {\n    const {id} = useParams()\n    const [name, setName] = useState('')\n    const [photo, setPhoto] = useState('')\n    const [favouriteGames, setFavs] = useState([])\n    const {userId} = useContext(authContext)\n    const navigate = useNavigate()\n\n    if(userId === id) navigate('/profile')\n\n    useEffect(() => {\n        getUserInfo(id).then((res) => {\n            console.log(res.val())\n            const {username, favs, photoUrl} = res.val() \n            setName(username)\n            if(favs) setFavs(Object.values(favs))\n            if(photoUrl){ setPhoto(photoUrl)}\n            else(setPhoto(avatarPlaceholder))\n        })\n    }, [id])\n   \n\n    return(\n        <Page>\n            <Container>\n                <ProfileCard avatar={photo} username={name} />\n                <h2>{name}'s bookmarks</h2>\n                {favouriteGames && <GameList games={favouriteGames}/>}\n            </Container>\n        </Page>\n    )\n}\n\nexport default User \n\n\nconst Page = styled.div`\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    position: relative;\n    min-height: calc(100vh - 61px);\n    width: 100%;\n`\n"],"names":["GameCard","_ref","data","className","name","released","genres","background_image","slug","rating","_jsx","Link","to","concat","children","_jsxs","loading","src","alt","width","height","placeholderImage","slice","map","genre","id","BiRightArrow","color","title","GameList","games","Container","List","game","Item","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","userId","useContext","authContext","location","useLocation","_useState","useState","_useState2","_slicedToArray","showChangeUsernameFrom","setShowChangeUsernameForm","Info","AvatarWrapper","pathname","_Fragment","UploadInput","accept","type","onChange","e","preventDefault","target","files","size","console","log","uploadBytes","sRef","firebaseApps","then","getDownloadURL","url","set","ref","UploadButton","htmlFor","RxUpload","fill","stroke","Spinner","Oval","secondaryColor","Avatar","style","objectFit","display","gap","alignItems","justifyContent","flexWrap","ChangeUsernameButton","onClick","BsPenFill","ChangeUsernameForm","action","onSubmit","elements","value","minLength","required","autoComplete","MdDone","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","useParams","setName","_useState3","_useState4","photo","setPhoto","_useState5","_useState6","favouriteGames","setFavs","navigate","useNavigate","useEffect","getUserInfo","res","val","_res$val","favs","photoUrl","Object","values","avatarPlaceholder","Page"],"sourceRoot":""}