{"version":3,"file":"static/js/459.1af37b30.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/Loader/Loader.jsx","components/ProfileCard/ProfileCard.jsx","pages/Profile/Profile.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\"\nimport { BiRightArrow } from 'react-icons/bi'\nimport './GameCard.scss'\nimport placeholderImage from 'assets/images/placeholder.png'\n// import styled from \"styled-components\"\n\nexport const GameCard = ({ data, width, className }) => {\n    const location = useLocation()\n    const {name, released, genres, background_image, slug, rating } = data\n    console.log(rating)\n    console.log(data)\n\n    return (\n        <Link to={`/auniverse/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <div className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster'\n                alt=\"\" width={width}  /> : <img src={placeholderImage} alt='' className='poster'/>}\n                <div className='description'>\n                <p className='title'>\n                    {name}\n                </p>\n                {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                {genres && <ul className='genres'>\n                    {data.genres.map((genre => {\n                        return  <li className=\"genres_item\" key={genre.id}>{genre.name}</li>\n                    }))}\n                </ul>}\n            </div>\n            <div className=\"desc\">\n                {name && <h1>{name}</h1>}\n                {released && <p>{released.slice(0, 4)}</p>}\n                {genres && <ul className='genres'>\n                    {data.genres.map((genre => {\n                        return  <li className=\"genres_item\" key={genre.id}>{genre.name}</li>\n                    }))}\n                </ul>}\n            </div>\n            <div className='readmore-btn'>\n                <p>Read more</p>\n                <BiRightArrow color=\"green\" title=\"Read more button right arrow\"/>\n            </div>\n            \n            {location.pathname === '/catalog' && <p className='rating'>{rating}</p>}\n        </div>\n        </Link>\n    )\n}","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    // margin-bottom: 20px;\n    // align-items: center;\n    // justify-content: center;\n    // display: grid;\n    // grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    // grid-gap: 1em;\n    // margin-top: 0;\n    // margin-bottom: 0;\n    // padding: 0;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n}\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 60px)/3);\n    }\n\n    @media screen and (min-width: 1920px){\n    width: calc((100% - 90px)/4);\n}\n    \n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import styled from \"styled-components\"\nimport { GrFormUpload } from \"react-icons/gr\"\nimport { Oval } from \"react-loader-spinner\"\nimport authContext from '../../context/context'\nimport { useContext } from \"react\"\nimport { uploadBytes, getDownloadURL, ref as sRef } from 'firebase/storage'\nimport {set, ref} from 'firebase/database'\nimport firebaseApps from 'config/firebase'\nimport { useLocation } from \"react-router-dom\"\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading}) => {\n    const {userId} = useContext(authContext)\n    const location = useLocation()\n\n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname === '/auniverse/profile' && <UploadBlock>\n                    <UploadInput id='upload_file'accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={\n                (e) => {\n                e.preventDefault()\n                console.log('changed')\n                setIsAvatarLoading(true)\n\n                uploadBytes(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`), e.target.files[0]).then(() => {\n                return getDownloadURL(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`))}).then((url) =>{\n                    console.log(url)\n                    \n                    set(ref(firebaseApps.database, 'users/' + userId + '/photoUrl'), url)\n                    setPhotoPath(url)\n\n                    setIsAvatarLoading(false)\n                })}\n            }/>\n                    <UploadButton htmlFor=\"upload_file\">\n                        <GrFormUpload size={40} color='orange'/>\n                    </UploadButton>\n                        </UploadBlock>}\n                        {isAvatarLoading ? <Spinner><Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'}/></Spinner> : \n                        <img style={{objectFit: 'cover',width: 200, height: '100%'}} src={`${avatar}`} alt=\"\"/>}\n                    </AvatarWrapper>\n                <h1>{username}</h1>\n            </Info>\n    )\n}\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px\n`\nconst Spinner = styled.div`\n    text-align: center;\n    width: 90%;\n    height: 90%\n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 200px;\n    width: 200px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: #080D2B\n`\n\n\nconst UploadBlock = styled.div`\n    position: absolute;\n    bottom: 0;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(8, 13, 43, .8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\nconst UploadButton = styled.label`\n    border: none;\n    background-color: transparent;\n    width: auto;\n    height: auto;\n    cursor: pointer\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n`","import './Profile.scss'\nimport { useContext, useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { getUserInfo } from \"../../utils/firebase\"\nimport { getFavouriteGames, userSignOut } from \"../../utils/firebase\"\nimport { Loader } from 'components/Loader/Loader'\nimport authContext from '../../context/context'\nimport { GameList } from 'components/GameList/GameList'\n// import avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport styled from 'styled-components'\nimport { ProfileCard } from 'components/ProfileCard/ProfileCard'\n\n\nconst Profile = () => {\n    const {userId, isLoggedIn, setUserId} = useContext(authContext)\n\n    const [favouriteGames, setFavouriteGames] = useState([])\n    const [username, setUsername] = useState('')\n    const [photoPath, setPhotoPath] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [isAvatarLoading, setIsAvatarLoading] = useState(false)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/auniverse/login/login-page')\n            return\n        }\n\n        \n        Promise.all([getUserInfo(userId), getFavouriteGames(userId)])\n            .then(res => {\n                const [snapshot, games] = res\n            if (snapshot.exists()) {\n                setUsername(snapshot.val().username)\n                if(snapshot.val().photoUrl) setPhotoPath(snapshot.val().photoUrl)\n            } else {\n                setUsername('User')\n            }\n\n                if(games.val()) setFavouriteGames([...Object.values(games.val())])\n                console.log(games.val())\n                setIsLoading(false)\n               \n            }).catch((error) => {\n                console.error(error);\n                setIsLoading(false)\n    })\n    \n    }, [isLoggedIn, navigate, userId])\n\n    const logOut = () => {\n        userSignOut()\n            .then(() => {\n                navigate('/auniverse/login/login-page')\n                setUserId('')\n            }\n        );\n    }\n    \n    return (\n        <>\n            <Page>\n               {isLoading ? <Loader className={'loader-profile'} color={'darkblue'} /> : <><Page className='top'>\n                    <ProfileCard setPhotoPath={setPhotoPath} avatar={photoPath} username={username} isAvatarLoading={isAvatarLoading} setIsAvatarLoading={setIsAvatarLoading}/>\n                    \n                    <LogOut type=\"button\" onClick={logOut}>Log out</LogOut>\n                    <h2 >Your favourite games:</h2>\n                    <GameList games={favouriteGames}/>\n                    </Page> \n                </>}\n            </Page>\n        </>\n        \n    )\n}\n\nconst Page = styled.div`\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    position: relative;\n    min-height: calc(100vh - 61px);\n    width: 100%;\n`\n\nconst LogOut = styled.button`\n    color: white;\n    background-color: orange;\n    font-size: 20px;\n    font-family: 'Nunito', sans-serif;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n`\n\nexport default Profile"],"names":["GameCard","_ref","data","width","className","location","useLocation","name","released","genres","background_image","slug","rating","console","log","_jsx","Link","to","concat","children","_jsxs","loading","src","alt","placeholderImage","slice","map","genre","id","BiRightArrow","color","title","pathname","GameList","games","Container","List","game","Item","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Loader","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","_templateObject3","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","userId","useContext","authContext","Info","AvatarWrapper","UploadBlock","UploadInput","accept","type","onChange","e","preventDefault","uploadBytes","sRef","firebaseApps","target","files","then","getDownloadURL","url","set","ref","UploadButton","htmlFor","GrFormUpload","size","Spinner","Oval","secondaryColor","height","style","objectFit","_templateObject4","_templateObject5","_templateObject6","Page","LogOut","_useContext","isLoggedIn","setUserId","_useState","useState","_useState2","_slicedToArray","favouriteGames","setFavouriteGames","_useState3","_useState4","setUsername","_useState5","_useState6","photoPath","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","navigate","useNavigate","useEffect","Promise","all","getUserInfo","getFavouriteGames","res","_res","snapshot","exists","val","photoUrl","_toConsumableArray","Object","values","catch","error","_Fragment","onClick","userSignOut"],"sourceRoot":""}