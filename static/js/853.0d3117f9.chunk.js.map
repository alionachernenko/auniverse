{"version":3,"file":"static/js/853.0d3117f9.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/ProfileCard/ProfileCard.jsx","AcceptInvitationForm/AcceptInvitationForm.jsx","pages/UserProfile/UserProfile.jsx"],"sourcesContent":["import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n    color: white;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { useContext, useState } from \"react\"\nimport { useLocation, useParams } from \"react-router-dom\"\nimport { authContext } from '../../context/context'\nimport { addAvatar, addUserToFriensInvitationsList, changeUsername, removeFriend} from \"utils/firebase\"\n\nimport { Oval } from \"react-loader-spinner\"\n\nimport { RxUpload } from \"react-icons/rx\"\nimport { BsPencilSquare } from 'react-icons/bs'\nimport {FiUserPlus, FiUserX} from 'react-icons/fi'\nimport { MdDone, MdClose } from 'react-icons/md'\n\nimport styled from \"styled-components\"\n\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading, setUsername, isFriendInvited, isFriend, setIsFriendInvited, setIsFriend, isPending}) => {\n    const { userId } = useContext(authContext)\n    const { id } = useParams()\n    const location = useLocation()\n    \n\n    const [showChangeUsernameForm, setShowChangeUsernameForm] = useState(false)\n\n\n\n    const deleteFriend = () => {\n        removeFriend(id, userId)\n        setIsFriend(false)\n    }\n\n    const sendInvitation = () => {\n        addUserToFriensInvitationsList(id, userId)\n        setIsFriendInvited(true)\n    }\n    \n    const onUsernameFormSubmit = (e) => {\n        e.preventDefault()\n\n        const username = e.target.elements.username.value\n\n        changeUsername(userId, username)\n        setUsername(username)\n        setShowChangeUsernameForm(false)\n    }\n\n    const uploadAvatar = (e) => {\n\n        const file = e.target.files[0]\n        e.preventDefault()\n        if (file) {\n            setIsAvatarLoading(true)\n            addAvatar(file, userId, setPhotoPath, setIsAvatarLoading)\n        }\n    }\n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname.includes('profile') ?\n                    <>\n                        <UploadInput id='upload_file' accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={(e) => uploadAvatar(e)} />\n                        <UploadButton htmlFor=\"upload_file\">\n                            <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                        </UploadButton>\n                    </>\n                     : !isPending && !isFriendInvited && !isFriend ?\n                        <ChangeFriendStatusButton type='button' onClick={sendInvitation}>\n                            <FiUserPlus size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                        </ChangeFriendStatusButton>\n                        : !isPending && isFriendInvited ?\n                            <FriendStatus>You sent an invitation</FriendStatus>\n                        :  !isPending && <ChangeFriendStatusButton onClick={deleteFriend}>\n                                <FiUserX size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                            </ChangeFriendStatusButton>}\n                \n                {isAvatarLoading ?\n                    <Spinner>\n                        <Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'} />\n                    </Spinner> : \n                    <Avatar src={`${avatar}`} alt={`${username}'s avatar`} />}\n            </AvatarWrapper>\n                    <UsernameWrapper>\n                        {!showChangeUsernameForm && <Username>\n                            {username}\n                        </Username>}\n                {location.pathname.includes('profile') && !showChangeUsernameForm && <ChangeUsernameButton onClick={() => {\n                    console.log('click')\n                    setShowChangeUsernameForm(true)\n                }}>\n                            <BsPencilSquare color=\"white\" size={20}/>\n                        </ChangeUsernameButton>}\n            </UsernameWrapper>\n            \n                    {showChangeUsernameForm && <ChangeUsernameFormWrapper><ChangeUsernameForm onSubmit={(e) => onUsernameFormSubmit(e)}>\n                        <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                        <button type=\"submit\"><MdDone size={15}/></button>\n                    </ChangeUsernameForm>\n                <CloseChangeUsernameFormButton type=\"button\" onClick={() => setShowChangeUsernameForm(false)}><MdClose size={15} /></CloseChangeUsernameFormButton>\n            </ChangeUsernameFormWrapper>\n            }\n        </Info>\n    )\n}\n\nconst ChangeUsernameFormWrapper = styled.div`\n    display: flex;\n    gap: 5px\n`\n\nconst CloseChangeUsernameFormButton = styled.button`\n    height: 30px;\n    width: 30px;\n    border-radius: 15px;\n    border: 1px solid red;\n        \nbackground-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n`\n\nconst Info = styled.div`\n    margin-bottom: 20px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    gap: 10px;\n\n    @media screen and (min-width: 1200px) {\n        margin-left: auto;\n        margin-right: auto\n    }\n    \n`\n\nconst Username = styled.h1`\n    text-align: center\n`\nconst Spinner = styled.div`\n    width: 90%;\n    height: 90%;\n    text-align: center;\n    \n`\nconst AvatarWrapper = styled.div`\n    height: 200px;\n    width: 200px;\n    border-radius: 100px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n\n    overflow: hidden;\n    \n    background-color: transparent;\n\n    &:hover button{\n        opacity: 1\n    }\n\n`\nconst UsernameWrapper = styled.div`\n    display: flex; \n    gap: 5px;\n    align-items: baseline; \n    justify-content: center; \n    flex-wrap: wrap;\n`\nconst FriendStatus = styled.p`\n    position: absolute;\n    z-index: 1111;\n    opacity: 0;\n    transition: 250ms opacity ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst Avatar = styled.img`\nwidth: 200px;\nheight: 100%;\nobject-fit: cover;\n\n\n`\n\nconst UploadButton = styled.label`\n    width: 30px;\n    height: 30px;\n    padding: 5px;\n    border: none;\n    border-radius: 100px;\n\n    position: absolute;\n    z-index: 1111;\n    opacity: 0;\n    \n    background-color: white;\n    cursor: pointer;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    position: absolute;\n    z-index: -1;\n    opacity: 0;\n    overflow: hidden;\n`\n\nconst ChangeUsernameButton = styled.button`\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: transparent;\n    height: 100%;\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`\n\nconst ChangeFriendStatusButton = styled.button`\n    width: 40px;\n    height: 40px;\n    padding: 5px;\n    border: none;\n\n    position: absolute;\n    z-index: 1111;\n    opacity: 0;\n    \n    background-color: white;\n   \n    border-radius: 100px;\n    cursor: pointer;\n    \n    transition: 250ms all ease;\n\n   \n`","import { authContext } from \"context/context\"\nimport { useContext } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { acceptInvitationAndAddUser, removeFriendFromPending } from \"utils/firebase\"\n\nexport const AcceptInvitationForm = ({setIsPending, setIsFriend, username}) => {\n    const { userId } = useContext(authContext)\n    const { id } = useParams()\n\n     const onAcceptButtonClick = () => {\n        acceptInvitationAndAddUser(id, userId).then(() => {\n            removeFriendFromPending(id, userId)\n            setIsPending(false)\n            setIsFriend(true)\n        } )\n    }\n\n    const onDeclineButtonClick = () => {\n        removeFriendFromPending(id, userId)\n        setIsPending(false)\n        setIsFriend(false)\n    }\n    \n    return (\n        <Form>\n            <Message>{`${username} wants to be your friend`}</Message>\n            <div>\n                <AcceptButton onClick={onAcceptButtonClick} type=\"button\">Accept</AcceptButton>\n                <DeclineButton onClick={onDeclineButtonClick} type=\"button\">Decline</DeclineButton>\n            </div>\n        </Form>\n    )\n}\n\nconst Form = styled.div`\n    font-family: 'Nunito', sans-serif;\n    position: absolute;\n    top: 0;\n    left: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: black;\n    background-color: white;\n    border-radius: 10px;\n    padding: 10px;\n    gap: 10px\n`\n\nconst Message = styled.p`\n    text-align: center;\n    font-family: inherit\n`\n\nconst AcceptButton = styled.button`\n    background-color: white;\n    border: 1px solid green;\n    font-family: inherit;\n    color: green;\n    padding: 5px 10px;\n    border-radius: 10px;\n    margin-right: 10px\n\n`\nconst DeclineButton = styled.button`\n    background-color: white;\n    border: 1px solid red;\n    font-family: inherit;\n    color: red;\n    padding: 5px 10px;\n    border-radius: 10px;\n`","import { useContext, useEffect, useState } from \"react\"\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\"\nimport { getFriendsInvitationsList, getFriendsList, getUserInfo } from \"utils/firebase\"\nimport { NavLink } from \"react-router-dom\"\nimport {authContext} from '../../context/context'\nimport styled from \"styled-components\"\nimport { ProfileCard } from \"components/ProfileCard/ProfileCard\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport { Loader } from \"components/Loader/Loader\"\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\"\nimport { AcceptInvitationForm } from \"AcceptInvitationForm/AcceptInvitationForm\"\n\nconst User = () => {\n    const { userId } = useContext(authContext)\n    const { id } = useParams()\n    \n    const [name, setName] = useState('')\n    const [photo, setPhoto] = useState('')\n    const [bookmarks, setBookmarks] = useState([])\n    const [isFriendInvited, setIsFriendInvited] = useState(false)\n    const [isFriend, setIsFriend] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const [isPending, setIsPending] = useState(false)\n\n\n        useEffect(() => {\n        getFriendsInvitationsList(userId).then((res) => {\n            if(res.val()) setIsPending(Object.keys(res.val()).some(friendId => friendId === id))\n        })\n    }, [id, userId])\n\n    const navigate = useNavigate()\n\n    if(userId === id) navigate('/profile/bookmarks')\n\n    useEffect(() => {\n        setIsLoading(true)\n        Promise.all([getUserInfo(id), getFriendsInvitationsList(id), getFriendsList(userId)]).then(res => {\n            const [userInfo, invitationsList, friendsList] = res\n            \n            const { username, favs, photoUrl } = userInfo.val()\n            \n            setName(username)\n\n            if (favs) {\n                setBookmarks(Object.values(favs))\n            }\n\n            if (photoUrl) {\n                setPhoto(photoUrl)\n            }\n            else {\n                setPhoto(avatarPlaceholder)\n            }\n            \n            if (invitationsList.val()) {\n                setIsFriendInvited(Object.values(invitationsList.val()).some(user => user === userId))\n            }\n\n            if (friendsList.val()) {\n                setIsFriend(Object.values(friendsList.val()).some(user => user === id))\n            }\n\n            setIsLoading(false)\n        }).catch(error => {\n            console.log(error)\n            setIsError(true)\n            setIsLoading(false)\n        })\n\n    }, [id, setIsFriendInvited, userId])\n\n    return(\n        <Page>\n            {isLoading ? <Loader className={'loader_profile'} color={'white'} /> : isError ? <ErrorComponent /> : \n                <>\n                    {isPending && <AcceptInvitationForm setIsPending={setIsPending} setIsFriend={setIsFriend} username={name} />}\n                <ProfileCard\n                    avatar={photo}\n                    username={name}\n                    isFriendInvited={isFriendInvited}\n                    isFriend={isFriend}\n                    setIsFriendInvited={setIsFriendInvited}\n                    setIsFriend={setIsFriend}\n                    isPending={isPending}\n                />\n                <OutletsSection>\n                    <Tabs>\n                        <Tab to='bookmarks'>Bookmarks</Tab>\n                    </Tabs>\n                    <Outlet context={[bookmarks]} />\n                </OutletsSection>\n            </>\n            }\n        </Page>\n    )\n}\n\nconst Page = styled.div`\n    min-height: calc(100vh - 61px);\n    width: 100%;\n    padding: 20px;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    position: relative;\n\n    color: white;\n    background-color: #00021A;\n\n    \n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n        align-items: flex-start;\n    }\n`\n\nconst OutletsSection = styled.div`\n    width: 100%;\n   \n    @media screen and (min-width: 768px) {\n        width: 50%;\n    }\n\n    @media screen and (min-width: 1200px) {\n        margin-left: auto;\n    }\n`\n\nconst Tabs = styled.div`\n    margin-bottom: 20px;\n    margin-left: auto;\n\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n\n    & :not(:last-child) {\n        margin-right: 100px;\n    }\n`\n\n\nconst Tab = styled(NavLink)`\n    color: #090E2F;\n    font-weight: 500;\n    padding: 10px 0;\n    background-color: transparent;\n    font-family: 'Nunito', sans-serif;\n    font-size: 20px;\n    cursor: pointer;\n    color: white;\n    border: none;\n    position: relative;\n    display: block;\n\n    &.active::after{\n        content: '';\n        display: block;\n        height: 3px;\n        width: 100%;\n        border-radius: 4px;\n\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        background-color: #FF6600;\n    }\n`\n\nexport default User "],"names":["ErrorComponent","_jsxs","Block","children","_jsx","Message","Image","src","mario","alt","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Loader","_ref","className","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","isFriendInvited","isFriend","setIsFriendInvited","setIsFriend","isPending","userId","useContext","authContext","id","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","showChangeUsernameForm","setShowChangeUsernameForm","Info","AvatarWrapper","pathname","includes","_Fragment","UploadInput","accept","type","name","onChange","e","file","target","files","preventDefault","addAvatar","uploadAvatar","UploadButton","htmlFor","RxUpload","size","fill","stroke","FriendStatus","ChangeFriendStatusButton","onClick","removeFriend","FiUserX","addUserToFriensInvitationsList","FiUserPlus","Spinner","Oval","secondaryColor","width","height","Avatar","concat","UsernameWrapper","Username","ChangeUsernameButton","console","log","BsPencilSquare","ChangeUsernameFormWrapper","ChangeUsernameForm","onSubmit","elements","value","changeUsername","onUsernameFormSubmit","minLength","required","autoComplete","MdDone","CloseChangeUsernameFormButton","MdClose","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","AcceptInvitationForm","setIsPending","Form","AcceptButton","acceptInvitationAndAddUser","then","removeFriendFromPending","DeclineButton","Page","OutletsSection","Tabs","Tab","NavLink","setName","_useState3","_useState4","photo","setPhoto","_useState5","_useState6","bookmarks","setBookmarks","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","isError","setIsError","_useState15","_useState16","useEffect","getFriendsInvitationsList","res","val","Object","keys","some","friendId","navigate","useNavigate","Promise","all","getUserInfo","getFriendsList","_res","userInfo","invitationsList","friendsList","_userInfo$val","favs","photoUrl","values","avatarPlaceholder","user","catch","error","to","Outlet","context"],"sourceRoot":""}