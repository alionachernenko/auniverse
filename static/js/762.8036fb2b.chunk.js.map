{"version":3,"file":"static/js/762.8036fb2b.chunk.js","mappings":"gPAMaA,EAAW,SAAHC,GAAoC,IAA9BC,EAAID,EAAJC,KAAaC,GAAFF,EAALG,MAAgBH,EAATE,WAC9BE,GAAWC,EAAAA,EAAAA,MACVC,EAA2DL,EAA3DK,KAAMC,EAAqDN,EAArDM,SAAUC,EAA2CP,EAA3CO,OAAQC,EAAmCR,EAAnCQ,iBAAkBC,EAAiBT,EAAjBS,KAAMC,EAAWV,EAAXU,OAIvD,OAHAC,QAAQC,IAAIF,GACZC,QAAQC,IAAIZ,IAGRa,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,YAAAC,OAAcP,GAAQ,gCAAAO,OAA+BX,GAAQJ,UAAU,eAAcgB,UAC7FC,EAAAA,EAAAA,MAAA,OAAKjB,UAAS,GAAAe,OAAKf,GAAYgB,SAAA,CAC1BT,GAAmBK,EAAAA,EAAAA,KAAA,OAAKM,QAAQ,OAAOC,IAAKZ,EAAkBP,UAAU,SACrEoB,IAAI,GAAGnB,MAAM,MAAMoB,OAAO,UAAYT,EAAAA,EAAAA,KAAA,OAAKO,IAAKG,EAAkBF,IAAI,GAAGpB,UAAU,YACnFiB,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,cAAagB,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,KAAGZ,UAAU,QAAOgB,SACfZ,IAEJC,IAAYO,EAAAA,EAAAA,KAAA,KAAGZ,UAAU,eAAcgB,SAAEX,EAASkB,MAAM,EAAG,KAC3DjB,IAAUM,EAAAA,EAAAA,KAAA,MAAIZ,UAAU,SAAQgB,SAC5BV,EAAOkB,KAAK,SAAAC,GACT,OAAQb,EAAAA,EAAAA,KAAA,MAAIZ,UAAU,cAAagB,SAAiBS,EAAMrB,MAAjBqB,EAAMC,GACnD,UAGRT,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,OAAMgB,SAAA,CAChBZ,IAAQQ,EAAAA,EAAAA,KAAA,MAAAI,SAAKZ,IACbE,IAAUM,EAAAA,EAAAA,KAAA,MAAIZ,UAAU,SAAQgB,SAC5BV,EAAOkB,KAAK,SAAAC,GACT,OAAQb,EAAAA,EAAAA,KAAA,MAAIZ,UAAU,cAAagB,SAAiBS,EAAMrB,MAAjBqB,EAAMC,GACnD,UAGRT,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,eAAcgB,SAAA,EACzBJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,eACHJ,EAAAA,EAAAA,KAACe,EAAAA,IAAY,CAACC,MAAM,QAAQC,MAAM,oCAGf,aAAtB3B,EAAS4B,WAA2BlB,EAAAA,EAAAA,KAAA,KAAGZ,UAAU,SAAQgB,SAAEP,QAIxE,C,+GC1CasB,EAAW,SAAHjC,GAAiB,IAAZkC,EAAKlC,EAALkC,MACtB,OACIpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CAAAjB,UACNJ,EAAAA,EAAAA,KAACsB,EAAI,CAAAlB,SAEGgB,EAAMR,KAAI,SAACW,GAAI,OACfvB,EAAAA,EAAAA,KAACwB,EAAI,CAAApB,UACDJ,EAAAA,EAAAA,KAACf,EAAAA,EAAQ,CAACE,KAAMoC,EAAMlC,MAAO,IAAKD,UAAW,sBADtCmC,EAAKT,GAET,OAK3B,EAEMQ,EAAOG,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mXAkBhBH,EAAOC,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,4N,sGCjCTE,EAAS,SAAH3C,GAA4B,IAAvBE,EAASF,EAATE,UAAW4B,EAAK9B,EAAL8B,MAC/B,OACIhB,EAAAA,EAAAA,KAAC8B,EAAO,CAACC,OAAQ3C,EAAUgB,UACvBJ,EAAAA,EAAAA,KAACgC,EAAAA,EAAa,CAACC,gBAAiBjB,EAAOkB,WAAY,CAAC,SAAU,WAAY,UAGtF,EAMMJ,EAAUL,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mBACpB,SAACQ,GACC,MACS,oBADFA,EAAMJ,QAEFK,EAAAA,EAAAA,IAAGR,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,2DAICS,EAAAA,EAAAA,IAAGC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8JAOtB,G,oKCvBSW,EAAS,SAAHpD,GAAoB,IAAfkB,EAAQlB,EAARkB,SACpB,OACIJ,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,CAACC,MAAO,CAACC,WAAY,EACZC,YAAa,IACzBC,aAAc,GACdC,MAAO,IACPC,cAAe,OACfC,MAAM,EACNC,SAAU,CACNC,MAAO,IACPC,mBAAmB,EACnBC,sBAAsB,GAE1BC,QAAS,CAACC,EAAAA,GAAUC,EAAAA,IAAYjD,SAE/BA,GAGb,E,iDCuCUkD,EAAU7B,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qqBAsC5B4B,EAAM9B,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,6GAQhB6B,EAAO/B,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gdAuBvB,EA1HiB,WACb,IAAO8B,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,WACPG,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BxC,EAAK0C,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkB1B,OAhBAG,EAAAA,EAAAA,YAAU,YACDC,EAAAA,EAAAA,IAAY,GAAGC,MAAK,SAAAzF,GAAa,IAC1B0F,EADmB1F,EAAJC,KACfyF,QACRZ,EAASY,GAETR,GAAa,EACjB,IAAGS,OAAM,SAAAC,GAELhF,QAAQC,IAAI+E,GACZN,GAAW,GAEXJ,GAAa,EACjB,GAEJ,GAAG,CAACX,KAKAzD,EAAAA,EAAAA,KAACsD,EAAO,CAAAlD,UACRC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACYJ,EAAAA,EAAAA,KAACwD,EAAI,CAAApD,SAAC,cACPC,EAAAA,EAAAA,MAACkD,EAAG,CAAAnD,SAAA,EACCJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,oCACH+D,GAAYnE,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACzC,UAAW,kBAAmB4B,MAAO,aAAmBuD,GAC7ElE,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAA3E,SAAA,EAAEJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,wEACLJ,EAAAA,EAAAA,KAACgF,EAAAA,EAAI,OACLvB,GAAc,MAAOzD,EAAAA,EAAAA,KAACsC,EAAM,CAAAlC,SACvBgB,EAAMR,KAAK,SAAAW,GAAI,OAEHvB,EAAAA,EAAAA,KAACiF,EAAAA,GAAW,CAACzC,MAAO,CACjBnD,MAAO,cACP6F,OAAQ,GAEV9E,UAAeJ,EAAAA,EAAAA,KAACf,EAAAA,EAAQ,CAACE,KAAMoC,EAAMlC,MAAO,IAAKD,UAAW,qBAAtDmC,EAAKT,GAAmF,OAGpGd,EAAAA,EAAAA,KAACmB,EAAAA,EAAQ,CAACC,MAAOA,WAOjD,C,oEC3DS4D,EAAO,WAChB,OACIhF,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,mBAAmBV,IAAI,uFAAuFf,KAAK,iBAAiBH,MAAM,MAAMoB,OAAO,MAAM0E,YAAY,IAAIC,UAAU,MAE7M,C","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/Loader/Loader.jsx","components/Slider/Slider.jsx","components/NewGamesSection/NewGames.jsx","components/game/Game.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\"\nimport { BiRightArrow } from 'react-icons/bi'\nimport './GameCard.scss'\nimport placeholderImage from 'assets/images/placeholder.png'\n// import styled from \"styled-components\"\n\nexport const GameCard = ({ data, width, className }) => {\n    const location = useLocation()\n    const {name, released, genres, background_image, slug, rating } = data\n    console.log(rating)\n    console.log(data)\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <div className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster'\n                alt=\"\" width='500' height='auto' /> : <img src={placeholderImage} alt='' className='poster'/>}\n                <div className='description'>\n                <p className='title'>\n                    {name}\n                </p>\n                {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                {genres && <ul className='genres'>\n                    {genres.map((genre => {\n                        return  <li className=\"genres_item\" key={genre.id}>{genre.name}</li>\n                    }))}\n                </ul>}\n            </div>\n            <div className=\"desc\">\n                {name && <h1>{name}</h1>}\n                {genres && <ul className='genres'>\n                    {genres.map((genre => {\n                        return  <li className=\"genres_item\" key={genre.id}>{genre.name}</li>\n                    }))}\n                </ul>}\n            </div>\n            <div className='readmore-btn'>\n                <p>Read more</p>\n                <BiRightArrow color=\"green\" title=\"Read more button right arrow\"/>\n            </div>\n            \n            {location.pathname === '/catalog' && <p className='rating'>{rating}</p>}\n        </div>\n        </Link>\n    )\n}","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    // margin-bottom: 20px;\n    // align-items: center;\n    // justify-content: center;\n    // display: grid;\n    // grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    // grid-gap: 1em;\n    // margin-top: 0;\n    // margin-bottom: 0;\n    // padding: 0;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n}\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n\n    \n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","/* eslint-disable array-callback-return */\nimport { Swiper } from \"swiper/react\"\nimport 'swiper/css';\nimport 'swiper/css/pagination'\nimport { Autoplay, Pagination } from \"swiper\";\n\n\nexport const Slider = ({children}) => {\n    return (\n        <Swiper style={{marginLeft: 0,\n                        paddingLeft: 60}}\n            spaceBetween={30}\n            speed={3000}\n            slidesPerView={'auto'}\n            loop={true}\n            autoplay={{\n                delay: 1000,\n                pauseOnMouseEnter: true,\n                disableOnInteraction: false\n            }}\n            modules={[Autoplay, Pagination]}\n        > \n            {children}\n        </Swiper>\n    )\n}\n\n","import styled from \"styled-components\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { SwiperSlide } from \"swiper/react\"\nimport { GameCard } from \"components/GameCard/GameCard\"\nimport { Slider } from \"../../components/Slider/Slider\"\nimport { useState, useEffect, useContext } from \"react\";\nimport { getNewGames } from \"services/games-api\";\nimport breakpointContext from '../../context/contextBr'\nimport { Game } from \"components/game/Game\";\nimport { GameList } from \"components/GameList/GameList\";\n\nconst NewGames = () => {\n    const {breakpoint} = useContext(breakpointContext)\n    const [games, setGames] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n\n    useEffect(() => {\n             getNewGames(1).then(({data}) => {\n            const { results } = data\n            setGames(results)\n\n            setIsLoading(false)\n        }).catch(error => {\n\n            console.log(error)\n            setIsError(true)\n\n            setIsLoading(false)\n        }\n        )\n    }, [breakpoint])\n\n    return (//отменить первый рендер\n\n\n        <Section>\n        <div>\n                    <Span>New 2023</Span>\n                   <Div>\n                        <h2>What will you choose this time?</h2>\n                        {isLoading ? <Loader className={'loader-homepage'} color={'darkblue'} /> : ( isError ? \n                        <><p>Something went wrong. You can play the game below not to get bored</p>\n                        <Game/></> : \n                        breakpoint >= 1200 ? <Slider>\n                            {games.map((game => \n                                     \n                                         <SwiperSlide style={{\n                                            width: 'fit-content',\n                                            margin: 0,\n                                            }\n                                         } key={game.id}><GameCard data={game} width={255} className={'gamecard_slider'}/></SwiperSlide>\n                                  \n                          ))}\n                        </Slider> : <GameList games={games}/>\n                        )}\n                    </Div>\n                </div>\n            </Section>\n    )\n   \n    }\n\n\n    const Section = styled.section`\n    gap: 30px;\n    padding-top: 20px;\n    overflow: hidden;\n    background-color: #ffffff;\n\n    @media screen and (min-width: 1200px) {\n        display: flex;\n        padding-top: 0\n    }\n\n    & h2{\n        margin-bottom: 60px;\n        font-size: 40px;\n        \n   \n        line-height: 34px;\n        margin-left: 60px;\n\n        @media screen and (max-width: 1199px){\n            display: none\n        }\n    }\n    \n    & span {\n        writing-mode: vertical-lr;\n        background-color: blue;\n        width: 90px;\n    }\n\n    & :first-child{\n        @media screen and (min-width: 1200px) {\n            display: flex\n        }\n    }\n`\n\n\nconst Div = styled.div`\npadding: 40px 0;\n\n    @media screen and (min-width: 1200px) {\n        padding: 100px 0;\n    }\n`\n\nconst Span = styled.div`\n    background-color: #00021A;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #ffffff;\n    font-weight: 900;\n    font-size: 50px;\n    line-height: 91px;\n    text-align: center;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n\n    @media screen and (min-width: 420px) {\n        font-size: 72px\n    }\n\n    @media screen and (min-width: 1200px) {\n        writing-mode: vertical-rl;\n\n    }\n`\n\nexport default NewGames","// import styled, { keyframes } from \"styled-components\"\n\nexport const Game = () => {\n    return(\n        <iframe title='2048 secret game' src=\"http://wanted5games.com/games/html5/2048-legend-new-en-s-iga-cloud/index.html?pub=10\" name=\"cloudgames-com\" width=\"709\" height=\"526\" frameborder=\"0\" scrolling=\"no\"></iframe>\n    )\n}\n"],"names":["GameCard","_ref","data","className","width","location","useLocation","name","released","genres","background_image","slug","rating","console","log","_jsx","Link","to","concat","children","_jsxs","loading","src","alt","height","placeholderImage","slice","map","genre","id","BiRightArrow","color","title","pathname","GameList","games","Container","List","game","Item","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Loader","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","_templateObject3","Slider","Swiper","style","marginLeft","paddingLeft","spaceBetween","speed","slidesPerView","loop","autoplay","delay","pauseOnMouseEnter","disableOnInteraction","modules","Autoplay","Pagination","Section","Div","Span","breakpoint","useContext","breakpointContext","_useState","useState","_useState2","_slicedToArray","setGames","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","useEffect","getNewGames","then","results","catch","error","_Fragment","Game","SwiperSlide","margin","frameborder","scrolling"],"sourceRoot":""}