{"version":3,"file":"static/js/64.cc917dcd.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/BookmarkButton/BookmarkButton.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","components/GameOverview/GameOverview.jsx","components/GameScreenshots/GameScreenshots.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n    color: white;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport { RiXboxLine } from 'react-icons/ri'\nimport styled from 'styled-components'\nimport { memo } from 'react'\n\nconst setStoreIcon = (storeName) => {\n    let icon\n    switch (storeName) {\n        case 'Steam':\n            icon = <FaSteam />\n            break\n        case 'PlayStation Store':\n            icon = <FaPlaystation />\n            break\n        case 'App Store':\n            icon = <FaAppStore />\n            break\n        case 'GOG':\n            icon = <SiGogdotcom />\n            break\n        case 'Xbox Store':\n            icon = <FaXbox />\n            break\n        case 'Xbox 360 Store':\n            icon = <RiXboxLine />\n            break\n        case 'Nintendo Store':\n            icon = <SiNintendo />\n            break\n        case 'Epic Games':\n            icon = <SiEpicgames />\n            break\n        case 'Google Play':\n            icon = <FaGooglePlay />\n            break\n        case 'itch.io':\n            icon = <FaItchIo />\n            break\n        default:\n            return null\n    }\n    return icon\n}\n\nexport const StoresList = memo(({ stores }) => {\n    console.log('stores')\n        return (\n            <List>\n                {stores.map(({ store, id }) => {\n                    const { name, domain } = store\n\n                    return (\n                        <li key={id}>\n                            <a href={`https://${domain}`}>\n                                {setStoreIcon(name)}\n                            </a>\n                        </li>\n                    )\n                })}\n            </List>\n        )\n    })\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n     gap: 10px;\n     flex-wrap: wrap;\n   \n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        gap: 20px;\n    }\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { memo, useContext } from \"react\"\nimport { authContext } from '../../context/context'\nimport { removeGameFromBookmarks, addGameToBookmarks } from \"utils/firebase/database\"\nimport { BsBookmark, BsFillBookmarkFill } from 'react-icons/bs'\nimport { useParams } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nexport const BookmarkButton = memo(({isBookmark, gameData, setIsBookmark}) => {\n    const { userId } = useContext(authContext)\n    const {gameSlug} = useParams()\n\n    const toggleIsFavourite = () => {\n        if (isBookmark) {\n            removeGameFromBookmarks(userId, gameSlug)\n        }\n        else {\n            addGameToBookmarks(userId, gameSlug, gameData)\n        }\n        \n        setIsBookmark(prevState => !prevState)\n    }\n\n\n        return (\n            <Button type=\"button\" onClick={toggleIsFavourite}>\n                Bookmark {isBookmark ? <BsFillBookmarkFill size='20px' /> : <BsBookmark size='20px' />}\n            </Button>\n        )\n})\n    \n\n\nconst Button = styled.button`\n    height: auto;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n\n    color: white;\n    background-color: rgba(84, 84, 84, 0.5);\n`","import { memo, useEffect, useState } from \"react\"\nimport { fetchUserInfo } from \"utils/firebase/database\"\nimport styled from \"styled-components\"\n\nexport const Comment = memo(({ userId, text }) => {\n\n    const [authorAvatar, setAuthorAvatar] = useState()\n    const [authorUsername, setAuthorUsername] = useState('')\n    \n    useEffect(() => {\n        fetchUserInfo(userId).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setAuthorUsername(username)\n            setAuthorAvatar(photoUrl)\n        }).catch(error => {\n            console.log(error)\n        }\n    )\n    }, [userId])\n\n    return (\n        <CommentWrapper>\n            <AuthorInfo>\n                <AvatarWrapper>\n                    {authorAvatar && <AuthorAvatar src={authorAvatar} alt={`${authorUsername}'s avatar`}></AuthorAvatar>}\n                </AvatarWrapper>\n                <AuthorName>{authorUsername}</AuthorName>\n            </AuthorInfo>\n            \n            <CommentText>{text}</CommentText>\n        </CommentWrapper>\n    )\n})\n\nconst CommentWrapper = styled.li`\n    width: 100%;\n    padding: 10px 20px;\n    box-sizing: border-box;\n    border: 2px solid #2F3149;\n    border-radius: 20px;\n    \n    @media screen and (min-width: 768px){\n        width: 542px;\n    }\n`\n\nconst AuthorName = styled.p`\n    color: white\n`\n\nconst CommentText = styled.p`\n    color: white\n`\n\nconst AuthorInfo = styled.div`\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n   \n`\n\nconst AvatarWrapper = styled.div`\n    height: 60px;\n    width: 60px;\n    overflow: hidden;\n    margin-right: 10px;\n    position: relative;\n    border-radius: 100px;    \n`\n\nconst AuthorAvatar = styled.img`\n    width: 60px;\n    height: 60px;\n    object-fit: cover;\n`","import { useContext} from \"react\"\nimport { authContext } from \"context/context\"\nimport { leaveComment } from \"utils/firebase/database\"\nimport { Comment } from \"components/Comment/Comment\"\nimport { useParams } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst getAndFormatAuthorId = (comment) => {\n    return Object.keys(comment)[0].split('-')[0]\n}\n\nconst getCommentText = (comment) => {\n    return Object.values(comment)[0]\n}\n\nexport const Comments = ({comments, setComments}) => {\n    const { userId, isLoggedIn } = useContext(authContext)\n    const { gameSlug } = useParams()\n    \n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n\n        const commentInput = e.target.elements.comment\n        const commentText = commentInput.value\n\n        leaveComment(userId, gameSlug, commentText)\n        setComments(prev => [...prev, { [userId]: commentText }])\n\n        commentInput.value = ''\n    }\n\n    return (\n        <Section>\n            {!isLoggedIn ? <Message>You must be logged in to comment</Message> :\n                <Form onSubmit={(e) => onFormSubmit(e)}>\n                <Input required name='comment' placeholder=\"What do you think about this game?\" />\n                <SubmitButton type=\"submit\">Comment</SubmitButton>\n            </Form>\n            }\n                {comments.length &&\n                    <CommentsList>\n                        {comments.map(comment => \n                            <Comment userId={getAndFormatAuthorId(comment)} key={Object.keys(comment)[0]} text={getCommentText(comment)} />\n                        )}\n                    </CommentsList>}\n        </Section>\n    )\n}\n\nconst Message = styled.p`\n    color: white;\n    font-size: 30px;\n    font-family: 'Nunito', sans-serif;\n    margin-bottom: 20px\n`\n\nconst Section = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    @media screen and (min-width: 1200px){\n        align-items: flex-start\n    }\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-bottom: 20px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n\n    @media screen and (min-width: 768px) {\n        width: 542px;\n    }\n`\n\nconst CommentsList = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        align-items: flex-start\n    }\n`\n\nconst Input = styled.textarea`\n    width: 100%;\n    min-height: 80px !important;\n    resize: vertical;\n\n    padding: 10px 20px;\n    border-radius: 20px;\n    \n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n    \n    @media screen and (min-width: 768px){\n        width: 500px;\n        min-height: 30px;\n    }\n\n    &::placeholder{\n        font-family: 'Nunito', sans-serif\n    }\n`\n\nconst SubmitButton = styled.button`\n    padding: 4px 10px;\n    border: none;\n    border-radius: 12px;\n\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    background-color: #00021A;\n    color: white;\n`","import styled from \"styled-components\"\nimport { memo, useState } from \"react\"\n\nexport const GameOverview = memo(({ description }) => {\n    console.log('desc')\n    const [showOverview, setShowOverview] = useState(false)\n\n    \n    const toggleShowDescription = () => {\n        setShowOverview(prev => !prev)\n    }\n\n        return (\n            <>\n                <Overview className={showOverview ? 'more' : 'less'}>\n                    {description}\n                </Overview>\n                {description.length > 673 &&\n                    <ToggleShowButton onClick={toggleShowDescription}>\n                        Show {showOverview ? 'less' : 'more'}\n                    </ToggleShowButton>\n                }\n            </>\n        )\n}\n)\n\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    overflow: hidden;\n    transition: 250ms all ease;\n    margin-bottom: 20px;\n    text-overflow: ellipsis;\n\n    &.less{\n        height: 205px;\n    }\n\n    &.more{\n        height: auto\n    }\n`\n\nconst ToggleShowButton = styled.button`\n    background-color: transparent;\n    font-family: 'Nunito', sans-serif;\n    color: white;\n    font-size: 17px;\n    padding: 5px 10px;\n    border: 1px solid orange;\n    border-radius: 10px\n`","import styled from \"styled-components\"\nimport { memo } from \"react\"\n\nexport const GameScreenshots = memo(({screenshots}) => {\n        return (\n            <>\n                <Screenshots>\n                    {screenshots.map(({image, id}) => \n                        <ScreenshotWrapper key={id}>\n                            <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                        </ScreenshotWrapper>)\n                    }\n                </Screenshots>\n            </>\n        )\n    } \n)\nconst Screenshots = styled.ul`\n    width: 100%;\n    height: auto;\n    margin-bottom: 60px;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    \n    backdrop-filter: blur(10px);\n`\n\nconst Screenshot = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n`\n\nconst ScreenshotWrapper = styled.li`\n    width: 100%;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n\n    &:hover {\n        transform: scale(1.2);\n        clip-path:none;\n        z-index: 1111\n    }\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 10px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 20px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 30px)/4);\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { fetchGameById, fetchScreenshots } from \"utils/rawg-api\";\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport {authContext} from '../../context/context'\n\nimport { BookmarkButton } from \"components/BookmarkButton/BookmarkButton\";\nimport { Container } from \"components/Container/Container\";\nimport { Comments } from \"components/Comments/Comments\";\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\";\n\nimport styled from \"styled-components\";\nimport { GameOverview } from \"components/GameOverview/GameOverview\";\nimport { GameScreenshots } from \"components/GameScreenshots/GameScreenshots\";\nimport { fetchBookmarks, fetchComments } from \"utils/firebase/database\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const { isLoggedIn, userId } = useContext(authContext)\n    const [isBookmark, setIsBookmark] = useState()\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState('')\n    const [stores, setStores] = useState([])\n    const [year, setYear] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const [isError, setIsError] = useState(false)\n    const { gameSlug } = useParams()\n\n    useEffect(() => {\n        Promise.all([fetchGameById(gameSlug),\n            fetchScreenshots(gameSlug),\n            fetchComments(gameSlug),\n            fetchBookmarks(userId)\n        ]).then(res => {\n            const [game, screenshots, comments, bookmarks] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n            \n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released)\n            setScreenshots(results)\n\n            if (bookmarks.val()) {\n                setIsBookmark(Object.keys(bookmarks.val()).some(el => el === gameSlug))\n            }\n\n            if(comments.val()) setComments(formatComments(comments.val()))\n\n            setIsLoading(false)\n        }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n    }, [gameSlug, userId])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> : isError ? <ErrorComponent/> :\n            <>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year.slice(0, 4)}</Year> }\n                                {isLoggedIn && <BookmarkButton\n                                    gameData={gameData}\n                                    isBookmark={isBookmark}\n                                    setIsBookmark={setIsBookmark} />\n                                }\n                            </Meta>\n                                {description && <GameOverview description={description} />}\n                        </div>\n                                {stores && <StoresList stores={stores} data={gameData}/>}\n                    </Info>\n                 </div>\n                                {screenshots && <GameScreenshots screenshots={screenshots} />}\n                                <Comments setComments={setComments} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nexport default GameDescription"],"names":["ErrorComponent","_jsxs","Block","children","_jsx","Message","Image","src","mario","alt","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Loader","_ref","className","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","setStoreIcon","storeName","icon","FaSteam","FaPlaystation","FaAppStore","SiGogdotcom","FaXbox","RiXboxLine","SiNintendo","SiEpicgames","FaGooglePlay","FaItchIo","StoresList","memo","stores","console","log","List","map","_ref2","store","id","name","domain","href","concat","BookmarkButton","isBookmark","gameData","setIsBookmark","userId","useContext","authContext","gameSlug","useParams","Button","type","onClick","removeGameFromBookmarks","addGameToBookmarks","prevState","BsFillBookmarkFill","size","BsBookmark","Comment","text","_useState","useState","_useState2","_slicedToArray","authorAvatar","setAuthorAvatar","_useState3","_useState4","authorUsername","setAuthorUsername","useEffect","fetchUserInfo","then","res","_res$val","val","username","photoUrl","catch","error","CommentWrapper","AuthorInfo","AvatarWrapper","AuthorAvatar","AuthorName","CommentText","_templateObject4","_templateObject5","_templateObject6","getAndFormatAuthorId","comment","Object","keys","split","getCommentText","values","Comments","comments","setComments","_useContext","isLoggedIn","Section","Form","onSubmit","e","preventDefault","commentInput","target","elements","commentText","value","leaveComment","prev","_toConsumableArray","_defineProperty","onFormSubmit","Input","required","placeholder","SubmitButton","length","CommentsList","GameOverview","description","showOverview","setShowOverview","_Fragment","Overview","ToggleShowButton","GameScreenshots","screenshots","Screenshots","image","ScreenshotWrapper","Screenshot","loading","Page","Info","Meta","Title","Year","title","setTitle","_useState5","_useState6","setScreenshots","_useState7","_useState8","setDescription","_useState9","_useState10","setStores","_useState11","_useState12","year","setYear","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","setGameData","_useState17","_useState18","_useState19","_useState20","isError","setIsError","Promise","all","fetchGameById","fetchScreenshots","fetchComments","fetchBookmarks","_res","game","bookmarks","data","description_raw","released","results","some","el","entries","formatComments","Container","style","display","slice"],"sourceRoot":""}