{"version":3,"file":"static/js/278.168ed6d8.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/Loader/Loader.jsx","components/ProfileCard/ProfileCard.jsx","components/UserCard/UserCard.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["// import './GameCard.scss'\nimport styled, {css} from 'styled-components'\n\nimport { Link } from \"react-router-dom\"\nimport placeholderImage from 'assets/images/placeholder.png'\n\nexport const GameCard = ({ data, className }) => {\n\n    const {name, released, genres, background_image, slug, rating } = data\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <Card className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster' alt={`${name} poster`} width={500}\n                height='auto' /> : <img src={placeholderImage}   alt='No poster here' className='poster'/>}\n                <div className='description'>\n                    <Title>\n                        {name}\n                    </Title>\n                    {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                    {genres && <Genres className='genres'>\n                        {genres.map((({id, name}) => <li className=\"genres_item\" key={id}>{name}</li>))}\n                    </Genres>}\n                </div>\n             <Rating className='rating'>{rating}</Rating>\n        </Card>\n    </Link>\n    )\n}\n\nconst Card = styled.div`\n    ${({className}) => {\n    switch (className) {\n        case 'gamecard_catalog':\n            return css`\n                height: 500px;\n                color: white;\n                background-color: #00021A;\n                overflow: hidden;\n                position: relative;\n                clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 67%, 0 11%);\n                transform: scale(1);\n                transition: 250ms transform ease;\n\n                @media screen and (max-width: 767px) {\n                    height: auto;\n                }\n\n                & .poster{\n                    object-fit: cover;\n                    height: 70%;\n                    transition: 500ms all ease;\n                    width: 100%;\n                }\n\n                &:hover{\n                    transform: scale(1.05);\n                }\n\n                & .description {\n                    padding: 15px;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 5px;\n                }\n\n               \n            `\n        case 'gamecard_slider':\n            return css`\n                height: 350px;\n                overflow: hidden;\n                position: relative;\n                max-width: 500px;\n                clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 70%, 0 11%);\n\n                & .description {\n                    position: absolute;\n                    width: 50%;\n                    right: 100%;\n                    transition: 250ms right ease;\n                    top: 0;\n                    height: 100%;\n                    background-color: #00021A;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    gap: 15px;\n                    box-sizing: border-box;\n                    padding: 0 10px;\n\n                    \n\n                    & h1, p{\n                        color: white;\n                    }\n\n                    & ul{\n                        flex-wrap: wrap;\n                    }\n                }\n\n                & .rating, & .release_year {\n                    display: none;\n                }\n\n                & .poster {\n                        object-fit: cover;\n                        transition: 500ms all ease;\n                        width: 100%;\n                        height: 100%;\n                    }\n\n                &:hover .poster {\n                    height: 100%;\n                    filter: blur(5px);\n                }\n\n                &:hover .description {\n                    right: 50%;\n                }\n            `\n\n        default: return css``\n        }\n    }}\n`\n\nconst Genres = styled.div`\n    display: flex;\n    gap: 5px;\n    color: #f0f0f0;\n    font-size: 15;\n    letter-spacing: 0.05em;\n    list-style: none;\n    flex-wrap: wrap;\n\n    & li{\n        padding: 0 5px 0 0;\n    }\n\n    & li:not(:last-child){\n    border-right: 1px solid orange;\n}\n`\n\nconst Title = styled.p`\n     color: white;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 25px;\n    letter-spacing: 0.05em;\n    white-space: normal;\n    word-break: break-word;\n`\n\nconst Rating = styled.p`\n        position: absolute;\n        top: 0;\n        right: 40px;\n        color: white;\n        background-color: #050B2B;\n        padding: 10px 10px 5px 10px;\n        font-size: 20px;\n        font-weight: 700;\n        display: flex;\n        align-items: center;\n        transition: 400ms top ease;\n`","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 60px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import styled from \"styled-components\"\nimport { RxUpload } from \"react-icons/rx\"\nimport { Oval } from \"react-loader-spinner\"\nimport {authContext} from '../../context/context'\nimport { useContext, useState } from \"react\"\nimport { uploadBytes, getDownloadURL, ref as sRef } from 'firebase/storage'\nimport {set, ref} from 'firebase/database'\nimport firebaseApps from 'config/firebase'\nimport { useLocation } from \"react-router-dom\"\nimport {BsPenFill} from 'react-icons/bs'\nimport {MdDone} from 'react-icons/md'\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading, setUsername}) => {\n\n    const {userId} = useContext(authContext)\n    const location = useLocation()\n    const [showChangeUsernameFrom, setShowChangeUsernameForm] = useState(false)\n    \n    const uploadAvatar = (e) => {\n        e.preventDefault()\n        if(e.target.files[0]){\n            if(e.target.files[0].size > 2097152){\n                console.log('noooooJJFJFJJFJFJ')\n                setIsAvatarLoading(false)\n                return\n            }\n            setIsAvatarLoading(true)\n            uploadBytes(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`), e.target.files[0]).then(() => {\n            return getDownloadURL(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`))}).then((url) =>{\n                set(ref(firebaseApps.database, 'users/' + userId + '/photoUrl'), url)\n                        setPhotoPath(url)\n                        setIsAvatarLoading(false)\n                    })\n                }\n    }\n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname === '/profile' &&\n                    <><UploadInput id='upload_file'accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={(e) => uploadAvatar(e)}/>\n                    <UploadButton htmlFor=\"upload_file\">\n                        <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </UploadButton></>\n                        }\n                        {isAvatarLoading ? <Spinner><Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'}/></Spinner> : \n                        <Avatar style={{objectFit: 'cover',width: 200, height: '100%'}} src={`${avatar}`} alt=\"\"/>}\n                    </AvatarWrapper>\n                    <div style={{display: 'flex', gap: 5, alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap'}}>\n                {!showChangeUsernameFrom && <h1>{username}</h1>}\n                {location.pathname === '/profile' && !showChangeUsernameFrom && <ChangeUsernameButton onClick={() => setShowChangeUsernameForm(true)}><BsPenFill/></ChangeUsernameButton>}</div>\n                {showChangeUsernameFrom && <ChangeUsernameForm action=\"\" onSubmit={\n                    (e) => {\n                        e.preventDefault()\n                        set(ref(firebaseApps.database, 'users/' + userId + '/username'), e.target.elements.username.value)\n                        setUsername(e.target.elements.username.value)\n                        setShowChangeUsernameForm(false)\n                    }\n                }>\n                    <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                    <button><MdDone size={15}/></button>\n                </ChangeUsernameForm>}\n            </Info>\n    )\n}\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px\n`\nconst Spinner = styled.div`\n    text-align: center;\n    width: 90%;\n    height: 90%\n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 200px;\n    width: 200px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: transparent;\n\n`\n\nconst Avatar = styled.img`\ntransition: 250ms filter ease;\n\n    ${AvatarWrapper}:hover &{\n        filter: blur(3px)\n    }\n`\n\nconst UploadButton = styled.label`\n    border: none;\n    position: absolute;\n    opacity: 0;\n    width: 30px;\n    height: 30px;\n    background-color: white;\n    padding: 5px;\n    border-radius: 100px;\n    cursor: pointer;\n    z-index: 1111;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n`\n\nconst ChangeUsernameButton = styled.button`\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`","import { useContext, useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { getUserInfo, acceptInvitationAndAddUser } from \"utils/firebase\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport styled from \"styled-components\"\nimport { authContext } from \"context/context\"\n\n\n\nexport const UserCard = ({id, isPending, setPending}) => {\n    const [name, setName] = useState('')\n    const [avatar, setAvatar] = useState()\n    const { userId } = useContext(authContext)\n\n    useEffect(() => {\n        getUserInfo(id).then(res => {\n            console.log(res.val())\n            setName(res.val().username)\n            if(res.val().photoUrl) {setAvatar(res.val().photoUrl)}\n            else {setAvatar(avatarPlaceholder)}\n        })\n    }, [id])\n\n    return(\n        <Card>     \n            <CardLink style={{color: 'black'}} to={`/users/${id}`}>\n                <AvatarWrapper>\n                <img style={{objectFit: 'cover', width: 100, height: '100%'}} width={200} src={`${avatar}`} alt={`${name}'s avatar`}></img>\n            </AvatarWrapper>\n                <Username>{name}</Username>\n              \n            </CardLink>\n            {isPending && <button onClick={() =>\n                acceptInvitationAndAddUser(id, userId).then(() =>\n                        setPending(prev => prev.filter(friend => friend !== id))\n                )}>\n                Accept invitation</button>}\n        </Card>\n    )\n}\n\nconst Card = styled.li`\n    height: auto;\n    padding: 10px;\n    border-radius: 20px;\n    background-color: #00021A;\n    transform: scale(1);\n    transition: 200ms all ease;\n\n    &:hover{\n        transform: scale(0.95)\n    }\n\n    @media screen and (min-width: 768px){\n        width: 400px\n    }\n    \n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 50px;\n    width: 50px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: #080D2B;\n\n    @media screen and (min-width: 420px){\n        height: 100px;\n        width: 100px;\n    }\n`\n\nconst CardLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\ngap: 10px;\njustify-content: flex-start;\n`\n\nconst Username = styled.p`\n    color: white;\n    font-size: 25px;\n    font-weight: 500\n`","import { useContext, useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport {authContext} from '../../context/context'\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport { getFavouriteGames, userSignOut, getUserInfo, getFriendList } from \"../../utils/firebase\"\nimport { Loader } from 'components/Loader/Loader'\nimport { GameList } from 'components/GameList/GameList'\nimport { ProfileCard } from 'components/ProfileCard/ProfileCard'\nimport { UserCard } from \"components/UserCard/UserCard\"\n\n\nimport styled from 'styled-components'\nimport { Container } from \"components/Container/Container\"\n\nconst AccountPage = () => {\n    const {userId, isLoggedIn, setUserId} = useContext(authContext)\n\n    const [favouriteGames, setFavouriteGames] = useState([])\n    const [username, setUsername] = useState('')\n    const [friendPending, setFriendsPending] = useState()\n    const [photoPath, setPhotoPath] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [isAvatarLoading, setIsAvatarLoading] = useState(false)\n    const navigate = useNavigate()\n\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/login/login-page')\n            return\n        }\n\n    const showFriends = () => {\n        getFriendList(userId).then((res) => {\n            if(res.val()) setFriendsPending(Object.values(res.val()))\n        }\n        )\n    }\n        Promise.all([getUserInfo(userId), getFavouriteGames(userId)])\n            .then(res => {\n                const [snapshot, games] = res\n            if (snapshot.exists()) {\n                const {username, photoUrl} = snapshot.val()\n                setUsername(username)\n                if(photoUrl) {\n                    setPhotoPath(photoUrl)\n                }\n                else {\n                    setPhotoPath(avatarPlaceholder)\n                }\n            } else {\n                setUsername('User')\n            }\n\n                if(games.val()) setFavouriteGames([...Object.values(games.val())])\n                setIsLoading(false)\n               \n            }).catch((error) => {\n                console.error(error);\n                setIsLoading(false)\n            })\n        \n        showFriends()\n    \n    }, [isLoggedIn, navigate, userId])\n\n    const logOut = () => {\n        userSignOut()\n            .then(() => {\n                navigate('/login/login-page')\n                setUserId('')\n            }\n        );\n    }\n    \n    return (\n        <>\n            <Page>\n                <Container>\n               {isLoading ? <Loader className={'loader-profile'} color={'#00021A'} /> : <><Page className='top'>\n                    <ProfileCard setPhotoPath={setPhotoPath} avatar={photoPath} username={username} isAvatarLoading={isAvatarLoading} setIsAvatarLoading={setIsAvatarLoading} setUsername={setUsername}/>\n                    <LogOut type=\"button\" onClick={logOut}>Log out</LogOut>\n                        <BookmarksTitle>Your bookmarks:</BookmarksTitle>\n                        <ul>\n                            {friendPending && friendPending.map(friend => <UserCard id={friend} isPending={true} setPending={setFriendsPending} />)}\n                        </ul>\n                    <GameList games={favouriteGames}/>\n                    </Page> \n                    </>}\n                    </Container>\n            </Page>\n        </>\n        \n    )\n}\n\nconst Page = styled.div`\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    position: relative;\n    min-height: calc(100vh - 61px);\n    width: 100%;\n`\n\nconst BookmarksTitle = styled.h2`\n\n`\n\nconst LogOut = styled.button`\n    color: white;\n    background-color: orange;\n    font-size: 20px;\n    font-family: 'Nunito', sans-serif;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n`\n\nexport default AccountPage"],"names":["GameCard","_ref","data","className","name","released","genres","background_image","slug","rating","_jsx","Link","to","concat","children","_jsxs","Card","loading","src","alt","width","height","placeholderImage","Title","slice","Genres","map","_ref2","id","Rating","styled","_templateObject","_taggedTemplateLiteral","_ref3","css","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","GameList","games","Container","List","game","Item","Loader","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","userId","useContext","authContext","location","useLocation","_useState","useState","_useState2","_slicedToArray","showChangeUsernameFrom","setShowChangeUsernameForm","Info","AvatarWrapper","pathname","_Fragment","UploadInput","accept","type","onChange","e","preventDefault","target","files","size","console","log","uploadBytes","sRef","firebaseApps","then","getDownloadURL","url","set","ref","uploadAvatar","UploadButton","htmlFor","RxUpload","fill","stroke","Spinner","Oval","secondaryColor","Avatar","style","objectFit","display","gap","alignItems","justifyContent","flexWrap","ChangeUsernameButton","onClick","BsPenFill","ChangeUsernameForm","action","onSubmit","elements","value","minLength","required","autoComplete","MdDone","_templateObject8","UserCard","isPending","setPending","setName","_useState3","_useState4","setAvatar","useEffect","getUserInfo","res","val","photoUrl","avatarPlaceholder","CardLink","Username","acceptInvitationAndAddUser","prev","filter","friend","Page","BookmarksTitle","LogOut","_useContext","isLoggedIn","setUserId","favouriteGames","setFavouriteGames","_useState5","_useState6","friendPending","setFriendsPending","_useState7","_useState8","photoPath","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","navigate","useNavigate","Promise","all","getFavouriteGames","_res","snapshot","exists","_snapshot$val","_toConsumableArray","Object","values","catch","error","getFriendList","userSignOut"],"sourceRoot":""}