{"version":3,"file":"static/js/699.08cf8904.chunk.js","mappings":"0LAGaA,EAAS,SAAHC,GAA4B,IAAvBC,EAASD,EAATC,UAAWC,EAAKF,EAALE,MAC/B,OACIC,EAAAA,EAAAA,KAACC,EAAO,CAACC,OAAQJ,EAAUK,UACvBH,EAAAA,EAAAA,KAACI,EAAAA,EAAa,CAACC,gBAAiBN,EAAOO,WAAY,CAAC,SAAU,WAAY,UAGtF,EAEML,EAAUM,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mBACpB,SAACC,GACC,MACS,oBADFA,EAAMR,QAEFS,EAAAA,EAAAA,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2DAICE,EAAAA,EAAAA,IAAGE,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8JAOtB,G,+NCrBSK,EAAa,SAAHjB,GAAkB,IAAbkB,EAAMlB,EAANkB,OACxB,OACIf,EAAAA,EAAAA,KAACgB,EAAI,CAAAb,SACAY,EAAOE,KAAI,SAAAC,GAAc,IAAZC,EAAKD,EAALC,MACFC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,OADAC,QAAQC,IAAIF,IACLrB,EAAAA,EAAAA,KAAA,MAAAG,UAAIqB,EAAAA,EAAAA,MAAA,KAAGC,KAAI,WAAAC,OAAaL,GAASlB,SAAA,CAC1B,UAATiB,IAAoBpB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACnB,sBAATP,IAAgCpB,EAAAA,EAAAA,KAAC4B,EAAAA,IAAa,IACrC,cAATR,IAAwBpB,EAAAA,EAAAA,KAAC6B,EAAAA,IAAU,IAC1B,QAATT,IAAkBpB,EAAAA,EAAAA,KAAC8B,EAAAA,IAAW,IACrB,eAATV,IAAyBpB,EAAAA,EAAAA,KAAC+B,EAAAA,IAAM,IACvB,mBAATX,IAA6BpB,EAAAA,EAAAA,KAACgC,EAAAA,IAAU,IAC/B,mBAATZ,IAA6BpB,EAAAA,EAAAA,KAACiC,EAAAA,IAAU,IAC/B,eAATb,IAAyBpB,EAAAA,EAAAA,KAACkC,EAAAA,IAAW,IAC5B,gBAATd,IAA0BpB,EAAAA,EAAAA,KAACmC,EAAAA,IAAY,IAC9B,YAATf,IAAsBpB,EAAAA,EAAAA,KAACoC,EAAAA,IAAQ,QAExC,KAIZ,EAEMpB,EAAQT,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+U,uCCtBV4B,EAAiB,SAAHxC,GAAoB,IAAfyC,EAAQzC,EAARyC,SACpBC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OAERG,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE1BI,EAASV,EAATU,KAmBJ,OANJC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBX,GAAQY,MAAK,SAAAC,GACxBA,EAAIC,OAAON,EAAeO,OAAOC,KAAKH,EAAIC,OAAOG,MAAK,SAAAC,GAAE,OAAIA,IAAOT,CAAI,IAC9E,GACJ,GAAG,CAACT,EAAQO,EAAaE,KAGjBxB,EAAAA,EAAAA,MAACkC,EAAM,CAACC,KAAK,SAASC,QAlBJ,WAClBd,GACAe,EAAAA,EAAAA,IAAwBtB,EAAQS,GAE1BF,IACNgB,EAAAA,EAAAA,IAAmBvB,EAAQS,EAAMV,GAGrCS,GAAe,SAAAgB,GAAS,OAAKA,CAAS,GAC1C,EASyD5D,SAAA,CAAC,YACpC2C,GAAc9C,EAAAA,EAAAA,KAACgE,EAAAA,IAAkB,CAACC,KAAK,UAAYjE,EAAAA,EAAAA,KAACkE,EAAAA,IAAU,CAACD,KAAK,WAG9F,EAIMP,EAASnD,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oU,oBCpCf0D,EAAU,SAAHtE,GAA0B,IAApB0C,EAAM1C,EAAN0C,OAAQ6B,EAAIvE,EAAJuE,KAE9B1B,GAAwCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3C2B,EAAYzB,EAAA,GAAE0B,EAAe1B,EAAA,GACpC2B,GAA4C5B,EAAAA,EAAAA,UAAS,IAAG6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAWxC,OATAvB,EAAAA,EAAAA,YAAU,YACN0B,EAAAA,EAAAA,IAAYpC,GAAQY,MAAK,SAAAC,GACrB,IAAAwB,EAA+BxB,EAAIC,MAA3BwB,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAElBJ,EAAkBG,GAClBP,EAAgBQ,EACpB,GACJ,GAAG,CAACvC,KAGAf,EAAAA,EAAAA,MAACuD,EAAc,CAAA5E,SAAA,EACXqB,EAAAA,EAAAA,MAACwD,EAAU,CAAA7E,SAAA,EACPH,EAAAA,EAAAA,KAACiF,EAAa,CAAA9E,SACTkE,IAAgBrE,EAAAA,EAAAA,KAACkF,EAAY,CAACC,IAAKd,EAAce,IAAG,GAAA1D,OAAK+C,EAAc,kBAE5EzE,EAAAA,EAAAA,KAACqF,EAAU,CAAAlF,SAAEsE,QAGjBzE,EAAAA,EAAAA,KAACsF,EAAW,CAAAnF,SAAEiE,MAG1B,EAEMW,EAAiBxE,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2NAY1B4E,EAAa9E,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4BAIrB6E,EAAc/E,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4BAItBuE,EAAazE,EAAAA,GAAAA,IAAUgF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,+GASvBwE,EAAgB1E,EAAAA,GAAAA,IAAUiF,IAAAA,GAAA/E,EAAAA,EAAAA,GAAA,uJAS1ByE,EAAe3E,EAAAA,GAAAA,IAAUkF,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,uEChEzBiF,EAAuB,SAACC,GAC1B,OAAOrC,OAAOC,KAAKoC,GAAS,GAAGC,MAAM,KAAK,EAC9C,EAEMC,GAAiB,SAACF,GACpB,OAAOrC,OAAOwC,OAAOH,GAAS,EAClC,EAEaI,GAAW,SAAHlG,GAA2C,IAAtCmG,EAAQnG,EAARmG,SAAUC,EAAWpG,EAAXoG,YAAaC,EAAQrG,EAARqG,SACrC3D,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OAcR,OACIf,EAAAA,EAAAA,MAAC2E,GAAO,CAAAhG,SAAA,EACJqB,EAAAA,EAAAA,MAAC4E,GAAI,CAACC,SAAU,SAACC,GAAC,OAdL,SAACA,GAClBA,EAAEC,iBAEF,IAAMC,EAAeF,EAAEG,OAAOC,SAASf,QACjCgB,EAAcH,EAAaI,OAEjCC,EAAAA,EAAAA,IAAatE,EAAQ2D,EAAUS,GAC/BV,GAAY,SAAAa,GAAI,SAAApF,QAAAqF,EAAAA,EAAAA,GAAQD,GAAI,EAAAE,EAAAA,EAAAA,GAAA,GAAKzE,EAASoE,IAAW,IAErDH,EAAaI,MAAQ,EACzB,CAI+BK,CAAaX,EAAE,EAACnG,SAAA,EACnCH,EAAAA,EAAAA,KAACkH,GAAK,CAACC,UAAQ,EAAC/F,KAAK,UAAUgG,YAAY,wCAC3CpH,EAAAA,EAAAA,KAACqH,GAAY,CAAC1D,KAAK,SAAQxD,SAAC,eAEP,IAApB6F,EAASsB,SACNtH,EAAAA,EAAAA,KAACuH,GAAY,CAAApH,SACR6F,EAAS/E,KAAI,SAAA0E,GAAO,OACjB3F,EAAAA,EAAAA,KAACmE,EAAO,CAAC5B,OAAQmD,EAAqBC,GAAUvB,KAAMyB,GAAeF,IAAY,QAK7G,EAEMQ,GAAU5F,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mMAYpB2F,GAAO7F,EAAAA,GAAAA,KAAWK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gMAYlB8G,GAAehH,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8MAYxByG,GAAQ3G,EAAAA,GAAAA,SAAegF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,iYAqBvB4G,GAAe9G,EAAAA,GAAAA,OAAaiF,IAAAA,GAAA/E,EAAAA,EAAAA,GAAA,oQCX5B+G,GAAOjH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qSAejBgH,GAAOlH,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4UAkBjBiH,GAAOnH,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,ySAejBkH,GAAQpH,EAAAA,GAAAA,GAASgF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,yWAiBjBmH,GAAOrH,EAAAA,GAAAA,EAAQiF,IAAAA,GAAA/E,EAAAA,EAAAA,GAAA,0RAcfoH,GAAWtH,EAAAA,GAAAA,EAAQkF,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,iJASnBqH,GAAcvH,EAAAA,GAAAA,GAASwH,IAAAA,GAAAtH,EAAAA,EAAAA,GAAA,6KAYvBuH,GAAazH,EAAAA,GAAAA,IAAU0H,IAAAA,GAAAxH,EAAAA,EAAAA,GAAA,uEAMvByH,GAAoB3H,EAAAA,GAAAA,GAAS4H,IAAAA,GAAA1H,EAAAA,EAAAA,GAAA,8iBA0BnC,GA7MwB,WACpB,IAAO2H,GAAc5F,EAAAA,EAAAA,YAAWC,EAAAA,GAAzB2F,WAEP1F,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B2F,EAAKzF,EAAA,GAAE0F,EAAQ1F,EAAA,GACtB2B,GAAsC5B,EAAAA,EAAAA,UAAS,IAAG6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAA3CgE,EAAW/D,EAAA,GAAEgE,EAAchE,EAAA,GAClCiE,GAAsC9F,EAAAA,EAAAA,YAAU+F,GAAA7F,EAAAA,EAAAA,GAAA4F,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA4BlG,EAAAA,EAAAA,YAAUmG,GAAAjG,EAAAA,EAAAA,GAAAgG,EAAA,GAA/B9H,EAAM+H,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAwBrG,EAAAA,EAAAA,UAAS,MAAKsG,GAAApG,EAAAA,EAAAA,GAAAmG,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkCzG,EAAAA,EAAAA,WAAS,GAAK0G,GAAAxG,EAAAA,EAAAA,GAAAuG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgC7G,EAAAA,EAAAA,UAAS,CAAC,GAAE8G,GAAA5G,EAAAA,EAAAA,GAAA2G,EAAA,GAArClH,EAAQmH,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,GAAgChH,EAAAA,EAAAA,UAAS,IAAGiH,GAAA/G,EAAAA,EAAAA,GAAA8G,EAAA,GAArC3D,EAAQ4D,EAAA,GAAE3D,EAAW2D,EAAA,GACpB1D,GAAa2D,EAAAA,EAAAA,MAAb3D,SA6BR,OA3BA4D,OAAOC,OAAO,CACVC,IAAK,KAGT/G,EAAAA,EAAAA,YAAU,WACNgH,QAAQC,IAAI,EAACC,EAAAA,EAAAA,IAAYjE,IAAWkE,EAAAA,EAAAA,IAAelE,IAAWmE,EAAAA,EAAAA,IAAYnE,KAAY/C,MAAK,SAAAC,GACvF,IAAAkH,GAAAzH,EAAAA,EAAAA,GAAsCO,EAAG,GAAlCmH,EAAID,EAAA,GAAE/B,EAAW+B,EAAA,GAAEtE,EAAQsE,EAAA,GAC3BE,EAAQD,EAARC,KACApJ,EAA2CoJ,EAA3CpJ,KAAMqJ,EAAqCD,EAArCC,gBAAiB1J,EAAoByJ,EAApBzJ,OAAQ2J,EAAYF,EAAZE,SAC9BC,EAAYpC,EAAYiC,KAAxBG,QAERjB,EAAYc,GACZlC,EAASlH,GACTwH,EAAe6B,GACf1B,EAAUhI,GACVoI,EAAQuB,EAASE,MAAM,EAAG,IAC1BpC,EAAemC,GACf1E,EApCW,SAACD,GACpB,OAAO1C,OAAOuH,QAAQ7E,EAAS3C,OAAOpC,KAAI,SAAAwC,GACtC,OAAAuD,EAAAA,EAAAA,GAAA,GAASvD,EAAG,GAAMA,EAAG,GACzB,GACJ,CAgCwBqH,CAAe9E,IAE3BuD,GAAa,EACjB,IAAGwB,OAAM,SAAAC,GACL1J,QAAQC,IAAIyJ,GACZzB,GAAa,EACjB,GAEJ,GAAG,CAACrD,KAGAlG,EAAAA,EAAAA,KAACwH,GAAI,CAAArH,UACDH,EAAAA,EAAAA,KAACiL,EAAAA,EAAS,CAAA9K,SACTmJ,GAAYtJ,EAAAA,EAAAA,KAACJ,EAAAA,EAAM,CAACG,MAAO,WAC5ByB,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA/K,SAAA,EACIH,EAAAA,EAAAA,KAAA,OAAKmL,MAAO,CAACC,QAAS,QAAQjL,UAC1BqB,EAAAA,EAAAA,MAACiG,GAAI,CAAAtH,SAAA,EACDqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACIqB,EAAAA,EAAAA,MAACkG,GAAI,CAAAvH,SAAA,EACDH,EAAAA,EAAAA,KAAC2H,GAAK,CAAAxH,SAAEkI,IACNa,IAAQlJ,EAAAA,EAAAA,KAAC4H,GAAI,CAAAzH,SAAE+I,IACfd,IAAcpI,EAAAA,EAAAA,KAACqC,EAAc,CAACC,SAAUA,OAE7CqG,IAAe3I,EAAAA,EAAAA,KAAC6H,GAAQ,CAAA1H,SAAEwI,OAE9B5H,IAAUf,EAAAA,EAAAA,KAACc,EAAU,CAACC,OAAQA,SAGlCwH,IACGvI,EAAAA,EAAAA,KAAC8H,GAAW,CAAA3H,SACPoI,EAAYtH,KAAI,SAAAC,GAAA,IAAEmK,EAAKnK,EAALmK,MAAK,OACpBrL,EAAAA,EAAAA,KAACkI,GAAiB,CAAA/H,UACdH,EAAAA,EAAAA,KAACgI,GAAU,CAAC7C,IAAKkG,EAAOjG,IAAI,OAAOkG,QAAQ,UAC3B,OAEhCtL,EAAAA,EAAAA,KAAC+F,GAAQ,CAACE,YAAaA,EAAaC,SAAUA,EAAUF,SAAUA,UAMtF,C","sources":["components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/BookmarkButton/BookmarkButton.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport {RiXboxLine} from 'react-icons/ri'\nimport styled from 'styled-components'\n\nexport const StoresList = ({stores}) => {\n    return (\n        <List>\n            {stores.map(({store}) => {\n                const { name, domain } = store\n                console.log(domain)\n                return(<li><a href={`https://${domain}`}>\n                    {name === 'Steam' && <FaSteam />}\n                    {name === 'PlayStation Store' && <FaPlaystation />}\n                    {name === 'App Store' && <FaAppStore />}\n                    {name === 'GOG' && <SiGogdotcom />}\n                    {name === 'Xbox Store' && <FaXbox />}\n                    {name === 'Xbox 360 Store' && <RiXboxLine />}\n                    {name === 'Nintendo Store' && <SiNintendo />}\n                    {name === 'Epic Games' && <SiEpicgames />}\n                    {name === 'Google Play' && <FaGooglePlay />}\n                    {name === 'itch.io' && <FaItchIo />}\n                </a></li>)\n            })}\n        </List>\n    )\n    \n}\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n     gap: 10px;\n     flex-wrap: wrap;\n   \n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        gap: 20px;\n    }\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport { authContext } from '../../context/context'\nimport { removeGameFromFavourite, addGameToFavourite, getFavouriteGames } from \"utils/firebase\"\nimport { BsBookmark, BsFillBookmarkFill } from 'react-icons/bs'\n\nimport styled from \"styled-components\"\n\nexport const BookmarkButton = ({gameData}) => {\n    const { userId } = useContext(authContext)\n    \n    const [isFavourite, setIsFavourite] = useState()\n\n    const { slug } = gameData\n\n    const toggleIsFavourite = () => {\n        if (isFavourite) {\n            removeGameFromFavourite(userId, slug)\n        }\n        else if (!isFavourite) {\n            addGameToFavourite(userId, slug, gameData)\n        }\n        \n        setIsFavourite(prevState => !prevState)\n    }\n\n    useEffect(() => {\n        getFavouriteGames(userId).then(res => {\n            if(res.val()) setIsFavourite(Object.keys(res.val()).some(el => el === slug))\n        })\n    }, [userId, isFavourite, slug])\n\n        return (\n            <Button type=\"button\" onClick={toggleIsFavourite}>\n                Bookmark {isFavourite ? <BsFillBookmarkFill size='20px' /> : <BsBookmark size='20px' />}\n            </Button>\n        )\n}\n    \n\n\nconst Button = styled.button`\n    height: auto;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n\n    color: white;\n    background-color: rgba(84, 84, 84, 0.5);\n`","import { useEffect, useState } from \"react\"\nimport { getUserInfo } from \"utils/firebase\"\nimport styled from \"styled-components\"\n\nexport const Comment = ({ userId, text }) => {\n    \n    const [authorAvatar, setAuthorAvatar] = useState()\n    const [authorUsername, setAuthorUsername] = useState('')\n    \n    useEffect(() => {\n        getUserInfo(userId).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setAuthorUsername(username)\n            setAuthorAvatar(photoUrl)\n        })\n    }, [userId])\n\n    return (\n        <CommentWrapper>\n            <AuthorInfo>\n                <AvatarWrapper>\n                    {authorAvatar && <AuthorAvatar src={authorAvatar} alt={`${authorUsername}'s avatar`}></AuthorAvatar>}\n                </AvatarWrapper>\n                <AuthorName>{authorUsername}</AuthorName>\n            </AuthorInfo>\n            \n            <CommentText>{text}</CommentText>\n        </CommentWrapper>\n    )\n}\n\nconst CommentWrapper = styled.li`\n    width: 100%;\n    padding: 10px 20px;\n    box-sizing: border-box;\n    border: 2px solid #2F3149;\n    border-radius: 20px;\n    \n    @media screen and (min-width: 768px){\n        width: 542px;\n    }\n`\n\nconst AuthorName = styled.p`\n    color: white\n`\n\nconst CommentText = styled.p`\n    color: white\n`\n\nconst AuthorInfo = styled.div`\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n   \n`\n\nconst AvatarWrapper = styled.div`\n    height: 60px;\n    width: 60px;\n    overflow: hidden;\n    margin-right: 10px;\n    position: relative;\n    border-radius: 100px;    \n`\n\nconst AuthorAvatar = styled.img`\n    width: 60px;\n    height: 60px;\n    object-fit: cover;\n`","import { useContext } from \"react\"\nimport { authContext } from \"context/context\"\nimport { leaveComment } from \"utils/firebase\"\nimport { Comment } from \"components/Comment/Comment\"\nimport styled from \"styled-components\"\n\nconst getAndFormatAuthorId = (comment) => {\n    return Object.keys(comment)[0].split('-')[0]\n}\n\nconst getCommentText = (comment) => {\n    return Object.values(comment)[0]\n}\n\nexport const Comments = ({comments, setComments, gameSlug}) => {\n    const { userId } = useContext(authContext)\n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n\n        const commentInput = e.target.elements.comment\n        const commentText = commentInput.value\n\n        leaveComment(userId, gameSlug, commentText)\n        setComments(prev => [...prev, { [userId]: commentText }])\n\n        commentInput.value = ''\n    }\n\n    return (\n        <Section>\n            <Form onSubmit={(e) => onFormSubmit(e)}>\n                <Input required name='comment' placeholder=\"What do you think about this game?\" />\n                <SubmitButton type=\"submit\">Comment</SubmitButton>\n            </Form>\n                {comments.length !== 0 &&\n                    <CommentsList>\n                        {comments.map(comment => \n                            <Comment userId={getAndFormatAuthorId(comment)} text={getCommentText(comment)} />\n                        )}\n                    </CommentsList>}\n        </Section>\n    )\n}\n\nconst Section = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    @media screen and (min-width: 1200px){\n        align-items: flex-start\n    }\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-bottom: 20px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n\n    @media screen and (min-width: 768px) {\n        width: 542px;\n    }\n`\n\nconst CommentsList = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        align-items: flex-start\n    }\n`\n\nconst Input = styled.textarea`\n    width: 100%;\n    min-height: 80px !important;\n    resize: vertical;\n\n    padding: 10px 20px;\n    border-radius: 20px;\n    \n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n    \n    @media screen and (min-width: 768px){\n        width: 500px;\n        min-height: 30px;\n    }\n\n    &::placeholder{\n        font-family: 'Nunito', sans-serif\n    }\n`\n\nconst SubmitButton = styled.button`\n    padding: 4px 10px;\n    border: none;\n    border-radius: 12px;\n\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    background-color: #00021A;\n    color: white;\n`","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { getGameById, getScreenshots} from \"../../services/games-api\"\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport {authContext} from '../../context/context'\nimport styled from \"styled-components\";\nimport { BookmarkButton } from \"components/BookmarkButton/BookmarkButton\";\nimport { Container } from \"components/Container/Container\";\nimport { getComments } from \"utils/firebase\";\nimport { Comments } from \"components/Comments/Comments\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments.val()).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const {isLoggedIn} = useContext(authContext)\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState()\n    const [stores, setStores] = useState()\n    const [year, setYear] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const { gameSlug } = useParams()\n\n    window.scroll({\n        top: 0,\n    });\n\n    useEffect(() => {\n        Promise.all([getGameById(gameSlug), getScreenshots(gameSlug), getComments(gameSlug)]).then(res => {\n            const [game, screenshots, comments] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n            \n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released.slice(0, 4))\n            setScreenshots(results)\n            setComments(formatComments(comments))\n\n            setIsLoading(false)\n        }).catch(error => {\n            console.log(error)\n            setIsLoading(false)\n        })\n        \n    }, [gameSlug])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> :\n            <>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year}</Year> }\n                                { isLoggedIn && <BookmarkButton gameData={gameData}/> }\n                            </Meta>\n                            {description && <Overview>{description}</Overview>}\n                        </div>\n                        {stores && <StoresList stores={stores}/>}\n                    </Info>\n                 </div>\n                    {screenshots &&\n                        <Screenshots>\n                            {screenshots.map(({image}) => \n                                <ScreenshotWrapper>\n                                    <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                                </ScreenshotWrapper>)}\n                        </Screenshots>}\n                    <Comments setComments={setComments} gameSlug={gameSlug} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    max-height: 200px;\n    overflow-y: scroll\n`\n\nconst Screenshots = styled.ul`\n    width: 100%;\n    height: auto;\n    margin-bottom: 60px;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    \n    backdrop-filter: blur(10px);\n`\n\nconst Screenshot = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n`\n\nconst ScreenshotWrapper = styled.li`\n    width: 100%;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n\n    &:hover {\n        transform: scale(1.2);\n        clip-path:none;\n        z-index: 1111\n    }\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 10px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 20px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 30px)/4);\n    }\n`\n\nexport default GameDescription"],"names":["Loader","_ref","className","color","_jsx","Wrapper","render","children","FidgetSpinner","backgroundColor","ballColors","styled","_templateObject","_taggedTemplateLiteral","props","css","_templateObject2","_templateObject3","StoresList","stores","List","map","_ref2","store","name","domain","console","log","_jsxs","href","concat","FaSteam","FaPlaystation","FaAppStore","SiGogdotcom","FaXbox","RiXboxLine","SiNintendo","SiEpicgames","FaGooglePlay","FaItchIo","BookmarkButton","gameData","userId","useContext","authContext","_useState","useState","_useState2","_slicedToArray","isFavourite","setIsFavourite","slug","useEffect","getFavouriteGames","then","res","val","Object","keys","some","el","Button","type","onClick","removeGameFromFavourite","addGameToFavourite","prevState","BsFillBookmarkFill","size","BsBookmark","Comment","text","authorAvatar","setAuthorAvatar","_useState3","_useState4","authorUsername","setAuthorUsername","getUserInfo","_res$val","username","photoUrl","CommentWrapper","AuthorInfo","AvatarWrapper","AuthorAvatar","src","alt","AuthorName","CommentText","_templateObject4","_templateObject5","_templateObject6","getAndFormatAuthorId","comment","split","getCommentText","values","Comments","comments","setComments","gameSlug","Section","Form","onSubmit","e","preventDefault","commentInput","target","elements","commentText","value","leaveComment","prev","_toConsumableArray","_defineProperty","onFormSubmit","Input","required","placeholder","SubmitButton","length","CommentsList","Page","Info","Meta","Title","Year","Overview","Screenshots","_templateObject7","Screenshot","_templateObject8","ScreenshotWrapper","_templateObject9","isLoggedIn","title","setTitle","screenshots","setScreenshots","_useState5","_useState6","description","setDescription","_useState7","_useState8","setStores","_useState9","_useState10","year","setYear","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","setGameData","_useState15","_useState16","useParams","window","scroll","top","Promise","all","getGameById","getScreenshots","getComments","_res","game","data","description_raw","released","results","slice","entries","formatComments","catch","error","Container","_Fragment","style","display","image","loading"],"sourceRoot":""}