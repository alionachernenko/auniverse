{"version":3,"file":"static/js/810.d71c51c1.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/Loader/Loader.jsx","components/Slider/Slider.jsx","components/NewGamesSection/NewGames.jsx"],"sourcesContent":["// import './GameCard.scss'\nimport styled, {css} from 'styled-components'\n\nimport { Link } from \"react-router-dom\"\nimport placeholderImage from 'assets/images/placeholder.png'\n\nexport const GameCard = ({ data, className }) => {\n\n    const {name, released, genres, background_image, slug, rating } = data\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <Card className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster' alt={`${name} poster`} width={500}\n                height='auto' /> : <img src={placeholderImage}   alt='No poster here' className='poster'/>}\n                <div className='description'>\n                    <Title>\n                        {name}\n                    </Title>\n                    {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                    {genres && <Genres className='genres'>\n                        {genres.map((({id, name}) => <li className=\"genres_item\" key={id}>{name}</li>))}\n                    </Genres>}\n                </div>\n             <Rating className='rating'>{rating}</Rating>\n        </Card>\n    </Link>\n    )\n}\n\nconst Card = styled.div`\n    ${({className}) => {\n    switch (className) {\n        case 'gamecard_catalog':\n            return css`\n                height: 500px;\n                color: white;\n                background-color: #00021A;\n                overflow: hidden;\n                position: relative;\n                clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 67%, 0 11%);\n                transform: scale(1);\n                transition: 250ms transform ease;\n\n                @media screen and (max-width: 767px) {\n                    height: auto;\n                }\n\n                & .poster{\n                    object-fit: cover;\n                    height: 70%;\n                    transition: 500ms all ease;\n                    width: 100%;\n                }\n\n                &:hover{\n                    transform: scale(1.05);\n                }\n\n                & .description {\n                    padding: 15px;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 5px;\n                }\n\n               \n            `\n        case 'gamecard_slider':\n            return css`\n                height: 350px;\n                overflow: hidden;\n                position: relative;\n                max-width: 500px;\n                clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 70%, 0 11%);\n\n                & .description {\n                    position: absolute;\n                    width: 50%;\n                    right: 100%;\n                    transition: 250ms right ease;\n                    top: 0;\n                    height: 100%;\n                    background-color: #00021A;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    gap: 15px;\n                    box-sizing: border-box;\n                    padding: 0 10px;\n\n                    \n\n                    & h1, p{\n                        color: white;\n                    }\n\n                    & ul{\n                        flex-wrap: wrap;\n                    }\n                }\n\n                & .rating, & .release_year {\n                    display: none;\n                }\n\n                & .poster {\n                        object-fit: cover;\n                        transition: 500ms all ease;\n                        width: 100%;\n                        height: 100%;\n                    }\n\n                &:hover .poster {\n                    height: 100%;\n                    filter: blur(5px);\n                }\n\n                &:hover .description {\n                    right: 50%;\n                }\n            `\n\n        default: return css``\n        }\n    }}\n`\n\nconst Genres = styled.div`\n    display: flex;\n    gap: 5px;\n    color: #f0f0f0;\n    font-size: 15;\n    letter-spacing: 0.05em;\n    list-style: none;\n    flex-wrap: wrap;\n\n    & li{\n        padding: 0 5px 0 0;\n    }\n\n    & li:not(:last-child){\n    border-right: 1px solid orange;\n}\n`\n\nconst Title = styled.p`\n     color: white;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 25px;\n    letter-spacing: 0.05em;\n    white-space: normal;\n    word-break: break-word;\n`\n\nconst Rating = styled.p`\n        position: absolute;\n        top: 0;\n        right: 40px;\n        color: white;\n        background-color: #050B2B;\n        padding: 10px 10px 5px 10px;\n        font-size: 20px;\n        font-weight: 700;\n        display: flex;\n        align-items: center;\n        transition: 400ms top ease;\n`","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 60px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\n\n//=============STYLES===============//\n\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","/* eslint-disable array-callback-return */\nimport { Swiper } from \"swiper/react\"\nimport 'swiper/css';\nimport 'swiper/css/pagination'\nimport { Autoplay, Pagination } from \"swiper\";\n\n\nexport const Slider = ({children}) => {\n    return (\n        <Swiper style={{marginLeft: 0,\n                        paddingLeft: 60}}\n            spaceBetween={30}\n            speed={3000}\n            slidesPerView={'auto'}\n            loop={true}\n            autoplay={{\n                delay: 1000,\n                pauseOnMouseEnter: true,\n                disableOnInteraction: false\n            }}\n            modules={[Autoplay, Pagination]}\n        > \n            {children}\n        </Swiper>\n    )\n}\n\n","import styled from \"styled-components\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { SwiperSlide } from \"swiper/react\"\nimport { GameCard } from \"components/GameCard/GameCard\"\nimport { Slider } from \"../../components/Slider/Slider\"\nimport { useState, useEffect, useContext } from \"react\";\nimport { getNewGames } from \"services/games-api\";\nimport {breakpointContext} from '../../context/context'\nimport { GameList } from \"components/GameList/GameList\";\n\nconst NewGames = () => {\n    const {breakpoint} = useContext(breakpointContext)\n    const [games, setGames] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n\n    console.log(breakpoint)\n\n    useEffect(() => {\n            getNewGames(1).then(({data}) => {\n            const { results } = data\n            console.log(results)\n            setGames(results.filter(game => game.slug !== 'atomic-heart'))\n\n            setIsLoading(false)\n        }).catch(error => {\n\n            console.log(error)\n            setIsError(true)\n            setIsLoading(false)\n        }\n        )\n    }, [breakpoint])\n\n    return (\n\n\n        <Section>\n        <div>\n                    <Span>New 2023</Span>\n                   <Div>\n                        <h2>What will you choose this time?</h2>\n                        {isLoading ? <Loader className={'loader-homepage'} color={'darkblue'} /> : ( isError ? \n                        <><p>Something went wrong</p></> : \n                        breakpoint === 'desktop' ? <Slider>\n                            {games.map((game => \n                                     \n                                         <SwiperSlide style={{\n                                            width: 'fit-content',\n                                            margin: 0,\n                                            }\n                                         } key={game.id}><GameCard data={game} width={255} className={'gamecard_slider'}/></SwiperSlide>\n                                  \n                          ))}\n                        </Slider> : <GameList games={games}/>\n                        )}\n                    </Div>\n                </div>\n            </Section>\n    )\n   \n    }\n\n\n    const Section = styled.section`\n    gap: 30px;\n    padding-top: 20px;\n    overflow: hidden;\n    background-color: #ffffff;\n\n    @media screen and (min-width: 1200px) {\n        display: flex;\n        padding-top: 0\n    }\n\n    & h2{\n        margin-bottom: 60px;\n        font-size: 40px;\n        \n   \n        line-height: 34px;\n        margin-left: 60px;\n\n        @media screen and (max-width: 1199px){\n            display: none\n        }\n    }\n    \n    & span {\n        writing-mode: vertical-lr;\n        background-color: blue;\n        width: 90px;\n    }\n\n    & :first-child{\n        @media screen and (min-width: 1200px) {\n            display: flex\n        }\n    }\n`\n\n\nconst Div = styled.div`\npadding: 40px 0;\n\n    @media screen and (min-width: 1200px) {\n        padding: 100px 0;\n    }\n`\n\nconst Span = styled.div`\n    background-color: #00021A;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #ffffff;\n    font-weight: 900;\n    font-size: 50px;\n    line-height: 91px;\n    text-align: center;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n\n    @media screen and (min-width: 420px) {\n        font-size: 72px\n    }\n\n    @media screen and (min-width: 1200px) {\n        writing-mode: vertical-rl;\n\n    }\n`\n\nexport default NewGames"],"names":["GameCard","_ref","data","className","name","released","genres","background_image","slug","rating","_jsx","Link","to","concat","children","_jsxs","Card","loading","src","alt","width","height","placeholderImage","Title","slice","Genres","map","_ref2","id","Rating","styled","_templateObject","_taggedTemplateLiteral","_ref3","css","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","GameList","games","Container","List","game","Item","Loader","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","Slider","Swiper","style","marginLeft","paddingLeft","spaceBetween","speed","slidesPerView","loop","autoplay","delay","pauseOnMouseEnter","disableOnInteraction","modules","Autoplay","Pagination","Section","Div","Span","breakpoint","useContext","breakpointContext","_useState","useState","_useState2","_slicedToArray","setGames","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","console","log","useEffect","getNewGames","then","results","filter","catch","error","_Fragment","SwiperSlide","margin"],"sourceRoot":""}