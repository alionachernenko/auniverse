{"version":3,"file":"static/js/463.b5c1e1c1.chunk.js","mappings":"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","sources":["components/Bookmarks/Bookmarks.jsx","components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/ProfileCard/ProfileCard.jsx","components/FriendCard/FriendCard.jsx","components/Friends/Friends.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nimport { memo } from \"react\"\n\nexport const Bookmarks = memo(({ bookmarks }) => {\n\n    return (\n        <Block>\n            {bookmarks.length === 0 ? <p>No bookmarks</p> : \n            <List>\n                {bookmarks.map(({ background_image, name, slug, id }) =>\n                    <Bookmark key={id}>\n                        <Poster src={`${background_image}`} alt={`${name} poster`}/>\n                        <Title to={`/catalog/${slug}`}>{name}</Title>\n                    </Bookmark>)\n                }\n            </List>}\n        </Block>\n    )\n})\n\nconst Block = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    @media screen and (min-width: 1200px){\n        align-items: flex-start;\n    }\n`\n\nconst List = styled.ul`\n    height: 100%;\n    padding: 10px;\n    width: 100%;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 10px;\n\n    @media screen and (min-width: 1200px) {\n        width: 470px;\n    }\n`\nconst Bookmark = styled.li`\n    width: 100%;\n    padding: 10px;\n    border-radius: 20px;\n\n    display: flex;\n    align-items: center;\n\n    font-weight: 900;\n\n    background-color: white;\n`\n\nconst Poster = styled.img`\n    width: 90px;\n    height: 67px;\n    border-radius: 10px;\n    margin-right: 10px;\n\n    object-fit: cover;\n`\n\nconst Title = styled(Link)`\n    color: black;\n`","import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n    color: white;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { useContext, useState } from \"react\"\nimport { useLocation, useParams } from \"react-router-dom\"\nimport { authContext } from '../../context/context'\nimport { addAvatar } from \"utils/firebase/storage\"\nimport { addUserToFriendsInvitationsList, removeFriend, changeUsername} from \"utils/firebase/database\"\nimport { Oval } from \"react-loader-spinner\"\nimport { RxUpload } from \"react-icons/rx\"\nimport { BsPencilSquare } from 'react-icons/bs'\nimport { FiUserPlus, FiUserX } from 'react-icons/fi'\nimport { memo } from \"react\"\nimport { MdDone, MdClose } from 'react-icons/md'\n\nimport styled from \"styled-components\"\n\nexport const ProfileCard = memo(({\n    avatar,\n    username,\n    isAvatarLoading,\n    setPhotoPath,\n    setIsAvatarLoading,\n    setUsername,\n    isFriendInvited,\n    isFriend,\n    setIsFriendInvited,\n    setIsFriend,\n    isPending\n}) => {\n    \n    const { userId } = useContext(authContext)\n    const { id } = useParams()\n    const location = useLocation()\n\n    const [showChangeUsernameForm, setShowChangeUsernameForm] = useState(false)\n\n    const deleteFriend = () => {\n        removeFriend(id, userId)\n        setIsFriend(false)\n    }\n\n    const sendInvitation = () => {\n        addUserToFriendsInvitationsList(id, userId)\n        setIsFriendInvited(true)\n    }\n\n    const setFriendshipOption = () => {\n        if (!isPending && !isFriendInvited && !isFriend) {\n            return <ChangeFriendStatusButton type='button' onClick={sendInvitation}>\n                            <FiUserPlus size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </ChangeFriendStatusButton>\n        }\n        else if (!isPending && isFriendInvited) {\n            return <FriendStatus>You sent an invitation</FriendStatus>\n        }\n        else if(!isPending){\n            return <ChangeFriendStatusButton onClick={deleteFriend}>\n                        <FiUserX size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </ChangeFriendStatusButton>\n        }\n    }\n    \n    const onUsernameFormSubmit = (e) => {\n        e.preventDefault()\n\n        const username = e.target.elements.username.value\n\n        changeUsername(userId, username)\n        setUsername(username)\n        setShowChangeUsernameForm(false)\n    }\n\n    const uploadAvatar = (e) => {\n        const file = e.target.files[0]\n\n        if (file) {\n            setIsAvatarLoading(true)\n            addAvatar(file, userId, setPhotoPath, setIsAvatarLoading)\n        }\n    }\n\n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname.includes('profile') ?\n                    <>\n                        <UploadInput id='upload_file' accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={(e) => uploadAvatar(e)} />\n                        <UploadButton htmlFor=\"upload_file\">\n                            <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                        </UploadButton>\n                    </>\n                    : setFriendshipOption()\n                }\n                \n                {isAvatarLoading ?\n                    <Spinner>\n                        <Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'} />\n                    </Spinner> : \n                    <Avatar src={`${avatar}`} alt={`${username}'s avatar`} />\n                }\n            </AvatarWrapper>\n            <UsernameWrapper>\n                {!showChangeUsernameForm && <Username>\n                    {username}\n                </Username>}\n                {location.pathname.includes('profile') && !showChangeUsernameForm &&\n                    <ChangeUsernameButton onClick={() => {\n                        setShowChangeUsernameForm(true)\n                    }}>\n                    <BsPencilSquare color=\"white\" size={20}/>\n                    </ChangeUsernameButton>\n                }\n            </UsernameWrapper>\n            {showChangeUsernameForm &&\n                <ChangeUsernameFormWrapper>\n                    <ChangeUsernameForm onSubmit={(e) => onUsernameFormSubmit(e)}>\n                        <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                        <button type=\"submit\"><MdDone size={15}/></button>\n                    </ChangeUsernameForm>\n                    <CloseChangeUsernameFormButton type=\"button\" onClick={() => setShowChangeUsernameForm(false)}><MdClose size={15} /></CloseChangeUsernameFormButton>\n                </ChangeUsernameFormWrapper>\n            }\n        </Info>\n    )\n})\n\nconst ChangeUsernameFormWrapper = styled.div`\n    display: flex;\n    gap: 5px\n`\n\nconst CloseChangeUsernameFormButton = styled.button`\n    height: 30px;\n    width: 30px;\n    border-radius: 15px;\n    border: 1px solid red;\n        \nbackground-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n`\n\nconst Info = styled.div`\n    margin-bottom: 20px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    gap: 10px;\n\n    @media screen and (min-width: 1200px) {\n        margin-left: auto;\n        margin-right: auto\n    }\n    \n`\n\nconst Username = styled.h1`\n    text-align: center\n`\nconst Spinner = styled.div`\n    width: 90%;\n    height: 90%;\n    text-align: center;\n    \n`\nconst AvatarWrapper = styled.div`\n    height: 200px;\n    width: 200px;\n    border-radius: 100px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n\n    overflow: hidden;\n    \n    background-color: transparent;\n\n    &:hover button{\n        opacity: 1\n    }\n\n`\nconst UsernameWrapper = styled.div`\n    display: flex; \n    gap: 5px;\n    align-items: baseline; \n    justify-content: center; \n    flex-wrap: wrap;\n`\nconst FriendStatus = styled.p`\n    position: absolute;\n    z-index: 1111;\n    opacity: 0;\n    transition: 250ms opacity ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst Avatar = styled.img`\nwidth: 200px;\nheight: 100%;\nobject-fit: cover;\n\n\n`\n\nconst UploadButton = styled.label`\n    width: 30px;\n    height: 30px;\n    padding: 5px;\n    border: none;\n    border-radius: 100px;\n\n    position: absolute;\n    z-index: 1111;\n    opacity: 0;\n    \n    background-color: white;\n    cursor: pointer;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    position: absolute;\n    z-index: -1;\n    opacity: 0;\n    overflow: hidden;\n`\n\nconst ChangeUsernameButton = styled.button`\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: transparent;\n    height: 100%;\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`\n\nconst ChangeFriendStatusButton = styled.button`\n    width: 40px;\n    height: 40px;\n    padding: 5px;\n    border: none;\n\n    position: absolute;\n    z-index: 1111;\n    opacity: 0;\n    \n    background-color: white;\n   \n    border-radius: 100px;\n    cursor: pointer;\n    \n    transition: 250ms all ease;\n\n   \n`","import { useState, useEffect, useContext} from \"react\"\nimport { fetchUserInfo, removeFriendFromInvitationsList, acceptInvitationAndAddUser } from \"utils/firebase/database\"\nimport { authContext } from \"context/context\"\n\nimport { Link } from \"react-router-dom\"\nimport { FiPlusCircle } from 'react-icons/fi'\nimport { AiOutlineCloseCircle } from 'react-icons/ai'\n\nimport styled from \"styled-components\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\n\nexport const FriendCard = ({id, isPending, setInvitations, setFriends}) => {\n    const { userId } = useContext(authContext)\n\n    const [name, setName] = useState('')\n    const [avatar, setAvatar] = useState()\n\n      const onAcceptButtonClick = () => {\n          acceptInvitationAndAddUser(id, userId).then(() => {\n            removeFriendFromInvitationsList(id, userId)\n            setInvitations(prev => prev.filter(friend => friend !== id))\n            setFriends(prev => [...prev, id])\n          })\n      }\n    \n    const onDeclineButtonClick = () => {\n        removeFriendFromInvitationsList(id, userId)\n        setInvitations(prev => prev.filter(friend => friend !== id))\n    }\n\n    useEffect(() => {\n        fetchUserInfo(id).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setName(username)\n            if(res.val().photoUrl) {setAvatar(photoUrl)}\n            else {setAvatar(avatarPlaceholder)}\n        }).catch(error => console.log(error))\n    }, [id])\n\n    return (\n        <li key={id} style={{position: 'relative'}}>     \n            <Card to={`/users/${id}/bookmarks`}>\n                <Avatar width={200} src={`${avatar}`} alt={`${name}'s avatar`}/>\n\n            <Username>{name}</Username></Card>\n            {isPending &&\n                <ChangeInviteStatusButtons><AcceptButton onClick={onAcceptButtonClick}>\n                    <FiPlusCircle size='100%' /></AcceptButton>\n                    <DeclineButton onClick={onDeclineButtonClick}>\n                        <AiOutlineCloseCircle size='100%' />\n                    </DeclineButton>\n                </ChangeInviteStatusButtons>}\n                    \n        </li>\n    )\n}\n\nconst ChangeInviteStatusButtons = styled.div`\n    display: flex;\n    gap: 5px;\n    position: absolute;\n    top: 50%;\n    right: 50%;\n    transform: translate(50%, -50%);\n    height: auto;\n    width: auto;\n       @media screen and (min-width: 1200px) {\n        top: 50%;\n        right: 10px;\n        transform: translateY(-50%);\n    }\n`\n\n\nconst Card = styled(Link)`\n    \n    padding: 10px;\n    border-radius: 20px;\n    width: fit-content;\n    background: transparent;\n\n    display: flex;\n    align-items: center;\n\n    position: relative;\n\n    font-weight: 900;\n\n    \n\n    @media screen and (min-width: 1200px) {\n        width: 470px;\n        background-color: white;\n    }\n`\nconst Avatar = styled.img`\n    width: 90px;\n    height: 90px;\n    border-radius: 45px;\n    \n\n    object-fit: cover;\n\n\n     @media screen and (min-width: 1200px) {\n        margin-right: 10px;\n    }\n    \n`\n\nconst Username = styled.p`\n    color: black;\n    \n    font-size: 20px;\n\n    @media screen and (max-width: 1199px) {\n        display: none\n    }\n`\n\nconst AcceptButton = styled.button`\n    width: 30px;\n    height: 30px;\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 0;\n    border: none;\n    background-color: green;\n    border-radius: 100px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    color: white;\n\n \n`\n\n\nconst DeclineButton = styled.button`\n    width: 30px;\n    height: 30px;\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 0;\n    border: none;\n    background-color: red;\n    border-radius: 100px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    color: white;\n`","import styled from \"styled-components\"\nimport { FriendCard } from \"components/FriendCard/FriendCard\"\nimport {memo} from 'react'\n\nexport const Friends = memo(({friends, setFriends, invitations, setInvitations}) => {\n    return ( \n        <Block>\n            {invitations.length !== 0 &&\n                    <InvitationsList>\n                        {invitations.map(friend =>\n                            <FriendCard id={friend} key={friend} isPending={true} setInvitations={setInvitations} setFriends={setFriends} />)}\n                </InvitationsList>\n            }\n            {friends.length === 0? <p style={{textAlign: 'left'}}>No friends</p> : <FriendsList>\n                {friends.map(friend => <FriendCard id={friend} key={friend} isPending={false} />)}\n            </FriendsList>}\n            \n        </Block>\n    )\n})\n\nconst Block = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    flex-wrap: wrap;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: column;\n    }\n`\n\nconst InvitationsList = styled.ul`\n    margin-right: auto;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 10px;\n`\n\nconst FriendsList = styled.ul`\n    margin-right: auto;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    padding: 10px;\n\n    @media screen and (min-width: 1200px){\n        flex-wrap: nowrap;\n        flex-direction: column;\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport { NavLink, useNavigate, useRoutes } from \"react-router-dom\"\n\nimport { fetchBookmarks, fetchUserInfo, fetchFriendsList, fetchFriendsInvitationsList} from \"utils/firebase/database\"\nimport { userSignOut } from \"utils/firebase/users\"\nimport { Loader } from 'components/Loader/Loader'\nimport { ProfileCard } from 'components/ProfileCard/ProfileCard'\nimport { ImExit } from 'react-icons/im'\n\nimport { authContext } from \"context/context\"\n\nimport { Container } from \"components/Container/Container\"\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\"\nimport { Friends } from \"components/Friends/Friends\"\nimport { Bookmarks } from \"components/Bookmarks/Bookmarks\"\n\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport styled from 'styled-components'\n\nconst AccountPage = () => {\n    const { userId, isLoggedIn, setUserId } = useContext(authContext)\n    \n    const [friends, setFriends] = useState([])\n    const [favouriteGames, setFavouriteGames] = useState([])\n    const [username, setUsername] = useState('')\n    const [invitations, setInvitations] = useState([])\n    const [photoPath, setPhotoPath] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [isAvatarLoading, setIsAvatarLoading] = useState(false)\n    const [isError, setIsError] = useState(false)\n\n    const navigate = useNavigate()\n\n    const routes = useRoutes([\n        {\n            path: '/friends',\n            element: <Friends\n                navigate={navigate}\n                friends={friends}\n                setFriends={setFriends}\n                invitations={invitations}\n                setInvitations={setInvitations}\n            />\n                \n        },\n        {\n            path: '/bookmarks',\n            element: <Bookmarks navigate={navigate} bookmarks={favouriteGames} />\n        }\n    ])\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/login/login-page')\n            return\n        }\n\n        Promise.all([fetchUserInfo(userId), fetchBookmarks(userId), fetchFriendsList(userId), fetchFriendsInvitationsList(userId)])\n            .then(res => {\n                const [snapshot, games, friends, invitations] = res\n            if (snapshot.exists()) {\n                const {username, photoUrl} = snapshot.val()\n                setUsername(username)\n                if(photoUrl) {\n                    setPhotoPath(photoUrl)\n                }\n                else {\n                    setPhotoPath(avatarPlaceholder)\n                }\n            } else {\n                setUsername('User')\n            }\n\n                if (games.val()) setFavouriteGames([...Object.values(games.val())])\n                if (friends.val()) setFriends([...Object.values(friends.val())])\n                if (invitations.val()) setInvitations([...Object.values(invitations.val())])\n                \n                setIsLoading(false)\n               \n            }).catch((error) => {\n                console.error(error);\n                setIsError(true)\n                setIsLoading(false)\n            })\n    \n    }, [isLoggedIn, navigate, userId])\n\n    const logOut = () => {\n        userSignOut()\n            .then(() => {\n                navigate('/login/login-page')\n                setUserId('')\n            }\n        );\n    }\n    \n    return (\n        <>\n            <Page>\n                <Container>\n                    {isLoading ?\n                        <Loader className={'loader-profile'} color={'white'} /> : isError ? <ErrorComponent/> :\n                        <>\n                            <Page>\n                                <ProfileCard\n                                    setPhotoPath={setPhotoPath}\n                                    avatar={photoPath} username={username}\n                                    isAvatarLoading={isAvatarLoading}\n                                    setIsAvatarLoading={setIsAvatarLoading}\n                                    setUsername={setUsername}\n                                    setInvitations={setInvitations}\n                                    setFriends={setFriends}\n                                />\n                                <OutletsSection>\n                                    <Tabs>\n                                        <Tab to='bookmarks'>Bookmarks</Tab>\n                                        <Tab to='friends'>Friends {invitations.length > 0 &&\n                                            <InvitationsIndicator>{invitations.length}</InvitationsIndicator>}\n                                        </Tab>\n                                    </Tabs>\n                        \n                                    {routes}\n                                </OutletsSection>\n                                <LogOut type=\"button\" onClick={logOut}><ImExit/></LogOut>\n                            </Page>\n                        </>}\n                </Container>\n            </Page>\n        </>\n    )\n}\n\nconst InvitationsIndicator = styled.span`\n    width: 15px;\n    height: 15px;\n    border-radius: 8px;\n\n    position: absolute;\n    top: 0;\n    right: -15px;\n\n    font-size: 14px;\n    text-align: center;\n    vertical-align: center;\n\n    background-color: green;\n    \n`\n\nconst Page = styled.div`\n    width: 100%;\n    min-height: calc(100vh - 61px);\n    padding: 20px;\n    box-sizing: border-box;\n    \n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    color: white;\n    \n    background-color: #00021A;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n        align-items: flex-start;\n    }\n`\n\nconst OutletsSection = styled.div`\n    width: 100%;\n\n    @media screen and (min-width: 1200px) {\n        margin-left: auto;\n    }\n\n     @media screen and (min-width: 768px) {\n        width: 50%;\n    }\n`\n\nconst LogOut = styled.button`\n    position: absolute;\n    top: 0;\n    right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    color: white;\n\n        font-family: 'Nunito', sans-serif;\n        width: fit-content;\n        box-sizing: border-box;\n        padding: 10px;\n        background-color: #080D2B;\n        font-size: 20px;\n        background-color: orange;\n        box-shadow: red 2px 3px;\n        transition: 100ms all linear;\n\n        &:hover {\n            box-shadow: red 4px 5px;\n            transform: scale(1.05);\n            background-color: white;\n            color: orange\n        }\n\n        &::before {\n            content: '';\n            width: 20px;\n            height: 20px;\n\n            position: absolute;\n            top: 0px;\n            right: 0px;\n            \n            background-color: transparent;\n            border-top: 2px solid orange;\n            border-right: 2px solid orange;\n            \n            transition: 100ms all linear;\n        }\n\n        &::after{\n            content: '';\n            height: 20px;\n            width: 20px;\n            position: absolute;\n            bottom: 0px;\n            left: 0px;\n\n            background-color: transparent;\n            border-bottom: 2px solid orange;\n            border-left: 2px solid orange;\n        \n            transition: 100ms all linear;\n        }\n\n        &:hover::after{\n            bottom: -15px;\n            left: -13px;\n        }\n\n        &:hover::before {\n            top: -13px;\n            right: -15px;\n        }\n`\n\nconst Tabs = styled.div`\n    margin-bottom: 20px;\n    margin-left: auto;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 0 40px;\n    \n`\n\n\nconst Tab = styled(NavLink)`\n    display: block;\n    padding: 10px 0;\n    border: none;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 20px;\n    font-weight: 500;\n    \n    \n    position: relative;\n    background-color: transparent;\n    cursor: pointer;\n    color: white;\n\n    &.active::after{\n        content: '';\n        display: block;\n        height: 3px;\n        width: 100%;\n        border-radius: 4px;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        \n        background-color: #FF6600;\n    }\n`\nexport default AccountPage"],"names":["Bookmarks","memo","_ref","bookmarks","_jsx","Block","children","length","List","map","_ref2","background_image","name","slug","id","_jsxs","Bookmark","Poster","src","concat","alt","Title","to","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","Link","_templateObject5","ErrorComponent","Message","Image","mario","Loader","className","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","isFriendInvited","isFriend","setIsFriendInvited","setIsFriend","isPending","userId","useContext","authContext","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","showChangeUsernameForm","setShowChangeUsernameForm","deleteFriend","removeFriend","sendInvitation","addUserToFriendsInvitationsList","Info","AvatarWrapper","pathname","includes","_Fragment","UploadInput","accept","type","onChange","e","file","target","files","addAvatar","uploadAvatar","UploadButton","htmlFor","RxUpload","size","fill","stroke","FriendStatus","ChangeFriendStatusButton","onClick","FiUserX","FiUserPlus","Spinner","Oval","secondaryColor","width","height","Avatar","UsernameWrapper","Username","ChangeUsernameButton","BsPencilSquare","ChangeUsernameFormWrapper","ChangeUsernameForm","onSubmit","preventDefault","elements","value","changeUsername","onUsernameFormSubmit","minLength","required","autoComplete","MdDone","CloseChangeUsernameFormButton","MdClose","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","FriendCard","setInvitations","setFriends","setName","_useState3","_useState4","setAvatar","useEffect","fetchUserInfo","then","res","_res$val","val","photoUrl","avatarPlaceholder","catch","error","console","log","style","position","Card","ChangeInviteStatusButtons","AcceptButton","acceptInvitationAndAddUser","removeFriendFromInvitationsList","prev","filter","friend","_toConsumableArray","FiPlusCircle","DeclineButton","AiOutlineCloseCircle","Friends","friends","invitations","InvitationsList","textAlign","FriendsList","InvitationsIndicator","Page","OutletsSection","LogOut","Tabs","Tab","NavLink","_useContext","isLoggedIn","setUserId","favouriteGames","setFavouriteGames","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","photoPath","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","_useState15","_useState16","isError","setIsError","navigate","useNavigate","routes","useRoutes","path","element","Promise","all","fetchBookmarks","fetchFriendsList","fetchFriendsInvitationsList","_res","snapshot","games","exists","_snapshot$val","Object","values","Container","userSignOut","ImExit"],"sourceRoot":""}