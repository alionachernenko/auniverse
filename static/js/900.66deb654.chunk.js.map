{"version":3,"file":"static/js/900.66deb654.chunk.js","mappings":"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","sources":["pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { NavLink, useNavigate, useRoutes } from 'react-router-dom';\n\nimport {\n  fetchBookmarks,\n  fetchUserInfo,\n  fetchFriendsList,\n  fetchFriendsInvitationsList,\n  userSignOut,\n} from 'utils';\nimport {\n  Loader,\n  ProfileCard,\n  Container,\n  ErrorComponent,\n  Friends,\n  Bookmarks,\n} from 'components';\nimport { ImExit } from 'react-icons/im';\n\nimport { authContext } from 'context';\n\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png';\nimport styled from 'styled-components';\n\nconst AccountPage = () => {\n  const { userId, isLoggedIn, setUserId } = useContext(authContext);\n\n  const [friends, setFriends] = useState([]);\n  const [favouriteGames, setFavouriteGames] = useState([]);\n  const [username, setUsername] = useState('');\n  const [invitations, setInvitations] = useState([]);\n  const [photoPath, setPhotoPath] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAvatarLoading, setIsAvatarLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const routes = useRoutes([\n    {\n      path: '/friends',\n      element: (\n        <Friends\n          navigate={navigate}\n          friends={friends}\n          setFriends={setFriends}\n          invitations={invitations}\n          setInvitations={setInvitations}\n        />\n      ),\n    },\n    {\n      path: '/bookmarks',\n      element: <Bookmarks navigate={navigate} bookmarks={favouriteGames} />,\n    },\n  ]);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login/login-page');\n      return;\n    }\n\n    Promise.all([\n      fetchUserInfo(userId),\n      fetchBookmarks(userId),\n      fetchFriendsList(userId),\n      fetchFriendsInvitationsList(userId),\n    ])\n      .then(res => {\n        const [snapshot, games, friends, invitations] = res;\n        if (snapshot.exists()) {\n          const { username, photoUrl } = snapshot.val();\n          setUsername(username);\n          if (photoUrl) {\n            setPhotoPath(photoUrl);\n          } else {\n            setPhotoPath(avatarPlaceholder);\n          }\n        } else {\n          setUsername('User');\n        }\n\n        if (games.val()) setFavouriteGames([...Object.values(games.val())]);\n        if (friends.val()) setFriends([...Object.values(friends.val())]);\n        if (invitations.val())\n          setInvitations([...Object.values(invitations.val())]);\n\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error(error);\n        setIsError(true);\n        setIsLoading(false);\n      });\n  }, [isLoggedIn, navigate, userId]);\n\n  const logOut = () => {\n    userSignOut().then(() => {\n      navigate('/login/login-page');\n      setUserId('');\n    });\n  };\n\n  return (\n    <>\n      <Page style={{ marginTop: 61 }}>\n        <Container>\n          {isLoading ? (\n            <Loader className={'loader-profile'} color={'white'} />\n          ) : isError ? (\n            <ErrorComponent />\n          ) : (\n            <>\n              <Page>\n                <ProfileCard\n                  setPhotoPath={setPhotoPath}\n                  avatar={photoPath}\n                  username={username}\n                  isAvatarLoading={isAvatarLoading}\n                  setIsAvatarLoading={setIsAvatarLoading}\n                  setUsername={setUsername}\n                  setInvitations={setInvitations}\n                  setFriends={setFriends}\n                />\n                <OutletsSection>\n                  <Tabs>\n                    <Tab to=\"bookmarks\">Bookmarks</Tab>\n                    <Tab to=\"friends\">\n                      Friends{' '}\n                      {invitations.length > 0 && (\n                        <InvitationsIndicator>\n                          {invitations.length}\n                        </InvitationsIndicator>\n                      )}\n                    </Tab>\n                  </Tabs>\n\n                  {routes}\n                </OutletsSection>\n                <LogOut type=\"button\" onClick={logOut}>\n                  <ImExit />\n                </LogOut>\n              </Page>\n            </>\n          )}\n        </Container>\n      </Page>\n    </>\n  );\n};\n\nconst InvitationsIndicator = styled.span`\n  width: 15px;\n  height: 15px;\n  border-radius: 8px;\n  position: absolute;\n  top: 0;\n  right: -15px;\n\n  font-size: 14px;\n  text-align: center;\n  vertical-align: center;\n\n  background-color: green;\n`;\n\nconst Page = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 61px);\n  padding: 20px;\n  box-sizing: border-box;\n\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  color: white;\n\n  background-color: #00021a;\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n`;\n\nconst OutletsSection = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 1200px) {\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 50%;\n  }\n`;\n\nconst LogOut = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  color: white;\n\n  font-family: 'Nunito', sans-serif;\n  width: fit-content;\n  box-sizing: border-box;\n  padding: 10px;\n  background-color: #080d2b;\n  font-size: 20px;\n  background-color: orange;\n  box-shadow: red 2px 3px;\n  transition: 100ms all linear;\n\n  &:hover {\n    box-shadow: red 4px 5px;\n    transform: scale(1.05);\n    background-color: white;\n    color: orange;\n  }\n\n  &::before {\n    content: '';\n    width: 20px;\n    height: 20px;\n\n    position: absolute;\n    top: 0px;\n    right: 0px;\n\n    background-color: transparent;\n    border-top: 2px solid orange;\n    border-right: 2px solid orange;\n\n    transition: 100ms all linear;\n  }\n\n  &::after {\n    content: '';\n    height: 20px;\n    width: 20px;\n    position: absolute;\n    bottom: 0px;\n    left: 0px;\n\n    background-color: transparent;\n    border-bottom: 2px solid orange;\n    border-left: 2px solid orange;\n\n    transition: 100ms all linear;\n  }\n\n  &:hover::after {\n    bottom: -15px;\n    left: -13px;\n  }\n\n  &:hover::before {\n    top: -13px;\n    right: -15px;\n  }\n`;\n\nconst Tabs = styled.div`\n  margin-bottom: 20px;\n  margin-left: auto;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 0 40px;\n`;\n\nconst Tab = styled(NavLink)`\n  display: block;\n  padding: 10px 0;\n  border: none;\n\n  font-family: 'Nunito', sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n\n  position: relative;\n  background-color: transparent;\n  cursor: pointer;\n  color: white;\n\n  &.active::after {\n    content: '';\n    display: block;\n    height: 3px;\n    width: 100%;\n    border-radius: 4px;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    background-color: #ff6600;\n  }\n`;\nexport default AccountPage;\n"],"names":["InvitationsIndicator","styled","_templateObject","_taggedTemplateLiteral","Page","_templateObject2","OutletsSection","_templateObject3","LogOut","_templateObject4","Tabs","_templateObject5","Tab","NavLink","_templateObject6","_useContext","useContext","authContext","userId","isLoggedIn","setUserId","_useState","useState","_useState2","_slicedToArray","friends","setFriends","_useState3","_useState4","favouriteGames","setFavouriteGames","_useState5","_useState6","username","setUsername","_useState7","_useState8","invitations","setInvitations","_useState9","_useState10","photoPath","setPhotoPath","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","isAvatarLoading","setIsAvatarLoading","_useState15","_useState16","isError","setIsError","navigate","useNavigate","routes","useRoutes","path","element","_jsx","Friends","Bookmarks","bookmarks","useEffect","Promise","all","fetchUserInfo","fetchBookmarks","fetchFriendsList","fetchFriendsInvitationsList","then","res","_res","snapshot","games","exists","_snapshot$val","val","photoUrl","avatarPlaceholder","_toConsumableArray","Object","values","catch","error","console","_Fragment","children","style","marginTop","Container","Loader","className","color","ErrorComponent","_jsxs","ProfileCard","avatar","to","length","type","onClick","userSignOut","ImExit"],"sourceRoot":""}