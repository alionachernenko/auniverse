{"version":3,"file":"static/js/822.1a8ee1b3.chunk.js","mappings":"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","sources":["pages/Catalog/Catalog.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { fetchGameBySearchQuery, fetchNewGames } from \"utils\"\nimport { Pagination, SearchForm, Loader, GameList, ErrorComponent } from 'components'\nimport styled from \"styled-components\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { useMemo } from \"react\"\n\nconst Catalog = () => {\n    const [games, setGames] = useState([])\n    const [totalPages, setTotalPages] = useState(0)\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n    const [params, setParams] = useSearchParams()\n\n    const searchParams = useMemo(\n        () => Object.fromEntries([...params]),\n        [params]\n    );\n\n    const { ordering = null, query = null, genre = null, page = 1} = searchParams\n\n    useEffect(() => {\n        setIsLoading(true)\n        if (query || ordering || genre) {\n            fetchGameBySearchQuery(query, page, ordering, genre).then(({data}) => {\n                const { results, count } = data\n\n                setGames(results)\n                setTotalPages(count / 25)\n\n                setIsLoading(false)\n            }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n        }\n        else { //temporarily solution\n            fetchNewGames(page).then(({ data }) => {\n                const { results, count } = data\n            \n                setGames(results)\n                setTotalPages(count / 25)\n                setIsLoading(false)\n            }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n        }\n        \n    }, [query, ordering, genre, page, setParams, searchParams])\n\n    const handlePageChange = (page) => {\n        setParams({...searchParams, page: (page + 1)})\n        \n        setIsLoading(true)\n\n        window.scroll({\n            top: 0,\n        });\n    }\n    return (\n        <Page>\n            {isError ? <ErrorComponent/> :\n            <>\n                    <SearchForm className={'catalog'} />\n                    {isLoading ? <Loader className={'loader-catalog'} color={'white'} /> :\n                        (games.length !== 0 ?\n                            <>\n                                <GameList games={games} />\n                                <Pagination totalPages={totalPages <= 500 ? totalPages : 500} changePage={handlePageChange} page={page} />\n                            </> :\n                            <h1 style={{ color: 'white' }}>No matches</h1>\n                        )\n                    }\n                </>\n            }\n        </Page>\n    )\n}\n\n\nconst Page = styled.div`\n    padding: 10px 0 40px 0;\n    box-sizing: border-box;\n    min-height: calc(100vh - 61px);\n    position: relative;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px){\n        padding: 40px 0;\n    }\n`\n\nexport default Catalog"],"names":["Page","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","games","setGames","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isError","setIsError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchParams","useMemo","Object","fromEntries","_toConsumableArray","_searchParams$orderin","ordering","_searchParams$query","query","_searchParams$genre","genre","_searchParams$page","page","useEffect","fetchGameBySearchQuery","then","_ref","data","results","count","catch","error","console","log","fetchNewGames","_ref2","_jsx","children","ErrorComponent","_jsxs","_Fragment","SearchForm","className","Loader","color","length","GameList","Pagination","changePage","_objectSpread","window","scroll","top","style"],"sourceRoot":""}