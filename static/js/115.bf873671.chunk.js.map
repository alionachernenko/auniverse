{"version":3,"file":"static/js/115.bf873671.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.jsx","components/GameList/GameList.jsx","components/ProfileCard/ProfileCard.jsx","pages/UserProfile/UserProfile.jsx"],"sourcesContent":["// import './GameCard.scss'\nimport styled, {css} from 'styled-components'\n\nimport { Link } from \"react-router-dom\"\nimport placeholderImage from 'assets/images/placeholder.png'\n\nexport const GameCard = ({ data, className }) => {\n\n    const {name, released, genres, background_image, slug, rating } = data\n\n    return (\n        <Link to={`/catalog/${slug}`} aria-label={`Read more about ${name}`} className='readmore-btn'>\n        <Card className={`${className}`}>\n            {background_image ? <img loading='lazy' src={background_image} className='poster' alt={`${name} poster`} width={500}\n                height='auto' /> : <img src={placeholderImage}   alt='No poster here' className='poster'/>}\n                <div className='description'>\n                    <Title>\n                        {name}\n                    </Title>\n                    {released && <p className='release_year'>{released.slice(0, 4)}</p>}\n                    {genres && <Genres className='genres'>\n                        {genres.map((({id, name}) => <li className=\"genres_item\" key={id}>{name}</li>))}\n                    </Genres>}\n                </div>\n             <Rating className='rating'>{rating}</Rating>\n        </Card>\n    </Link>\n    )\n}\n\nconst Card = styled.div`\n    ${({className}) => {\n    switch (className) {\n        case 'gamecard_catalog':\n            return css`\n                height: 500px;\n                color: white;\n                background-color: #00021A;\n                overflow: hidden;\n                position: relative;\n                clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 67%, 0 11%);\n                transform: scale(1);\n                transition: 250ms transform ease;\n\n                @media screen and (max-width: 767px) {\n                    height: auto;\n                }\n\n                & .poster{\n                    object-fit: cover;\n                    height: 70%;\n                    transition: 500ms all ease;\n                    width: 100%;\n                }\n\n                &:hover{\n                    transform: scale(1.05);\n                }\n\n                & .description {\n                    padding: 15px;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 5px;\n                }\n\n               \n            `\n        case 'gamecard_slider':\n            return css`\n                height: 350px;\n                overflow: hidden;\n                position: relative;\n                max-width: 500px;\n                clip-path: polygon(11% 0, 70% 0%, 100% 0, 100% 88%, 88% 100%, 0 100%, 0 70%, 0 11%);\n\n                & .description {\n                    position: absolute;\n                    width: 50%;\n                    right: 100%;\n                    transition: 250ms right ease;\n                    top: 0;\n                    height: 100%;\n                    background-color: #00021A;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    gap: 15px;\n                    box-sizing: border-box;\n                    padding: 0 10px;\n\n                    \n\n                    & h1, p{\n                        color: white;\n                    }\n\n                    & ul{\n                        flex-wrap: wrap;\n                    }\n                }\n\n                & .rating, & .release_year {\n                    display: none;\n                }\n\n                & .poster {\n                        object-fit: cover;\n                        transition: 500ms all ease;\n                        width: 100%;\n                        height: 100%;\n                    }\n\n                &:hover .poster {\n                    height: 100%;\n                    filter: blur(5px);\n                }\n\n                &:hover .description {\n                    right: 50%;\n                }\n            `\n\n        default: return css``\n        }\n    }}\n`\n\nconst Genres = styled.div`\n    display: flex;\n    gap: 5px;\n    color: #f0f0f0;\n    font-size: 15;\n    letter-spacing: 0.05em;\n    list-style: none;\n    flex-wrap: wrap;\n\n    & li{\n        padding: 0 5px 0 0;\n    }\n\n    & li:not(:last-child){\n    border-right: 1px solid orange;\n}\n`\n\nconst Title = styled.p`\n     color: white;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 25px;\n    letter-spacing: 0.05em;\n    white-space: normal;\n    word-break: break-word;\n`\n\nconst Rating = styled.p`\n        position: absolute;\n        top: 0;\n        right: 40px;\n        color: white;\n        background-color: #050B2B;\n        padding: 10px 10px 5px 10px;\n        font-size: 20px;\n        font-weight: 700;\n        display: flex;\n        align-items: center;\n        transition: 400ms top ease;\n`","import { GameCard } from \"../GameCard/GameCard\"\nimport styled from \"styled-components\"\nimport { Container } from \"components/Container/Container\"\nexport const GameList = ({games}) => {\n    return (\n        <Container>\n            <List>\n                {\n                    games.map((game) => \n                    <Item key={game.id}>\n                        <GameCard data={game} width={500} className={'gamecard_catalog'}/>\n                    </Item>)\n                }\n            </List>\n        </Container>\n    )\n}\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0 20px;\n\n`\n\nconst Item = styled.li`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 30px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 60px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 90px)/4);\n    }\n`","import styled from \"styled-components\"\nimport { RxUpload } from \"react-icons/rx\"\nimport { Oval } from \"react-loader-spinner\"\nimport {authContext} from '../../context/context'\nimport { useContext, useState } from \"react\"\nimport { uploadBytes, getDownloadURL, ref as sRef } from 'firebase/storage'\nimport {set, ref} from 'firebase/database'\nimport firebaseApps from 'config/firebase'\nimport { useLocation } from \"react-router-dom\"\nimport {BsPenFill} from 'react-icons/bs'\nimport {MdDone} from 'react-icons/md'\nexport const ProfileCard = ({avatar, username, isAvatarLoading, setPhotoPath, setIsAvatarLoading, setUsername}) => {\n\n    const {userId} = useContext(authContext)\n    const location = useLocation()\n    const [showChangeUsernameFrom, setShowChangeUsernameForm] = useState(false)\n    \n    const uploadAvatar = (e) => {\n        e.preventDefault()\n        if(e.target.files[0]){\n            if(e.target.files[0].size > 2097152){\n                console.log('noooooJJFJFJJFJFJ')\n                setIsAvatarLoading(false)\n                return\n            }\n            setIsAvatarLoading(true)\n            uploadBytes(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`), e.target.files[0]).then(() => {\n            return getDownloadURL(sRef(firebaseApps.storage, `/userpics/${e.target.files[0].name}`))}).then((url) =>{\n                set(ref(firebaseApps.database, 'users/' + userId + '/photoUrl'), url)\n                        setPhotoPath(url)\n                        setIsAvatarLoading(false)\n                    })\n                }\n    }\n    return(\n        <Info>\n            <AvatarWrapper>\n                {location.pathname === '/profile' &&\n                    <><UploadInput id='upload_file'accept=\".png, .jpg, .jpeg, .gif\" type='file' name='photo' onChange={(e) => uploadAvatar(e)}/>\n                    <UploadButton htmlFor=\"upload_file\">\n                        <RxUpload size='100%' fill='orange' color=\"orange\" stroke=\"orange\"/>\n                    </UploadButton></>\n                        }\n                        {isAvatarLoading ? <Spinner><Oval color='#FF6600' secondaryColor='orange' width={'100%'} height={'100%'}/></Spinner> : \n                        <Avatar style={{objectFit: 'cover',width: 200, height: '100%'}} src={`${avatar}`} alt=\"\"/>}\n                    </AvatarWrapper>\n                    <div style={{display: 'flex', gap: 5, alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap'}}>\n                {!showChangeUsernameFrom && <h1>{username}</h1>}\n                {location.pathname === '/profile' && !showChangeUsernameFrom && <ChangeUsernameButton onClick={() => setShowChangeUsernameForm(true)}><BsPenFill/></ChangeUsernameButton>}</div>\n                {showChangeUsernameFrom && <ChangeUsernameForm action=\"\" onSubmit={\n                    (e) => {\n                        e.preventDefault()\n                        set(ref(firebaseApps.database, 'users/' + userId + '/username'), e.target.elements.username.value)\n                        setUsername(e.target.elements.username.value)\n                        setShowChangeUsernameForm(false)\n                    }\n                }>\n                    <input type='text' name=\"username\" minLength='3' required autoComplete='off'/>\n                    <button><MdDone size={15}/></button>\n                </ChangeUsernameForm>}\n            </Info>\n    )\n}\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 20px\n`\nconst Spinner = styled.div`\n    text-align: center;\n    width: 90%;\n    height: 90%\n`\nconst AvatarWrapper = styled.div`\n    border-radius: 100px;\n    height: 200px;\n    width: 200px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    background-color: transparent;\n\n`\n\nconst Avatar = styled.img`\ntransition: 250ms filter ease;\n\n    ${AvatarWrapper}:hover &{\n        filter: blur(3px)\n    }\n`\n\nconst UploadButton = styled.label`\n    border: none;\n    position: absolute;\n    opacity: 0;\n    width: 30px;\n    height: 30px;\n    background-color: white;\n    padding: 5px;\n    border-radius: 100px;\n    cursor: pointer;\n    z-index: 1111;\n    transition: 250ms all ease;\n\n    ${AvatarWrapper}:hover &{\n        opacity: 1\n    }\n`\n\nconst UploadInput = styled.input`\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n`\n\nconst ChangeUsernameButton = styled.button`\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center\n`\n\nconst ChangeUsernameForm = styled.form`\n    height: 30px;\n    display: flex;\n    & input{\n        height: 100%;\n        padding: 0 15px;\n        width: 200px;\n        border-radius: 15px;\n        background-color: white;\n        border: 1px solid orange;\n        margin-right: 5px\n    }\n\n    & button{\n        height: 100%;\n        width: 30px;\n        border-radius: 15px;\n        border: 1px solid green;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center\n    }\n`","import { useContext, useEffect, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { addUserToFriensInvitationsList, getUserInfo } from \"utils/firebase\"\nimport { GameList } from \"components/GameList/GameList\"\nimport {authContext} from '../../context/context'\nimport styled from \"styled-components\"\nimport { ProfileCard } from \"components/ProfileCard/ProfileCard\"\nimport avatarPlaceholder from '../../assets/images/avatar-placeholder.png'\nimport { Container } from \"components/Container/Container\"\n\nconst User = () => {\n    const {id} = useParams()\n    const [name, setName] = useState('')\n    const [photo, setPhoto] = useState('')\n    const [favouriteGames, setFavs] = useState([])\n    const {userId} = useContext(authContext)\n    const navigate = useNavigate()\n\n    if(userId === id) navigate('/profile')\n\n    useEffect(() => {\n        getUserInfo(id).then((res) => {\n            console.log(res.val())\n            const {username, favs, photoUrl} = res.val() \n            setName(username)\n            if(favs) setFavs(Object.values(favs))\n            if(photoUrl){ setPhoto(photoUrl)}\n            else(setPhoto(avatarPlaceholder))\n        })\n    }, [id])\n\n    return(\n        <Page>\n            <Container>\n                <ProfileCard avatar={photo} username={name} />\n                <h2>{name}'s bookmarks</h2>\n                <button type='button' onClick={() => addUserToFriensInvitationsList(id, userId)}>Add to friends</button>\n                {favouriteGames && <GameList games={favouriteGames}/>}\n            </Container>\n        </Page>\n    )\n}\n\nexport default User \n\n\nconst Page = styled.div`\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n    position: relative;\n    min-height: calc(100vh - 61px);\n    width: 100%;\n`\n"],"names":["GameCard","_ref","data","className","name","released","genres","background_image","slug","rating","_jsx","Link","to","concat","children","_jsxs","Card","loading","src","alt","width","height","placeholderImage","Title","slice","Genres","map","_ref2","id","Rating","styled","_templateObject","_taggedTemplateLiteral","_ref3","css","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","GameList","games","Container","List","game","Item","ProfileCard","avatar","username","isAvatarLoading","setPhotoPath","setIsAvatarLoading","setUsername","userId","useContext","authContext","location","useLocation","_useState","useState","_useState2","_slicedToArray","showChangeUsernameFrom","setShowChangeUsernameForm","Info","AvatarWrapper","pathname","_Fragment","UploadInput","accept","type","onChange","e","preventDefault","target","files","size","console","log","uploadBytes","sRef","firebaseApps","then","getDownloadURL","url","set","ref","uploadAvatar","UploadButton","htmlFor","RxUpload","fill","color","stroke","Spinner","Oval","secondaryColor","Avatar","style","objectFit","display","gap","alignItems","justifyContent","flexWrap","ChangeUsernameButton","onClick","BsPenFill","ChangeUsernameForm","action","onSubmit","elements","value","minLength","required","autoComplete","MdDone","_templateObject8","useParams","setName","_useState3","_useState4","photo","setPhoto","_useState5","_useState6","favouriteGames","setFavs","navigate","useNavigate","useEffect","getUserInfo","res","val","_res$val","favs","photoUrl","Object","values","avatarPlaceholder","Page","addUserToFriensInvitationsList"],"sourceRoot":""}