{"version":3,"file":"static/js/316.69003415.chunk.js","mappings":"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","sources":["components/ErrorComponent/ErrorComponent.jsx","components/Loader/Loader.jsx","components/StoresList/StoresList.jsx","components/BookmarkButton/BookmarkButton.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","pages/GameDescription/GameDescription.jsx"],"sourcesContent":["import mario from '../../assets/images/mario.png'\nimport styled from 'styled-components'\n\nexport const ErrorComponent = () => {\n    return (\n        <Block>\n            <Message>Something went wrong...</Message>\n            <Image src={mario} alt='Mario thinking what happend'/>\n        </Block>\n    )\n}\n\nconst Block = styled.div`\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        flex-direction: row;\n    }\n`\n\nconst Message = styled.p`\n    font-family: 'Nunito', sans-serif;\n    font-size: 40px;\n    max-width: 700px;\n    text-align: center;\n    color: white;\n`\n\nconst Image = styled.img`\n    width: 80vw;\n\n    @media screen and (min-width: 320px){\n        width: 200px\n    }\n\n    @media screen and (min-width: 768px){\n        width: 300px\n    }\n`","import { FidgetSpinner } from \"react-loader-spinner\";\nimport styled,  { css } from \"styled-components\";\n\nexport const Loader = ({className, color}) => {\n    return (\n        <Wrapper render={className}>\n            <FidgetSpinner backgroundColor={color} ballColors={['orange', 'darkblue', 'red']}/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    ${(props) => {\n        switch(props.render){\n            case 'loader-homepage': \n            return css`\n                margin-left: 60px;\n            `\n            default:\n                return css`\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translateX(-50%)\n            `\n        }\n    }}\n`\n\n","import { FaPlaystation, FaSteam, FaAppStore, FaXbox, FaGooglePlay, FaItchIo } from 'react-icons/fa'\nimport { SiGogdotcom, SiNintendo, SiEpicgames } from 'react-icons/si'\nimport {RiXboxLine} from 'react-icons/ri'\nimport styled from 'styled-components'\n\nexport const StoresList = ({ stores}) => {\n\n    return (\n        <List>\n            {stores.map(({store, id}) => {\n                const { name, domain } = store\n\n                return(<li key={id}><a href={`https://${domain}`}>\n                    {name === 'Steam' && <FaSteam />}\n                    {name === 'PlayStation Store' && <FaPlaystation />}\n                    {name === 'App Store' && <FaAppStore />}\n                    {name === 'GOG' && <SiGogdotcom />}\n                    {name === 'Xbox Store' && <FaXbox />}\n                    {name === 'Xbox 360 Store' && <RiXboxLine />}\n                    {name === 'Nintendo Store' && <SiNintendo />}\n                    {name === 'Epic Games' && <SiEpicgames />}\n                    {name === 'Google Play' && <FaGooglePlay />}\n                    {name === 'itch.io' && <FaItchIo />}\n                </a></li>)\n            })}\n        </List>\n    )\n    \n}\n\nconst List =  styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n     gap: 10px;\n     flex-wrap: wrap;\n   \n\n    @media screen and (max-width: 768px) {\n        flex-direction: row;\n        justify-content: center;\n        gap: 20px;\n    }\n    \n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`\n\n","import { useContext, useEffect, useState } from \"react\"\nimport { authContext } from '../../context/context'\nimport { removeGameFromFavourite, addGameToFavourite, getFavouriteGames } from \"utils/firebase\"\nimport { BsBookmark, BsFillBookmarkFill } from 'react-icons/bs'\n\nimport styled from \"styled-components\"\n\nexport const BookmarkButton = ({gameData}) => {\n    const { userId } = useContext(authContext)\n    \n    const [isFavourite, setIsFavourite] = useState()\n\n    const { slug } = gameData\n\n    const toggleIsFavourite = () => {\n        if (isFavourite) {\n            removeGameFromFavourite(userId, slug)\n        }\n        else if (!isFavourite) {\n            addGameToFavourite(userId, slug, gameData)\n        }\n        \n        setIsFavourite(prevState => !prevState)\n    }\n\n    useEffect(() => {\n        getFavouriteGames(userId).then(res => {\n            if(res.val()) setIsFavourite(Object.keys(res.val()).some(el => el === slug))\n        }).catch(error => console.log(error))\n    }, [userId, isFavourite, slug])\n\n        return (\n            <Button type=\"button\" onClick={toggleIsFavourite}>\n                Bookmark {isFavourite ? <BsFillBookmarkFill size='20px' /> : <BsBookmark size='20px' />}\n            </Button>\n        )\n}\n    \n\n\nconst Button = styled.button`\n    height: auto;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n\n    color: white;\n    background-color: rgba(84, 84, 84, 0.5);\n`","import { useEffect, useState } from \"react\"\nimport { getUserInfo } from \"utils/firebase\"\nimport styled from \"styled-components\"\n\nexport const Comment = ({ userId, text }) => {\n    \n    const [authorAvatar, setAuthorAvatar] = useState()\n    const [authorUsername, setAuthorUsername] = useState('')\n    \n    useEffect(() => {\n        getUserInfo(userId).then(res => {\n            const { username, photoUrl } = res.val()\n            \n            setAuthorUsername(username)\n            setAuthorAvatar(photoUrl)\n        }).catch(error => {\n            console.log(error)\n        }\n    )\n    }, [userId])\n\n    return (\n        <CommentWrapper>\n            <AuthorInfo>\n                <AvatarWrapper>\n                    {authorAvatar && <AuthorAvatar src={authorAvatar} alt={`${authorUsername}'s avatar`}></AuthorAvatar>}\n                </AvatarWrapper>\n                <AuthorName>{authorUsername}</AuthorName>\n            </AuthorInfo>\n            \n            <CommentText>{text}</CommentText>\n        </CommentWrapper>\n    )\n}\n\nconst CommentWrapper = styled.li`\n    width: 100%;\n    padding: 10px 20px;\n    box-sizing: border-box;\n    border: 2px solid #2F3149;\n    border-radius: 20px;\n    \n    @media screen and (min-width: 768px){\n        width: 542px;\n    }\n`\n\nconst AuthorName = styled.p`\n    color: white\n`\n\nconst CommentText = styled.p`\n    color: white\n`\n\nconst AuthorInfo = styled.div`\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n   \n`\n\nconst AvatarWrapper = styled.div`\n    height: 60px;\n    width: 60px;\n    overflow: hidden;\n    margin-right: 10px;\n    position: relative;\n    border-radius: 100px;    \n`\n\nconst AuthorAvatar = styled.img`\n    width: 60px;\n    height: 60px;\n    object-fit: cover;\n`","import { useContext } from \"react\"\nimport { authContext } from \"context/context\"\nimport { leaveComment } from \"utils/firebase\"\nimport { Comment } from \"components/Comment/Comment\"\nimport styled from \"styled-components\"\n\nconst getAndFormatAuthorId = (comment) => {\n    return Object.keys(comment)[0].split('-')[0]\n}\n\nconst getCommentText = (comment) => {\n    return Object.values(comment)[0]\n}\n\nexport const Comments = ({comments, setComments, gameSlug}) => {\n    const { userId, isLoggedIn} = useContext(authContext)\n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n\n        const commentInput = e.target.elements.comment\n        const commentText = commentInput.value\n\n        leaveComment(userId, gameSlug, commentText)\n        setComments(prev => [...prev, { [userId]: commentText }])\n\n        commentInput.value = ''\n    }\n\n    return (\n        <Section>\n            {!isLoggedIn ? <Message>You must be logged in to comment</Message> :\n                <Form onSubmit={(e) => onFormSubmit(e)}>\n                <Input required name='comment' placeholder=\"What do you think about this game?\" />\n                <SubmitButton type=\"submit\">Comment</SubmitButton>\n            </Form>\n            }\n                {comments.length !== 0 &&\n                    <CommentsList>\n                        {comments.map(comment => \n                            <Comment userId={getAndFormatAuthorId(comment)} key={Object.keys(comment)[0]} text={getCommentText(comment)} />\n                        )}\n                    </CommentsList>}\n        </Section>\n    )\n}\n\nconst Message = styled.p`\n    color: white;\n    font-size: 30px;\n    font-family: 'Nunito', sans-serif;\n    margin-bottom: 20px\n`\n\nconst Section = styled.div`\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    @media screen and (min-width: 1200px){\n        align-items: flex-start\n    }\n`\n\nconst Form = styled.form`\n    width: 100%;\n    margin-bottom: 20px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n\n    @media screen and (min-width: 768px) {\n        width: 542px;\n    }\n`\n\nconst CommentsList = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n\n    @media screen and (min-width: 1200px) {\n        align-items: flex-start\n    }\n`\n\nconst Input = styled.textarea`\n    width: 100%;\n    min-height: 80px !important;\n    resize: vertical;\n\n    padding: 10px 20px;\n    border-radius: 20px;\n    \n    font-family: 'Nunito', sans-serif;\n    font-size: 17px;\n    \n    @media screen and (min-width: 768px){\n        width: 500px;\n        min-height: 30px;\n    }\n\n    &::placeholder{\n        font-family: 'Nunito', sans-serif\n    }\n`\n\nconst SubmitButton = styled.button`\n    padding: 4px 10px;\n    border: none;\n    border-radius: 12px;\n\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n\n    font-family: 'Nunito', sans-serif;\n    font-size: 15px;\n\n    background-color: #00021A;\n    color: white;\n`","import { useContext, useEffect, useState } from \"react\"\nimport {  useParams } from \"react-router-dom\"\nimport { getGameById, getScreenshots} from \"../../services/games-api\"\nimport { StoresList } from \"components/StoresList/StoresList\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport {authContext} from '../../context/context'\n\nimport { BookmarkButton } from \"components/BookmarkButton/BookmarkButton\";\nimport { Container } from \"components/Container/Container\";\nimport { getComments } from \"utils/firebase\";\nimport { Comments } from \"components/Comments/Comments\";\nimport { ErrorComponent } from \"components/ErrorComponent/ErrorComponent\";\n\nimport styled from \"styled-components\";\n\nconst formatComments = (comments) => {\n    return Object.entries(comments).map(el => {\n        return {[el[0]] : el[1]}\n    })\n}\n\nconst GameDescription = () => {\n    const {isLoggedIn} = useContext(authContext)\n\n    const [title, setTitle] = useState('')\n    const [screenshots, setScreenshots] = useState([])\n    const [description, setDescription] = useState()\n    const [stores, setStores] = useState()\n    const [year, setYear] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [gameData, setGameData] = useState({})\n    const [comments, setComments] = useState([])\n    const [isError, setIsError] = useState(false)\n    const [showOverview, setShowOverview] = useState(false)\n    const { gameSlug } = useParams()\n\n    const toggleShowDescription = () => {\n        setShowOverview(prev => !prev)\n    }\n\n\n    window.scroll({\n        top: 0,\n    });\n\n    useEffect(() => {\n        Promise.all([getGameById(gameSlug), getScreenshots(gameSlug), getComments(gameSlug)]).then(res => {\n            const [game, screenshots, comments] = res\n            const {data} = game\n            const {name, description_raw, stores, released} = data\n            const { results } = screenshots.data\n\n            console.log(data)\n            setGameData(data)\n            setTitle(name)\n            setDescription(description_raw)\n            setStores(stores)\n            setYear(released.slice(0, 4))\n            setScreenshots(results)\n\n            if(comments.val()) setComments(formatComments(comments.val()))\n\n            setIsLoading(false)\n        }).catch(error => {\n                console.log(error)\n                setIsError(true)\n                setIsLoading(false)\n            })\n        \n    }, [gameSlug])\n\n    return (\n        <Page>\n            <Container>\n            {isLoading ? <Loader color={'white'} /> : isError ? <ErrorComponent/> :\n            <>\n                <div style={{display: 'flex'}}>\n                    <Info>\n                        <div>\n                            <Meta>\n                                <Title>{title}</Title>\n                                { year && <Year>{year}</Year> }\n                                { isLoggedIn && <BookmarkButton gameData={gameData}/> }\n                            </Meta>\n                                    {description && <Overview className={showOverview ? 'more' : 'less'}>{description}</Overview>}\n                                    <ToggleShowButton onClick={toggleShowDescription}>Show {showOverview ? 'less' : 'more'}</ToggleShowButton>\n                        </div>\n                                {stores && <StoresList stores={stores} data={gameData}/>}\n                    </Info>\n                 </div>\n                    {screenshots &&\n                        <Screenshots>\n                            {screenshots.map(({image, id}) => \n                                <ScreenshotWrapper key={id}>\n                                    <Screenshot src={image} alt='fdff' loading=\"lazy\"/>\n                                </ScreenshotWrapper>)}\n                        </Screenshots>}\n                    <Comments setComments={setComments} gameSlug={gameSlug} comments={comments} />\n            </>\n            }\n            </Container>\n        </Page> \n    )\n}\n\nconst Page = styled.div`\n    padding: 30px;\n\n    min-height: calc(100vh - 61px);\n    background-size: cover;\n    background-position: top;\n    display: flex;\n    flex-direction: column;\n    background-color: #00021A;  \n    \n    @media screen and (min-width: 768px) {\n        padding: 60px;\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 40px;\n    height: auto;\n    box-sizing: border-box;\n    margin-bottom: 60px;\n    width: 100%;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n        margin-bottom: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 1130px;\n    }\n`\n\nconst Meta = styled.div`\n    margin-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n\n\n    @media screen and (min-width: 1200px) {\n        margin-bottom: 20px;\n        flex-direction: row;\n        align-items: center;\n        gap: 20px;\n    }\n`\nconst Title = styled.h1`\n    padding: 10px 0;\n    border-bottom: 1px solid orange;\n\n    font-size: 35px;\n    font-weight: 700;\n    text-align: left;\n    color: white;\n    \n    @media screen and (min-width: 1200px) {\n        border-bottom: 0;\n        padding: 0;\n        font-size: 50px;\n        border-right: 1px solid orange;\n        padding-right: 20px\n    }\n`\nconst Year = styled.p`\n    color: white;\n    font-weight: 700;\n    text-align: center;\n    font-size: 30px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        margin-right: 0;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 50px;\n    }\n`\nconst Overview = styled.p`\n    color: white;\n    max-width: 80vw;\n    font-size: 20px;\n    line-height: 35px;\n    overflow: hidden;\n    transition: 250ms all ease;\n    margin-bottom: 20px;\n    text-overflow: ellipsis;\n\n    &.less{\n        height: 200px;\n    }\n\n    &.more{\n        height: auto\n    }\n`\n\nconst Screenshots = styled.ul`\n    width: 100%;\n    height: auto;\n    margin-bottom: 60px;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    \n    backdrop-filter: blur(10px);\n`\n\nconst Screenshot = styled.img`\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n`\n\nconst ScreenshotWrapper = styled.li`\n    width: 100%;\n    transition: 250ms all ease;\n    cursor: zoom-in;\n\n    clip-path: polygon(5% 0, 100% 0, 100% 10%, 100% 91%, 95% 100%, 0 100%, 0 71%, 0 10%);\n\n    &:hover {\n        transform: scale(1.2);\n        clip-path:none;\n        z-index: 1111\n    }\n\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 10px)/2);\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 20px)/3);\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: calc((100% - 30px)/4);\n    }\n`\nconst ToggleShowButton = styled.button`\n    background-color: transparent;\n    font-family: 'Nunito', sans-serif;\n    color: white;\n    font-size: 17px;\n    padding: 5px 10px;\n    border: 1px solid orange;\n    border-radius: 10px\n`\nexport default GameDescription"],"names":["ErrorComponent","_jsxs","Block","children","_jsx","Message","Image","src","mario","alt","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Loader","_ref","className","color","Wrapper","render","FidgetSpinner","backgroundColor","ballColors","props","css","StoresList","stores","List","map","_ref2","store","id","name","domain","href","concat","FaSteam","FaPlaystation","FaAppStore","SiGogdotcom","FaXbox","RiXboxLine","SiNintendo","SiEpicgames","FaGooglePlay","FaItchIo","BookmarkButton","gameData","userId","useContext","authContext","_useState","useState","_useState2","_slicedToArray","isFavourite","setIsFavourite","slug","useEffect","getFavouriteGames","then","res","val","Object","keys","some","el","catch","error","console","log","Button","type","onClick","removeGameFromFavourite","addGameToFavourite","prevState","BsFillBookmarkFill","size","BsBookmark","Comment","text","authorAvatar","setAuthorAvatar","_useState3","_useState4","authorUsername","setAuthorUsername","getUserInfo","_res$val","username","photoUrl","CommentWrapper","AuthorInfo","AvatarWrapper","AuthorAvatar","AuthorName","CommentText","_templateObject4","_templateObject5","_templateObject6","getAndFormatAuthorId","comment","split","getCommentText","values","Comments","comments","setComments","gameSlug","_useContext","isLoggedIn","Section","Form","onSubmit","e","preventDefault","commentInput","target","elements","commentText","value","leaveComment","prev","_toConsumableArray","_defineProperty","onFormSubmit","Input","required","placeholder","SubmitButton","length","CommentsList","Page","Info","Meta","Title","Year","Overview","Screenshots","_templateObject7","Screenshot","_templateObject8","ScreenshotWrapper","_templateObject9","ToggleShowButton","_templateObject10","title","setTitle","screenshots","setScreenshots","_useState5","_useState6","description","setDescription","_useState7","_useState8","setStores","_useState9","_useState10","year","setYear","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","setGameData","_useState15","_useState16","_useState17","_useState18","isError","setIsError","_useState19","_useState20","showOverview","setShowOverview","useParams","window","scroll","top","Promise","all","getGameById","getScreenshots","getComments","_res","game","data","description_raw","released","results","slice","entries","formatComments","Container","_Fragment","style","display","image","loading"],"sourceRoot":""}